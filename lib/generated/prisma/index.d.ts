
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model addresses
 * 
 */
export type addresses = $Result.DefaultSelection<Prisma.$addressesPayload>
/**
 * Model attendance
 * 
 */
export type attendance = $Result.DefaultSelection<Prisma.$attendancePayload>
/**
 * Model audit_logs
 * 
 */
export type audit_logs = $Result.DefaultSelection<Prisma.$audit_logsPayload>
/**
 * Model bank_details
 * 
 */
export type bank_details = $Result.DefaultSelection<Prisma.$bank_detailsPayload>
/**
 * Model candidates
 * 
 */
export type candidates = $Result.DefaultSelection<Prisma.$candidatesPayload>
/**
 * Model compliance_documents
 * 
 */
export type compliance_documents = $Result.DefaultSelection<Prisma.$compliance_documentsPayload>
/**
 * Model compliance_status
 * 
 */
export type compliance_status = $Result.DefaultSelection<Prisma.$compliance_statusPayload>
/**
 * Model employees
 * 
 */
export type employees = $Result.DefaultSelection<Prisma.$employeesPayload>
/**
 * Model main_employee
 * 
 */
export type main_employee = $Result.DefaultSelection<Prisma.$main_employeePayload>
/**
 * Model leave_types
 * 
 */
export type leave_types = $Result.DefaultSelection<Prisma.$leave_typesPayload>
/**
 * Model leave_balances
 * 
 */
export type leave_balances = $Result.DefaultSelection<Prisma.$leave_balancesPayload>
/**
 * Model leave_requests
 * 
 */
export type leave_requests = $Result.DefaultSelection<Prisma.$leave_requestsPayload>
/**
 * Model users
 * 
 */
export type users = $Result.DefaultSelection<Prisma.$usersPayload>
/**
 * Model payroll
 * 
 */
export type payroll = $Result.DefaultSelection<Prisma.$payrollPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const compliance_status_overall_status: {
  Compliant: 'Compliant',
  Expiring_Soon: 'Expiring_Soon',
  Non_compliant: 'Non_compliant'
};

export type compliance_status_overall_status = (typeof compliance_status_overall_status)[keyof typeof compliance_status_overall_status]


export const leave_types_type_name: {
  Sick_Leave: 'Sick_Leave',
  Casual_Leave: 'Casual_Leave',
  Earned_Leave: 'Earned_Leave',
  Maternity_Leave: 'Maternity_Leave',
  Unpaid_Leave: 'Unpaid_Leave'
};

export type leave_types_type_name = (typeof leave_types_type_name)[keyof typeof leave_types_type_name]


export const leave_requests_status: {
  Pending: 'Pending',
  Approved: 'Approved',
  Rejected: 'Rejected'
};

export type leave_requests_status = (typeof leave_requests_status)[keyof typeof leave_requests_status]


export const attendance_attendance_status: {
  Present: 'Present',
  Absent: 'Absent'
};

export type attendance_attendance_status = (typeof attendance_attendance_status)[keyof typeof attendance_attendance_status]


export const candidates_status: {
  Pending: 'Pending',
  Mail_Sent: 'Mail_Sent',
  Document_Submitted: 'Document_Submitted',
  Selected: 'Selected',
  Rejected: 'Rejected',
  Waiting: 'Waiting'
};

export type candidates_status = (typeof candidates_status)[keyof typeof candidates_status]


export const users_role: {
  hr: 'hr',
  employee: 'employee',
  admin: 'admin',
  ceo: 'ceo'
};

export type users_role = (typeof users_role)[keyof typeof users_role]


export const users_verified: {
  verified: 'verified',
  not_verified: 'not_verified'
};

export type users_verified = (typeof users_verified)[keyof typeof users_verified]


export const employees_employee_type: {
  Full_time: 'Full_time',
  Intern: 'Intern',
  Contractor: 'Contractor'
};

export type employees_employee_type = (typeof employees_employee_type)[keyof typeof employees_employee_type]

}

export type compliance_status_overall_status = $Enums.compliance_status_overall_status

export const compliance_status_overall_status: typeof $Enums.compliance_status_overall_status

export type leave_types_type_name = $Enums.leave_types_type_name

export const leave_types_type_name: typeof $Enums.leave_types_type_name

export type leave_requests_status = $Enums.leave_requests_status

export const leave_requests_status: typeof $Enums.leave_requests_status

export type attendance_attendance_status = $Enums.attendance_attendance_status

export const attendance_attendance_status: typeof $Enums.attendance_attendance_status

export type candidates_status = $Enums.candidates_status

export const candidates_status: typeof $Enums.candidates_status

export type users_role = $Enums.users_role

export const users_role: typeof $Enums.users_role

export type users_verified = $Enums.users_verified

export const users_verified: typeof $Enums.users_verified

export type employees_employee_type = $Enums.employees_employee_type

export const employees_employee_type: typeof $Enums.employees_employee_type

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Addresses
 * const addresses = await prisma.addresses.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Addresses
   * const addresses = await prisma.addresses.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.addresses`: Exposes CRUD operations for the **addresses** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Addresses
    * const addresses = await prisma.addresses.findMany()
    * ```
    */
  get addresses(): Prisma.addressesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.attendance`: Exposes CRUD operations for the **attendance** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Attendances
    * const attendances = await prisma.attendance.findMany()
    * ```
    */
  get attendance(): Prisma.attendanceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.audit_logs`: Exposes CRUD operations for the **audit_logs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Audit_logs
    * const audit_logs = await prisma.audit_logs.findMany()
    * ```
    */
  get audit_logs(): Prisma.audit_logsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.bank_details`: Exposes CRUD operations for the **bank_details** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Bank_details
    * const bank_details = await prisma.bank_details.findMany()
    * ```
    */
  get bank_details(): Prisma.bank_detailsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.candidates`: Exposes CRUD operations for the **candidates** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Candidates
    * const candidates = await prisma.candidates.findMany()
    * ```
    */
  get candidates(): Prisma.candidatesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.compliance_documents`: Exposes CRUD operations for the **compliance_documents** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Compliance_documents
    * const compliance_documents = await prisma.compliance_documents.findMany()
    * ```
    */
  get compliance_documents(): Prisma.compliance_documentsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.compliance_status`: Exposes CRUD operations for the **compliance_status** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Compliance_statuses
    * const compliance_statuses = await prisma.compliance_status.findMany()
    * ```
    */
  get compliance_status(): Prisma.compliance_statusDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.employees`: Exposes CRUD operations for the **employees** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Employees
    * const employees = await prisma.employees.findMany()
    * ```
    */
  get employees(): Prisma.employeesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.main_employee`: Exposes CRUD operations for the **main_employee** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Main_employees
    * const main_employees = await prisma.main_employee.findMany()
    * ```
    */
  get main_employee(): Prisma.main_employeeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.leave_types`: Exposes CRUD operations for the **leave_types** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Leave_types
    * const leave_types = await prisma.leave_types.findMany()
    * ```
    */
  get leave_types(): Prisma.leave_typesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.leave_balances`: Exposes CRUD operations for the **leave_balances** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Leave_balances
    * const leave_balances = await prisma.leave_balances.findMany()
    * ```
    */
  get leave_balances(): Prisma.leave_balancesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.leave_requests`: Exposes CRUD operations for the **leave_requests** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Leave_requests
    * const leave_requests = await prisma.leave_requests.findMany()
    * ```
    */
  get leave_requests(): Prisma.leave_requestsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.users`: Exposes CRUD operations for the **users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.usersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.payroll`: Exposes CRUD operations for the **payroll** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Payrolls
    * const payrolls = await prisma.payroll.findMany()
    * ```
    */
  get payroll(): Prisma.payrollDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.10.1
   * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    addresses: 'addresses',
    attendance: 'attendance',
    audit_logs: 'audit_logs',
    bank_details: 'bank_details',
    candidates: 'candidates',
    compliance_documents: 'compliance_documents',
    compliance_status: 'compliance_status',
    employees: 'employees',
    main_employee: 'main_employee',
    leave_types: 'leave_types',
    leave_balances: 'leave_balances',
    leave_requests: 'leave_requests',
    users: 'users',
    payroll: 'payroll'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "addresses" | "attendance" | "audit_logs" | "bank_details" | "candidates" | "compliance_documents" | "compliance_status" | "employees" | "main_employee" | "leave_types" | "leave_balances" | "leave_requests" | "users" | "payroll"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      addresses: {
        payload: Prisma.$addressesPayload<ExtArgs>
        fields: Prisma.addressesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.addressesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$addressesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.addressesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$addressesPayload>
          }
          findFirst: {
            args: Prisma.addressesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$addressesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.addressesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$addressesPayload>
          }
          findMany: {
            args: Prisma.addressesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$addressesPayload>[]
          }
          create: {
            args: Prisma.addressesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$addressesPayload>
          }
          createMany: {
            args: Prisma.addressesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.addressesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$addressesPayload>[]
          }
          delete: {
            args: Prisma.addressesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$addressesPayload>
          }
          update: {
            args: Prisma.addressesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$addressesPayload>
          }
          deleteMany: {
            args: Prisma.addressesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.addressesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.addressesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$addressesPayload>[]
          }
          upsert: {
            args: Prisma.addressesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$addressesPayload>
          }
          aggregate: {
            args: Prisma.AddressesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAddresses>
          }
          groupBy: {
            args: Prisma.addressesGroupByArgs<ExtArgs>
            result: $Utils.Optional<AddressesGroupByOutputType>[]
          }
          count: {
            args: Prisma.addressesCountArgs<ExtArgs>
            result: $Utils.Optional<AddressesCountAggregateOutputType> | number
          }
        }
      }
      attendance: {
        payload: Prisma.$attendancePayload<ExtArgs>
        fields: Prisma.attendanceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.attendanceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attendancePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.attendanceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attendancePayload>
          }
          findFirst: {
            args: Prisma.attendanceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attendancePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.attendanceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attendancePayload>
          }
          findMany: {
            args: Prisma.attendanceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attendancePayload>[]
          }
          create: {
            args: Prisma.attendanceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attendancePayload>
          }
          createMany: {
            args: Prisma.attendanceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.attendanceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attendancePayload>[]
          }
          delete: {
            args: Prisma.attendanceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attendancePayload>
          }
          update: {
            args: Prisma.attendanceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attendancePayload>
          }
          deleteMany: {
            args: Prisma.attendanceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.attendanceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.attendanceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attendancePayload>[]
          }
          upsert: {
            args: Prisma.attendanceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attendancePayload>
          }
          aggregate: {
            args: Prisma.AttendanceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAttendance>
          }
          groupBy: {
            args: Prisma.attendanceGroupByArgs<ExtArgs>
            result: $Utils.Optional<AttendanceGroupByOutputType>[]
          }
          count: {
            args: Prisma.attendanceCountArgs<ExtArgs>
            result: $Utils.Optional<AttendanceCountAggregateOutputType> | number
          }
        }
      }
      audit_logs: {
        payload: Prisma.$audit_logsPayload<ExtArgs>
        fields: Prisma.audit_logsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.audit_logsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_logsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.audit_logsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_logsPayload>
          }
          findFirst: {
            args: Prisma.audit_logsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_logsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.audit_logsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_logsPayload>
          }
          findMany: {
            args: Prisma.audit_logsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_logsPayload>[]
          }
          create: {
            args: Prisma.audit_logsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_logsPayload>
          }
          createMany: {
            args: Prisma.audit_logsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.audit_logsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_logsPayload>[]
          }
          delete: {
            args: Prisma.audit_logsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_logsPayload>
          }
          update: {
            args: Prisma.audit_logsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_logsPayload>
          }
          deleteMany: {
            args: Prisma.audit_logsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.audit_logsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.audit_logsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_logsPayload>[]
          }
          upsert: {
            args: Prisma.audit_logsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_logsPayload>
          }
          aggregate: {
            args: Prisma.Audit_logsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAudit_logs>
          }
          groupBy: {
            args: Prisma.audit_logsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Audit_logsGroupByOutputType>[]
          }
          count: {
            args: Prisma.audit_logsCountArgs<ExtArgs>
            result: $Utils.Optional<Audit_logsCountAggregateOutputType> | number
          }
        }
      }
      bank_details: {
        payload: Prisma.$bank_detailsPayload<ExtArgs>
        fields: Prisma.bank_detailsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.bank_detailsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bank_detailsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.bank_detailsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bank_detailsPayload>
          }
          findFirst: {
            args: Prisma.bank_detailsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bank_detailsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.bank_detailsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bank_detailsPayload>
          }
          findMany: {
            args: Prisma.bank_detailsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bank_detailsPayload>[]
          }
          create: {
            args: Prisma.bank_detailsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bank_detailsPayload>
          }
          createMany: {
            args: Prisma.bank_detailsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.bank_detailsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bank_detailsPayload>[]
          }
          delete: {
            args: Prisma.bank_detailsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bank_detailsPayload>
          }
          update: {
            args: Prisma.bank_detailsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bank_detailsPayload>
          }
          deleteMany: {
            args: Prisma.bank_detailsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.bank_detailsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.bank_detailsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bank_detailsPayload>[]
          }
          upsert: {
            args: Prisma.bank_detailsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bank_detailsPayload>
          }
          aggregate: {
            args: Prisma.Bank_detailsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBank_details>
          }
          groupBy: {
            args: Prisma.bank_detailsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Bank_detailsGroupByOutputType>[]
          }
          count: {
            args: Prisma.bank_detailsCountArgs<ExtArgs>
            result: $Utils.Optional<Bank_detailsCountAggregateOutputType> | number
          }
        }
      }
      candidates: {
        payload: Prisma.$candidatesPayload<ExtArgs>
        fields: Prisma.candidatesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.candidatesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$candidatesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.candidatesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$candidatesPayload>
          }
          findFirst: {
            args: Prisma.candidatesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$candidatesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.candidatesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$candidatesPayload>
          }
          findMany: {
            args: Prisma.candidatesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$candidatesPayload>[]
          }
          create: {
            args: Prisma.candidatesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$candidatesPayload>
          }
          createMany: {
            args: Prisma.candidatesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.candidatesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$candidatesPayload>[]
          }
          delete: {
            args: Prisma.candidatesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$candidatesPayload>
          }
          update: {
            args: Prisma.candidatesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$candidatesPayload>
          }
          deleteMany: {
            args: Prisma.candidatesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.candidatesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.candidatesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$candidatesPayload>[]
          }
          upsert: {
            args: Prisma.candidatesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$candidatesPayload>
          }
          aggregate: {
            args: Prisma.CandidatesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCandidates>
          }
          groupBy: {
            args: Prisma.candidatesGroupByArgs<ExtArgs>
            result: $Utils.Optional<CandidatesGroupByOutputType>[]
          }
          count: {
            args: Prisma.candidatesCountArgs<ExtArgs>
            result: $Utils.Optional<CandidatesCountAggregateOutputType> | number
          }
        }
      }
      compliance_documents: {
        payload: Prisma.$compliance_documentsPayload<ExtArgs>
        fields: Prisma.compliance_documentsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.compliance_documentsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compliance_documentsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.compliance_documentsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compliance_documentsPayload>
          }
          findFirst: {
            args: Prisma.compliance_documentsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compliance_documentsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.compliance_documentsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compliance_documentsPayload>
          }
          findMany: {
            args: Prisma.compliance_documentsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compliance_documentsPayload>[]
          }
          create: {
            args: Prisma.compliance_documentsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compliance_documentsPayload>
          }
          createMany: {
            args: Prisma.compliance_documentsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.compliance_documentsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compliance_documentsPayload>[]
          }
          delete: {
            args: Prisma.compliance_documentsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compliance_documentsPayload>
          }
          update: {
            args: Prisma.compliance_documentsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compliance_documentsPayload>
          }
          deleteMany: {
            args: Prisma.compliance_documentsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.compliance_documentsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.compliance_documentsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compliance_documentsPayload>[]
          }
          upsert: {
            args: Prisma.compliance_documentsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compliance_documentsPayload>
          }
          aggregate: {
            args: Prisma.Compliance_documentsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCompliance_documents>
          }
          groupBy: {
            args: Prisma.compliance_documentsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Compliance_documentsGroupByOutputType>[]
          }
          count: {
            args: Prisma.compliance_documentsCountArgs<ExtArgs>
            result: $Utils.Optional<Compliance_documentsCountAggregateOutputType> | number
          }
        }
      }
      compliance_status: {
        payload: Prisma.$compliance_statusPayload<ExtArgs>
        fields: Prisma.compliance_statusFieldRefs
        operations: {
          findUnique: {
            args: Prisma.compliance_statusFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compliance_statusPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.compliance_statusFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compliance_statusPayload>
          }
          findFirst: {
            args: Prisma.compliance_statusFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compliance_statusPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.compliance_statusFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compliance_statusPayload>
          }
          findMany: {
            args: Prisma.compliance_statusFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compliance_statusPayload>[]
          }
          create: {
            args: Prisma.compliance_statusCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compliance_statusPayload>
          }
          createMany: {
            args: Prisma.compliance_statusCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.compliance_statusCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compliance_statusPayload>[]
          }
          delete: {
            args: Prisma.compliance_statusDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compliance_statusPayload>
          }
          update: {
            args: Prisma.compliance_statusUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compliance_statusPayload>
          }
          deleteMany: {
            args: Prisma.compliance_statusDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.compliance_statusUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.compliance_statusUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compliance_statusPayload>[]
          }
          upsert: {
            args: Prisma.compliance_statusUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compliance_statusPayload>
          }
          aggregate: {
            args: Prisma.Compliance_statusAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCompliance_status>
          }
          groupBy: {
            args: Prisma.compliance_statusGroupByArgs<ExtArgs>
            result: $Utils.Optional<Compliance_statusGroupByOutputType>[]
          }
          count: {
            args: Prisma.compliance_statusCountArgs<ExtArgs>
            result: $Utils.Optional<Compliance_statusCountAggregateOutputType> | number
          }
        }
      }
      employees: {
        payload: Prisma.$employeesPayload<ExtArgs>
        fields: Prisma.employeesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.employeesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employeesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.employeesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employeesPayload>
          }
          findFirst: {
            args: Prisma.employeesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employeesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.employeesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employeesPayload>
          }
          findMany: {
            args: Prisma.employeesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employeesPayload>[]
          }
          create: {
            args: Prisma.employeesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employeesPayload>
          }
          createMany: {
            args: Prisma.employeesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.employeesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employeesPayload>[]
          }
          delete: {
            args: Prisma.employeesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employeesPayload>
          }
          update: {
            args: Prisma.employeesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employeesPayload>
          }
          deleteMany: {
            args: Prisma.employeesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.employeesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.employeesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employeesPayload>[]
          }
          upsert: {
            args: Prisma.employeesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employeesPayload>
          }
          aggregate: {
            args: Prisma.EmployeesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEmployees>
          }
          groupBy: {
            args: Prisma.employeesGroupByArgs<ExtArgs>
            result: $Utils.Optional<EmployeesGroupByOutputType>[]
          }
          count: {
            args: Prisma.employeesCountArgs<ExtArgs>
            result: $Utils.Optional<EmployeesCountAggregateOutputType> | number
          }
        }
      }
      main_employee: {
        payload: Prisma.$main_employeePayload<ExtArgs>
        fields: Prisma.main_employeeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.main_employeeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$main_employeePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.main_employeeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$main_employeePayload>
          }
          findFirst: {
            args: Prisma.main_employeeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$main_employeePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.main_employeeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$main_employeePayload>
          }
          findMany: {
            args: Prisma.main_employeeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$main_employeePayload>[]
          }
          create: {
            args: Prisma.main_employeeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$main_employeePayload>
          }
          createMany: {
            args: Prisma.main_employeeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.main_employeeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$main_employeePayload>[]
          }
          delete: {
            args: Prisma.main_employeeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$main_employeePayload>
          }
          update: {
            args: Prisma.main_employeeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$main_employeePayload>
          }
          deleteMany: {
            args: Prisma.main_employeeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.main_employeeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.main_employeeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$main_employeePayload>[]
          }
          upsert: {
            args: Prisma.main_employeeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$main_employeePayload>
          }
          aggregate: {
            args: Prisma.Main_employeeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMain_employee>
          }
          groupBy: {
            args: Prisma.main_employeeGroupByArgs<ExtArgs>
            result: $Utils.Optional<Main_employeeGroupByOutputType>[]
          }
          count: {
            args: Prisma.main_employeeCountArgs<ExtArgs>
            result: $Utils.Optional<Main_employeeCountAggregateOutputType> | number
          }
        }
      }
      leave_types: {
        payload: Prisma.$leave_typesPayload<ExtArgs>
        fields: Prisma.leave_typesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.leave_typesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_typesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.leave_typesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_typesPayload>
          }
          findFirst: {
            args: Prisma.leave_typesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_typesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.leave_typesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_typesPayload>
          }
          findMany: {
            args: Prisma.leave_typesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_typesPayload>[]
          }
          create: {
            args: Prisma.leave_typesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_typesPayload>
          }
          createMany: {
            args: Prisma.leave_typesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.leave_typesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_typesPayload>[]
          }
          delete: {
            args: Prisma.leave_typesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_typesPayload>
          }
          update: {
            args: Prisma.leave_typesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_typesPayload>
          }
          deleteMany: {
            args: Prisma.leave_typesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.leave_typesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.leave_typesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_typesPayload>[]
          }
          upsert: {
            args: Prisma.leave_typesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_typesPayload>
          }
          aggregate: {
            args: Prisma.Leave_typesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLeave_types>
          }
          groupBy: {
            args: Prisma.leave_typesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Leave_typesGroupByOutputType>[]
          }
          count: {
            args: Prisma.leave_typesCountArgs<ExtArgs>
            result: $Utils.Optional<Leave_typesCountAggregateOutputType> | number
          }
        }
      }
      leave_balances: {
        payload: Prisma.$leave_balancesPayload<ExtArgs>
        fields: Prisma.leave_balancesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.leave_balancesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_balancesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.leave_balancesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_balancesPayload>
          }
          findFirst: {
            args: Prisma.leave_balancesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_balancesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.leave_balancesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_balancesPayload>
          }
          findMany: {
            args: Prisma.leave_balancesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_balancesPayload>[]
          }
          create: {
            args: Prisma.leave_balancesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_balancesPayload>
          }
          createMany: {
            args: Prisma.leave_balancesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.leave_balancesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_balancesPayload>[]
          }
          delete: {
            args: Prisma.leave_balancesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_balancesPayload>
          }
          update: {
            args: Prisma.leave_balancesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_balancesPayload>
          }
          deleteMany: {
            args: Prisma.leave_balancesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.leave_balancesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.leave_balancesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_balancesPayload>[]
          }
          upsert: {
            args: Prisma.leave_balancesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_balancesPayload>
          }
          aggregate: {
            args: Prisma.Leave_balancesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLeave_balances>
          }
          groupBy: {
            args: Prisma.leave_balancesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Leave_balancesGroupByOutputType>[]
          }
          count: {
            args: Prisma.leave_balancesCountArgs<ExtArgs>
            result: $Utils.Optional<Leave_balancesCountAggregateOutputType> | number
          }
        }
      }
      leave_requests: {
        payload: Prisma.$leave_requestsPayload<ExtArgs>
        fields: Prisma.leave_requestsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.leave_requestsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_requestsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.leave_requestsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_requestsPayload>
          }
          findFirst: {
            args: Prisma.leave_requestsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_requestsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.leave_requestsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_requestsPayload>
          }
          findMany: {
            args: Prisma.leave_requestsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_requestsPayload>[]
          }
          create: {
            args: Prisma.leave_requestsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_requestsPayload>
          }
          createMany: {
            args: Prisma.leave_requestsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.leave_requestsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_requestsPayload>[]
          }
          delete: {
            args: Prisma.leave_requestsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_requestsPayload>
          }
          update: {
            args: Prisma.leave_requestsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_requestsPayload>
          }
          deleteMany: {
            args: Prisma.leave_requestsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.leave_requestsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.leave_requestsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_requestsPayload>[]
          }
          upsert: {
            args: Prisma.leave_requestsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leave_requestsPayload>
          }
          aggregate: {
            args: Prisma.Leave_requestsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLeave_requests>
          }
          groupBy: {
            args: Prisma.leave_requestsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Leave_requestsGroupByOutputType>[]
          }
          count: {
            args: Prisma.leave_requestsCountArgs<ExtArgs>
            result: $Utils.Optional<Leave_requestsCountAggregateOutputType> | number
          }
        }
      }
      users: {
        payload: Prisma.$usersPayload<ExtArgs>
        fields: Prisma.usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findFirst: {
            args: Prisma.usersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findMany: {
            args: Prisma.usersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          create: {
            args: Prisma.usersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          createMany: {
            args: Prisma.usersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.usersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          delete: {
            args: Prisma.usersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          update: {
            args: Prisma.usersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          deleteMany: {
            args: Prisma.usersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.usersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          upsert: {
            args: Prisma.usersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.usersGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.usersCountArgs<ExtArgs>
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
      payroll: {
        payload: Prisma.$payrollPayload<ExtArgs>
        fields: Prisma.payrollFieldRefs
        operations: {
          findUnique: {
            args: Prisma.payrollFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$payrollPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.payrollFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$payrollPayload>
          }
          findFirst: {
            args: Prisma.payrollFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$payrollPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.payrollFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$payrollPayload>
          }
          findMany: {
            args: Prisma.payrollFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$payrollPayload>[]
          }
          create: {
            args: Prisma.payrollCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$payrollPayload>
          }
          createMany: {
            args: Prisma.payrollCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.payrollCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$payrollPayload>[]
          }
          delete: {
            args: Prisma.payrollDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$payrollPayload>
          }
          update: {
            args: Prisma.payrollUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$payrollPayload>
          }
          deleteMany: {
            args: Prisma.payrollDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.payrollUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.payrollUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$payrollPayload>[]
          }
          upsert: {
            args: Prisma.payrollUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$payrollPayload>
          }
          aggregate: {
            args: Prisma.PayrollAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePayroll>
          }
          groupBy: {
            args: Prisma.payrollGroupByArgs<ExtArgs>
            result: $Utils.Optional<PayrollGroupByOutputType>[]
          }
          count: {
            args: Prisma.payrollCountArgs<ExtArgs>
            result: $Utils.Optional<PayrollCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    addresses?: addressesOmit
    attendance?: attendanceOmit
    audit_logs?: audit_logsOmit
    bank_details?: bank_detailsOmit
    candidates?: candidatesOmit
    compliance_documents?: compliance_documentsOmit
    compliance_status?: compliance_statusOmit
    employees?: employeesOmit
    main_employee?: main_employeeOmit
    leave_types?: leave_typesOmit
    leave_balances?: leave_balancesOmit
    leave_requests?: leave_requestsOmit
    users?: usersOmit
    payroll?: payrollOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type EmployeesCountOutputType
   */

  export type EmployeesCountOutputType = {
    addresses: number
    audit_logs_audit_logs_empidToemployees: number
    audit_logs_audit_logs_performed_byToemployees: number
    bank_details: number
    compliance_documents: number
  }

  export type EmployeesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    addresses?: boolean | EmployeesCountOutputTypeCountAddressesArgs
    audit_logs_audit_logs_empidToemployees?: boolean | EmployeesCountOutputTypeCountAudit_logs_audit_logs_empidToemployeesArgs
    audit_logs_audit_logs_performed_byToemployees?: boolean | EmployeesCountOutputTypeCountAudit_logs_audit_logs_performed_byToemployeesArgs
    bank_details?: boolean | EmployeesCountOutputTypeCountBank_detailsArgs
    compliance_documents?: boolean | EmployeesCountOutputTypeCountCompliance_documentsArgs
  }

  // Custom InputTypes
  /**
   * EmployeesCountOutputType without action
   */
  export type EmployeesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmployeesCountOutputType
     */
    select?: EmployeesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EmployeesCountOutputType without action
   */
  export type EmployeesCountOutputTypeCountAddressesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: addressesWhereInput
  }

  /**
   * EmployeesCountOutputType without action
   */
  export type EmployeesCountOutputTypeCountAudit_logs_audit_logs_empidToemployeesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: audit_logsWhereInput
  }

  /**
   * EmployeesCountOutputType without action
   */
  export type EmployeesCountOutputTypeCountAudit_logs_audit_logs_performed_byToemployeesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: audit_logsWhereInput
  }

  /**
   * EmployeesCountOutputType without action
   */
  export type EmployeesCountOutputTypeCountBank_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: bank_detailsWhereInput
  }

  /**
   * EmployeesCountOutputType without action
   */
  export type EmployeesCountOutputTypeCountCompliance_documentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: compliance_documentsWhereInput
  }


  /**
   * Count Type Leave_typesCountOutputType
   */

  export type Leave_typesCountOutputType = {
    leave_balances: number
  }

  export type Leave_typesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    leave_balances?: boolean | Leave_typesCountOutputTypeCountLeave_balancesArgs
  }

  // Custom InputTypes
  /**
   * Leave_typesCountOutputType without action
   */
  export type Leave_typesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Leave_typesCountOutputType
     */
    select?: Leave_typesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Leave_typesCountOutputType without action
   */
  export type Leave_typesCountOutputTypeCountLeave_balancesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: leave_balancesWhereInput
  }


  /**
   * Count Type UsersCountOutputType
   */

  export type UsersCountOutputType = {
    employees: number
    leave_balances: number
    leave_requests: number
    payroll: number
  }

  export type UsersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employees?: boolean | UsersCountOutputTypeCountEmployeesArgs
    leave_balances?: boolean | UsersCountOutputTypeCountLeave_balancesArgs
    leave_requests?: boolean | UsersCountOutputTypeCountLeave_requestsArgs
    payroll?: boolean | UsersCountOutputTypeCountPayrollArgs
  }

  // Custom InputTypes
  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountEmployeesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: employeesWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountLeave_balancesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: leave_balancesWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountLeave_requestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: leave_requestsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountPayrollArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: payrollWhereInput
  }


  /**
   * Models
   */

  /**
   * Model addresses
   */

  export type AggregateAddresses = {
    _count: AddressesCountAggregateOutputType | null
    _avg: AddressesAvgAggregateOutputType | null
    _sum: AddressesSumAggregateOutputType | null
    _min: AddressesMinAggregateOutputType | null
    _max: AddressesMaxAggregateOutputType | null
  }

  export type AddressesAvgAggregateOutputType = {
    id: number | null
    employee_id: number | null
  }

  export type AddressesSumAggregateOutputType = {
    id: number | null
    employee_id: number | null
  }

  export type AddressesMinAggregateOutputType = {
    id: number | null
    employee_id: number | null
    address_line1: string | null
    address_line2: string | null
    city: string | null
    state: string | null
    country: string | null
    pincode: string | null
  }

  export type AddressesMaxAggregateOutputType = {
    id: number | null
    employee_id: number | null
    address_line1: string | null
    address_line2: string | null
    city: string | null
    state: string | null
    country: string | null
    pincode: string | null
  }

  export type AddressesCountAggregateOutputType = {
    id: number
    employee_id: number
    address_line1: number
    address_line2: number
    city: number
    state: number
    country: number
    pincode: number
    _all: number
  }


  export type AddressesAvgAggregateInputType = {
    id?: true
    employee_id?: true
  }

  export type AddressesSumAggregateInputType = {
    id?: true
    employee_id?: true
  }

  export type AddressesMinAggregateInputType = {
    id?: true
    employee_id?: true
    address_line1?: true
    address_line2?: true
    city?: true
    state?: true
    country?: true
    pincode?: true
  }

  export type AddressesMaxAggregateInputType = {
    id?: true
    employee_id?: true
    address_line1?: true
    address_line2?: true
    city?: true
    state?: true
    country?: true
    pincode?: true
  }

  export type AddressesCountAggregateInputType = {
    id?: true
    employee_id?: true
    address_line1?: true
    address_line2?: true
    city?: true
    state?: true
    country?: true
    pincode?: true
    _all?: true
  }

  export type AddressesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which addresses to aggregate.
     */
    where?: addressesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of addresses to fetch.
     */
    orderBy?: addressesOrderByWithRelationInput | addressesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: addressesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned addresses
    **/
    _count?: true | AddressesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AddressesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AddressesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AddressesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AddressesMaxAggregateInputType
  }

  export type GetAddressesAggregateType<T extends AddressesAggregateArgs> = {
        [P in keyof T & keyof AggregateAddresses]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAddresses[P]>
      : GetScalarType<T[P], AggregateAddresses[P]>
  }




  export type addressesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: addressesWhereInput
    orderBy?: addressesOrderByWithAggregationInput | addressesOrderByWithAggregationInput[]
    by: AddressesScalarFieldEnum[] | AddressesScalarFieldEnum
    having?: addressesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AddressesCountAggregateInputType | true
    _avg?: AddressesAvgAggregateInputType
    _sum?: AddressesSumAggregateInputType
    _min?: AddressesMinAggregateInputType
    _max?: AddressesMaxAggregateInputType
  }

  export type AddressesGroupByOutputType = {
    id: number
    employee_id: number
    address_line1: string
    address_line2: string | null
    city: string
    state: string
    country: string
    pincode: string
    _count: AddressesCountAggregateOutputType | null
    _avg: AddressesAvgAggregateOutputType | null
    _sum: AddressesSumAggregateOutputType | null
    _min: AddressesMinAggregateOutputType | null
    _max: AddressesMaxAggregateOutputType | null
  }

  type GetAddressesGroupByPayload<T extends addressesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AddressesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AddressesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AddressesGroupByOutputType[P]>
            : GetScalarType<T[P], AddressesGroupByOutputType[P]>
        }
      >
    >


  export type addressesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    employee_id?: boolean
    address_line1?: boolean
    address_line2?: boolean
    city?: boolean
    state?: boolean
    country?: boolean
    pincode?: boolean
    employees?: boolean | employeesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["addresses"]>

  export type addressesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    employee_id?: boolean
    address_line1?: boolean
    address_line2?: boolean
    city?: boolean
    state?: boolean
    country?: boolean
    pincode?: boolean
    employees?: boolean | employeesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["addresses"]>

  export type addressesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    employee_id?: boolean
    address_line1?: boolean
    address_line2?: boolean
    city?: boolean
    state?: boolean
    country?: boolean
    pincode?: boolean
    employees?: boolean | employeesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["addresses"]>

  export type addressesSelectScalar = {
    id?: boolean
    employee_id?: boolean
    address_line1?: boolean
    address_line2?: boolean
    city?: boolean
    state?: boolean
    country?: boolean
    pincode?: boolean
  }

  export type addressesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "employee_id" | "address_line1" | "address_line2" | "city" | "state" | "country" | "pincode", ExtArgs["result"]["addresses"]>
  export type addressesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employees?: boolean | employeesDefaultArgs<ExtArgs>
  }
  export type addressesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employees?: boolean | employeesDefaultArgs<ExtArgs>
  }
  export type addressesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employees?: boolean | employeesDefaultArgs<ExtArgs>
  }

  export type $addressesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "addresses"
    objects: {
      employees: Prisma.$employeesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      employee_id: number
      address_line1: string
      address_line2: string | null
      city: string
      state: string
      country: string
      pincode: string
    }, ExtArgs["result"]["addresses"]>
    composites: {}
  }

  type addressesGetPayload<S extends boolean | null | undefined | addressesDefaultArgs> = $Result.GetResult<Prisma.$addressesPayload, S>

  type addressesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<addressesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AddressesCountAggregateInputType | true
    }

  export interface addressesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['addresses'], meta: { name: 'addresses' } }
    /**
     * Find zero or one Addresses that matches the filter.
     * @param {addressesFindUniqueArgs} args - Arguments to find a Addresses
     * @example
     * // Get one Addresses
     * const addresses = await prisma.addresses.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends addressesFindUniqueArgs>(args: SelectSubset<T, addressesFindUniqueArgs<ExtArgs>>): Prisma__addressesClient<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Addresses that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {addressesFindUniqueOrThrowArgs} args - Arguments to find a Addresses
     * @example
     * // Get one Addresses
     * const addresses = await prisma.addresses.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends addressesFindUniqueOrThrowArgs>(args: SelectSubset<T, addressesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__addressesClient<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Addresses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {addressesFindFirstArgs} args - Arguments to find a Addresses
     * @example
     * // Get one Addresses
     * const addresses = await prisma.addresses.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends addressesFindFirstArgs>(args?: SelectSubset<T, addressesFindFirstArgs<ExtArgs>>): Prisma__addressesClient<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Addresses that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {addressesFindFirstOrThrowArgs} args - Arguments to find a Addresses
     * @example
     * // Get one Addresses
     * const addresses = await prisma.addresses.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends addressesFindFirstOrThrowArgs>(args?: SelectSubset<T, addressesFindFirstOrThrowArgs<ExtArgs>>): Prisma__addressesClient<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Addresses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {addressesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Addresses
     * const addresses = await prisma.addresses.findMany()
     * 
     * // Get first 10 Addresses
     * const addresses = await prisma.addresses.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const addressesWithIdOnly = await prisma.addresses.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends addressesFindManyArgs>(args?: SelectSubset<T, addressesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Addresses.
     * @param {addressesCreateArgs} args - Arguments to create a Addresses.
     * @example
     * // Create one Addresses
     * const Addresses = await prisma.addresses.create({
     *   data: {
     *     // ... data to create a Addresses
     *   }
     * })
     * 
     */
    create<T extends addressesCreateArgs>(args: SelectSubset<T, addressesCreateArgs<ExtArgs>>): Prisma__addressesClient<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Addresses.
     * @param {addressesCreateManyArgs} args - Arguments to create many Addresses.
     * @example
     * // Create many Addresses
     * const addresses = await prisma.addresses.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends addressesCreateManyArgs>(args?: SelectSubset<T, addressesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Addresses and returns the data saved in the database.
     * @param {addressesCreateManyAndReturnArgs} args - Arguments to create many Addresses.
     * @example
     * // Create many Addresses
     * const addresses = await prisma.addresses.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Addresses and only return the `id`
     * const addressesWithIdOnly = await prisma.addresses.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends addressesCreateManyAndReturnArgs>(args?: SelectSubset<T, addressesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Addresses.
     * @param {addressesDeleteArgs} args - Arguments to delete one Addresses.
     * @example
     * // Delete one Addresses
     * const Addresses = await prisma.addresses.delete({
     *   where: {
     *     // ... filter to delete one Addresses
     *   }
     * })
     * 
     */
    delete<T extends addressesDeleteArgs>(args: SelectSubset<T, addressesDeleteArgs<ExtArgs>>): Prisma__addressesClient<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Addresses.
     * @param {addressesUpdateArgs} args - Arguments to update one Addresses.
     * @example
     * // Update one Addresses
     * const addresses = await prisma.addresses.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends addressesUpdateArgs>(args: SelectSubset<T, addressesUpdateArgs<ExtArgs>>): Prisma__addressesClient<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Addresses.
     * @param {addressesDeleteManyArgs} args - Arguments to filter Addresses to delete.
     * @example
     * // Delete a few Addresses
     * const { count } = await prisma.addresses.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends addressesDeleteManyArgs>(args?: SelectSubset<T, addressesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {addressesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Addresses
     * const addresses = await prisma.addresses.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends addressesUpdateManyArgs>(args: SelectSubset<T, addressesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Addresses and returns the data updated in the database.
     * @param {addressesUpdateManyAndReturnArgs} args - Arguments to update many Addresses.
     * @example
     * // Update many Addresses
     * const addresses = await prisma.addresses.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Addresses and only return the `id`
     * const addressesWithIdOnly = await prisma.addresses.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends addressesUpdateManyAndReturnArgs>(args: SelectSubset<T, addressesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Addresses.
     * @param {addressesUpsertArgs} args - Arguments to update or create a Addresses.
     * @example
     * // Update or create a Addresses
     * const addresses = await prisma.addresses.upsert({
     *   create: {
     *     // ... data to create a Addresses
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Addresses we want to update
     *   }
     * })
     */
    upsert<T extends addressesUpsertArgs>(args: SelectSubset<T, addressesUpsertArgs<ExtArgs>>): Prisma__addressesClient<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {addressesCountArgs} args - Arguments to filter Addresses to count.
     * @example
     * // Count the number of Addresses
     * const count = await prisma.addresses.count({
     *   where: {
     *     // ... the filter for the Addresses we want to count
     *   }
     * })
    **/
    count<T extends addressesCountArgs>(
      args?: Subset<T, addressesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AddressesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AddressesAggregateArgs>(args: Subset<T, AddressesAggregateArgs>): Prisma.PrismaPromise<GetAddressesAggregateType<T>>

    /**
     * Group by Addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {addressesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends addressesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: addressesGroupByArgs['orderBy'] }
        : { orderBy?: addressesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, addressesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAddressesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the addresses model
   */
  readonly fields: addressesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for addresses.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__addressesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    employees<T extends employeesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, employeesDefaultArgs<ExtArgs>>): Prisma__employeesClient<$Result.GetResult<Prisma.$employeesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the addresses model
   */
  interface addressesFieldRefs {
    readonly id: FieldRef<"addresses", 'Int'>
    readonly employee_id: FieldRef<"addresses", 'Int'>
    readonly address_line1: FieldRef<"addresses", 'String'>
    readonly address_line2: FieldRef<"addresses", 'String'>
    readonly city: FieldRef<"addresses", 'String'>
    readonly state: FieldRef<"addresses", 'String'>
    readonly country: FieldRef<"addresses", 'String'>
    readonly pincode: FieldRef<"addresses", 'String'>
  }
    

  // Custom InputTypes
  /**
   * addresses findUnique
   */
  export type addressesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    /**
     * Filter, which addresses to fetch.
     */
    where: addressesWhereUniqueInput
  }

  /**
   * addresses findUniqueOrThrow
   */
  export type addressesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    /**
     * Filter, which addresses to fetch.
     */
    where: addressesWhereUniqueInput
  }

  /**
   * addresses findFirst
   */
  export type addressesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    /**
     * Filter, which addresses to fetch.
     */
    where?: addressesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of addresses to fetch.
     */
    orderBy?: addressesOrderByWithRelationInput | addressesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for addresses.
     */
    cursor?: addressesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of addresses.
     */
    distinct?: AddressesScalarFieldEnum | AddressesScalarFieldEnum[]
  }

  /**
   * addresses findFirstOrThrow
   */
  export type addressesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    /**
     * Filter, which addresses to fetch.
     */
    where?: addressesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of addresses to fetch.
     */
    orderBy?: addressesOrderByWithRelationInput | addressesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for addresses.
     */
    cursor?: addressesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of addresses.
     */
    distinct?: AddressesScalarFieldEnum | AddressesScalarFieldEnum[]
  }

  /**
   * addresses findMany
   */
  export type addressesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    /**
     * Filter, which addresses to fetch.
     */
    where?: addressesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of addresses to fetch.
     */
    orderBy?: addressesOrderByWithRelationInput | addressesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing addresses.
     */
    cursor?: addressesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` addresses.
     */
    skip?: number
    distinct?: AddressesScalarFieldEnum | AddressesScalarFieldEnum[]
  }

  /**
   * addresses create
   */
  export type addressesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    /**
     * The data needed to create a addresses.
     */
    data: XOR<addressesCreateInput, addressesUncheckedCreateInput>
  }

  /**
   * addresses createMany
   */
  export type addressesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many addresses.
     */
    data: addressesCreateManyInput | addressesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * addresses createManyAndReturn
   */
  export type addressesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * The data used to create many addresses.
     */
    data: addressesCreateManyInput | addressesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * addresses update
   */
  export type addressesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    /**
     * The data needed to update a addresses.
     */
    data: XOR<addressesUpdateInput, addressesUncheckedUpdateInput>
    /**
     * Choose, which addresses to update.
     */
    where: addressesWhereUniqueInput
  }

  /**
   * addresses updateMany
   */
  export type addressesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update addresses.
     */
    data: XOR<addressesUpdateManyMutationInput, addressesUncheckedUpdateManyInput>
    /**
     * Filter which addresses to update
     */
    where?: addressesWhereInput
    /**
     * Limit how many addresses to update.
     */
    limit?: number
  }

  /**
   * addresses updateManyAndReturn
   */
  export type addressesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * The data used to update addresses.
     */
    data: XOR<addressesUpdateManyMutationInput, addressesUncheckedUpdateManyInput>
    /**
     * Filter which addresses to update
     */
    where?: addressesWhereInput
    /**
     * Limit how many addresses to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * addresses upsert
   */
  export type addressesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    /**
     * The filter to search for the addresses to update in case it exists.
     */
    where: addressesWhereUniqueInput
    /**
     * In case the addresses found by the `where` argument doesn't exist, create a new addresses with this data.
     */
    create: XOR<addressesCreateInput, addressesUncheckedCreateInput>
    /**
     * In case the addresses was found with the provided `where` argument, update it with this data.
     */
    update: XOR<addressesUpdateInput, addressesUncheckedUpdateInput>
  }

  /**
   * addresses delete
   */
  export type addressesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    /**
     * Filter which addresses to delete.
     */
    where: addressesWhereUniqueInput
  }

  /**
   * addresses deleteMany
   */
  export type addressesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which addresses to delete
     */
    where?: addressesWhereInput
    /**
     * Limit how many addresses to delete.
     */
    limit?: number
  }

  /**
   * addresses without action
   */
  export type addressesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
  }


  /**
   * Model attendance
   */

  export type AggregateAttendance = {
    _count: AttendanceCountAggregateOutputType | null
    _avg: AttendanceAvgAggregateOutputType | null
    _sum: AttendanceSumAggregateOutputType | null
    _min: AttendanceMinAggregateOutputType | null
    _max: AttendanceMaxAggregateOutputType | null
  }

  export type AttendanceAvgAggregateOutputType = {
    id: number | null
    total_hours: Decimal | null
  }

  export type AttendanceSumAggregateOutputType = {
    id: number | null
    total_hours: Decimal | null
  }

  export type AttendanceMinAggregateOutputType = {
    id: number | null
    empid: string | null
    check_in: Date | null
    check_out: Date | null
    total_hours: Decimal | null
    date: Date | null
    created_at: Date | null
    attendance_status: $Enums.attendance_attendance_status | null
  }

  export type AttendanceMaxAggregateOutputType = {
    id: number | null
    empid: string | null
    check_in: Date | null
    check_out: Date | null
    total_hours: Decimal | null
    date: Date | null
    created_at: Date | null
    attendance_status: $Enums.attendance_attendance_status | null
  }

  export type AttendanceCountAggregateOutputType = {
    id: number
    empid: number
    check_in: number
    check_out: number
    total_hours: number
    date: number
    created_at: number
    attendance_status: number
    _all: number
  }


  export type AttendanceAvgAggregateInputType = {
    id?: true
    total_hours?: true
  }

  export type AttendanceSumAggregateInputType = {
    id?: true
    total_hours?: true
  }

  export type AttendanceMinAggregateInputType = {
    id?: true
    empid?: true
    check_in?: true
    check_out?: true
    total_hours?: true
    date?: true
    created_at?: true
    attendance_status?: true
  }

  export type AttendanceMaxAggregateInputType = {
    id?: true
    empid?: true
    check_in?: true
    check_out?: true
    total_hours?: true
    date?: true
    created_at?: true
    attendance_status?: true
  }

  export type AttendanceCountAggregateInputType = {
    id?: true
    empid?: true
    check_in?: true
    check_out?: true
    total_hours?: true
    date?: true
    created_at?: true
    attendance_status?: true
    _all?: true
  }

  export type AttendanceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which attendance to aggregate.
     */
    where?: attendanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of attendances to fetch.
     */
    orderBy?: attendanceOrderByWithRelationInput | attendanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: attendanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` attendances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` attendances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned attendances
    **/
    _count?: true | AttendanceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AttendanceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AttendanceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AttendanceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AttendanceMaxAggregateInputType
  }

  export type GetAttendanceAggregateType<T extends AttendanceAggregateArgs> = {
        [P in keyof T & keyof AggregateAttendance]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAttendance[P]>
      : GetScalarType<T[P], AggregateAttendance[P]>
  }




  export type attendanceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: attendanceWhereInput
    orderBy?: attendanceOrderByWithAggregationInput | attendanceOrderByWithAggregationInput[]
    by: AttendanceScalarFieldEnum[] | AttendanceScalarFieldEnum
    having?: attendanceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AttendanceCountAggregateInputType | true
    _avg?: AttendanceAvgAggregateInputType
    _sum?: AttendanceSumAggregateInputType
    _min?: AttendanceMinAggregateInputType
    _max?: AttendanceMaxAggregateInputType
  }

  export type AttendanceGroupByOutputType = {
    id: number
    empid: string
    check_in: Date | null
    check_out: Date | null
    total_hours: Decimal | null
    date: Date | null
    created_at: Date | null
    attendance_status: $Enums.attendance_attendance_status | null
    _count: AttendanceCountAggregateOutputType | null
    _avg: AttendanceAvgAggregateOutputType | null
    _sum: AttendanceSumAggregateOutputType | null
    _min: AttendanceMinAggregateOutputType | null
    _max: AttendanceMaxAggregateOutputType | null
  }

  type GetAttendanceGroupByPayload<T extends attendanceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AttendanceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AttendanceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AttendanceGroupByOutputType[P]>
            : GetScalarType<T[P], AttendanceGroupByOutputType[P]>
        }
      >
    >


  export type attendanceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    empid?: boolean
    check_in?: boolean
    check_out?: boolean
    total_hours?: boolean
    date?: boolean
    created_at?: boolean
    attendance_status?: boolean
  }, ExtArgs["result"]["attendance"]>

  export type attendanceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    empid?: boolean
    check_in?: boolean
    check_out?: boolean
    total_hours?: boolean
    date?: boolean
    created_at?: boolean
    attendance_status?: boolean
  }, ExtArgs["result"]["attendance"]>

  export type attendanceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    empid?: boolean
    check_in?: boolean
    check_out?: boolean
    total_hours?: boolean
    date?: boolean
    created_at?: boolean
    attendance_status?: boolean
  }, ExtArgs["result"]["attendance"]>

  export type attendanceSelectScalar = {
    id?: boolean
    empid?: boolean
    check_in?: boolean
    check_out?: boolean
    total_hours?: boolean
    date?: boolean
    created_at?: boolean
    attendance_status?: boolean
  }

  export type attendanceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "empid" | "check_in" | "check_out" | "total_hours" | "date" | "created_at" | "attendance_status", ExtArgs["result"]["attendance"]>

  export type $attendancePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "attendance"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      empid: string
      check_in: Date | null
      check_out: Date | null
      total_hours: Prisma.Decimal | null
      date: Date | null
      created_at: Date | null
      attendance_status: $Enums.attendance_attendance_status | null
    }, ExtArgs["result"]["attendance"]>
    composites: {}
  }

  type attendanceGetPayload<S extends boolean | null | undefined | attendanceDefaultArgs> = $Result.GetResult<Prisma.$attendancePayload, S>

  type attendanceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<attendanceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AttendanceCountAggregateInputType | true
    }

  export interface attendanceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['attendance'], meta: { name: 'attendance' } }
    /**
     * Find zero or one Attendance that matches the filter.
     * @param {attendanceFindUniqueArgs} args - Arguments to find a Attendance
     * @example
     * // Get one Attendance
     * const attendance = await prisma.attendance.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends attendanceFindUniqueArgs>(args: SelectSubset<T, attendanceFindUniqueArgs<ExtArgs>>): Prisma__attendanceClient<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Attendance that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {attendanceFindUniqueOrThrowArgs} args - Arguments to find a Attendance
     * @example
     * // Get one Attendance
     * const attendance = await prisma.attendance.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends attendanceFindUniqueOrThrowArgs>(args: SelectSubset<T, attendanceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__attendanceClient<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Attendance that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attendanceFindFirstArgs} args - Arguments to find a Attendance
     * @example
     * // Get one Attendance
     * const attendance = await prisma.attendance.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends attendanceFindFirstArgs>(args?: SelectSubset<T, attendanceFindFirstArgs<ExtArgs>>): Prisma__attendanceClient<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Attendance that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attendanceFindFirstOrThrowArgs} args - Arguments to find a Attendance
     * @example
     * // Get one Attendance
     * const attendance = await prisma.attendance.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends attendanceFindFirstOrThrowArgs>(args?: SelectSubset<T, attendanceFindFirstOrThrowArgs<ExtArgs>>): Prisma__attendanceClient<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Attendances that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attendanceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Attendances
     * const attendances = await prisma.attendance.findMany()
     * 
     * // Get first 10 Attendances
     * const attendances = await prisma.attendance.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const attendanceWithIdOnly = await prisma.attendance.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends attendanceFindManyArgs>(args?: SelectSubset<T, attendanceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Attendance.
     * @param {attendanceCreateArgs} args - Arguments to create a Attendance.
     * @example
     * // Create one Attendance
     * const Attendance = await prisma.attendance.create({
     *   data: {
     *     // ... data to create a Attendance
     *   }
     * })
     * 
     */
    create<T extends attendanceCreateArgs>(args: SelectSubset<T, attendanceCreateArgs<ExtArgs>>): Prisma__attendanceClient<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Attendances.
     * @param {attendanceCreateManyArgs} args - Arguments to create many Attendances.
     * @example
     * // Create many Attendances
     * const attendance = await prisma.attendance.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends attendanceCreateManyArgs>(args?: SelectSubset<T, attendanceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Attendances and returns the data saved in the database.
     * @param {attendanceCreateManyAndReturnArgs} args - Arguments to create many Attendances.
     * @example
     * // Create many Attendances
     * const attendance = await prisma.attendance.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Attendances and only return the `id`
     * const attendanceWithIdOnly = await prisma.attendance.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends attendanceCreateManyAndReturnArgs>(args?: SelectSubset<T, attendanceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Attendance.
     * @param {attendanceDeleteArgs} args - Arguments to delete one Attendance.
     * @example
     * // Delete one Attendance
     * const Attendance = await prisma.attendance.delete({
     *   where: {
     *     // ... filter to delete one Attendance
     *   }
     * })
     * 
     */
    delete<T extends attendanceDeleteArgs>(args: SelectSubset<T, attendanceDeleteArgs<ExtArgs>>): Prisma__attendanceClient<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Attendance.
     * @param {attendanceUpdateArgs} args - Arguments to update one Attendance.
     * @example
     * // Update one Attendance
     * const attendance = await prisma.attendance.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends attendanceUpdateArgs>(args: SelectSubset<T, attendanceUpdateArgs<ExtArgs>>): Prisma__attendanceClient<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Attendances.
     * @param {attendanceDeleteManyArgs} args - Arguments to filter Attendances to delete.
     * @example
     * // Delete a few Attendances
     * const { count } = await prisma.attendance.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends attendanceDeleteManyArgs>(args?: SelectSubset<T, attendanceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Attendances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attendanceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Attendances
     * const attendance = await prisma.attendance.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends attendanceUpdateManyArgs>(args: SelectSubset<T, attendanceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Attendances and returns the data updated in the database.
     * @param {attendanceUpdateManyAndReturnArgs} args - Arguments to update many Attendances.
     * @example
     * // Update many Attendances
     * const attendance = await prisma.attendance.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Attendances and only return the `id`
     * const attendanceWithIdOnly = await prisma.attendance.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends attendanceUpdateManyAndReturnArgs>(args: SelectSubset<T, attendanceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Attendance.
     * @param {attendanceUpsertArgs} args - Arguments to update or create a Attendance.
     * @example
     * // Update or create a Attendance
     * const attendance = await prisma.attendance.upsert({
     *   create: {
     *     // ... data to create a Attendance
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Attendance we want to update
     *   }
     * })
     */
    upsert<T extends attendanceUpsertArgs>(args: SelectSubset<T, attendanceUpsertArgs<ExtArgs>>): Prisma__attendanceClient<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Attendances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attendanceCountArgs} args - Arguments to filter Attendances to count.
     * @example
     * // Count the number of Attendances
     * const count = await prisma.attendance.count({
     *   where: {
     *     // ... the filter for the Attendances we want to count
     *   }
     * })
    **/
    count<T extends attendanceCountArgs>(
      args?: Subset<T, attendanceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AttendanceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Attendance.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AttendanceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AttendanceAggregateArgs>(args: Subset<T, AttendanceAggregateArgs>): Prisma.PrismaPromise<GetAttendanceAggregateType<T>>

    /**
     * Group by Attendance.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attendanceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends attendanceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: attendanceGroupByArgs['orderBy'] }
        : { orderBy?: attendanceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, attendanceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAttendanceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the attendance model
   */
  readonly fields: attendanceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for attendance.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__attendanceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the attendance model
   */
  interface attendanceFieldRefs {
    readonly id: FieldRef<"attendance", 'Int'>
    readonly empid: FieldRef<"attendance", 'String'>
    readonly check_in: FieldRef<"attendance", 'DateTime'>
    readonly check_out: FieldRef<"attendance", 'DateTime'>
    readonly total_hours: FieldRef<"attendance", 'Decimal'>
    readonly date: FieldRef<"attendance", 'DateTime'>
    readonly created_at: FieldRef<"attendance", 'DateTime'>
    readonly attendance_status: FieldRef<"attendance", 'attendance_attendance_status'>
  }
    

  // Custom InputTypes
  /**
   * attendance findUnique
   */
  export type attendanceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * Filter, which attendance to fetch.
     */
    where: attendanceWhereUniqueInput
  }

  /**
   * attendance findUniqueOrThrow
   */
  export type attendanceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * Filter, which attendance to fetch.
     */
    where: attendanceWhereUniqueInput
  }

  /**
   * attendance findFirst
   */
  export type attendanceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * Filter, which attendance to fetch.
     */
    where?: attendanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of attendances to fetch.
     */
    orderBy?: attendanceOrderByWithRelationInput | attendanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for attendances.
     */
    cursor?: attendanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` attendances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` attendances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of attendances.
     */
    distinct?: AttendanceScalarFieldEnum | AttendanceScalarFieldEnum[]
  }

  /**
   * attendance findFirstOrThrow
   */
  export type attendanceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * Filter, which attendance to fetch.
     */
    where?: attendanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of attendances to fetch.
     */
    orderBy?: attendanceOrderByWithRelationInput | attendanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for attendances.
     */
    cursor?: attendanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` attendances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` attendances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of attendances.
     */
    distinct?: AttendanceScalarFieldEnum | AttendanceScalarFieldEnum[]
  }

  /**
   * attendance findMany
   */
  export type attendanceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * Filter, which attendances to fetch.
     */
    where?: attendanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of attendances to fetch.
     */
    orderBy?: attendanceOrderByWithRelationInput | attendanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing attendances.
     */
    cursor?: attendanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` attendances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` attendances.
     */
    skip?: number
    distinct?: AttendanceScalarFieldEnum | AttendanceScalarFieldEnum[]
  }

  /**
   * attendance create
   */
  export type attendanceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * The data needed to create a attendance.
     */
    data: XOR<attendanceCreateInput, attendanceUncheckedCreateInput>
  }

  /**
   * attendance createMany
   */
  export type attendanceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many attendances.
     */
    data: attendanceCreateManyInput | attendanceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * attendance createManyAndReturn
   */
  export type attendanceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * The data used to create many attendances.
     */
    data: attendanceCreateManyInput | attendanceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * attendance update
   */
  export type attendanceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * The data needed to update a attendance.
     */
    data: XOR<attendanceUpdateInput, attendanceUncheckedUpdateInput>
    /**
     * Choose, which attendance to update.
     */
    where: attendanceWhereUniqueInput
  }

  /**
   * attendance updateMany
   */
  export type attendanceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update attendances.
     */
    data: XOR<attendanceUpdateManyMutationInput, attendanceUncheckedUpdateManyInput>
    /**
     * Filter which attendances to update
     */
    where?: attendanceWhereInput
    /**
     * Limit how many attendances to update.
     */
    limit?: number
  }

  /**
   * attendance updateManyAndReturn
   */
  export type attendanceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * The data used to update attendances.
     */
    data: XOR<attendanceUpdateManyMutationInput, attendanceUncheckedUpdateManyInput>
    /**
     * Filter which attendances to update
     */
    where?: attendanceWhereInput
    /**
     * Limit how many attendances to update.
     */
    limit?: number
  }

  /**
   * attendance upsert
   */
  export type attendanceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * The filter to search for the attendance to update in case it exists.
     */
    where: attendanceWhereUniqueInput
    /**
     * In case the attendance found by the `where` argument doesn't exist, create a new attendance with this data.
     */
    create: XOR<attendanceCreateInput, attendanceUncheckedCreateInput>
    /**
     * In case the attendance was found with the provided `where` argument, update it with this data.
     */
    update: XOR<attendanceUpdateInput, attendanceUncheckedUpdateInput>
  }

  /**
   * attendance delete
   */
  export type attendanceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * Filter which attendance to delete.
     */
    where: attendanceWhereUniqueInput
  }

  /**
   * attendance deleteMany
   */
  export type attendanceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which attendances to delete
     */
    where?: attendanceWhereInput
    /**
     * Limit how many attendances to delete.
     */
    limit?: number
  }

  /**
   * attendance without action
   */
  export type attendanceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
  }


  /**
   * Model audit_logs
   */

  export type AggregateAudit_logs = {
    _count: Audit_logsCountAggregateOutputType | null
    _avg: Audit_logsAvgAggregateOutputType | null
    _sum: Audit_logsSumAggregateOutputType | null
    _min: Audit_logsMinAggregateOutputType | null
    _max: Audit_logsMaxAggregateOutputType | null
  }

  export type Audit_logsAvgAggregateOutputType = {
    id: number | null
    empid: number | null
    performed_by: number | null
  }

  export type Audit_logsSumAggregateOutputType = {
    id: number | null
    empid: number | null
    performed_by: number | null
  }

  export type Audit_logsMinAggregateOutputType = {
    id: number | null
    empid: number | null
    performed_by: number | null
    action: string | null
    timestamp: Date | null
  }

  export type Audit_logsMaxAggregateOutputType = {
    id: number | null
    empid: number | null
    performed_by: number | null
    action: string | null
    timestamp: Date | null
  }

  export type Audit_logsCountAggregateOutputType = {
    id: number
    empid: number
    performed_by: number
    action: number
    timestamp: number
    _all: number
  }


  export type Audit_logsAvgAggregateInputType = {
    id?: true
    empid?: true
    performed_by?: true
  }

  export type Audit_logsSumAggregateInputType = {
    id?: true
    empid?: true
    performed_by?: true
  }

  export type Audit_logsMinAggregateInputType = {
    id?: true
    empid?: true
    performed_by?: true
    action?: true
    timestamp?: true
  }

  export type Audit_logsMaxAggregateInputType = {
    id?: true
    empid?: true
    performed_by?: true
    action?: true
    timestamp?: true
  }

  export type Audit_logsCountAggregateInputType = {
    id?: true
    empid?: true
    performed_by?: true
    action?: true
    timestamp?: true
    _all?: true
  }

  export type Audit_logsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which audit_logs to aggregate.
     */
    where?: audit_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of audit_logs to fetch.
     */
    orderBy?: audit_logsOrderByWithRelationInput | audit_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: audit_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` audit_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` audit_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned audit_logs
    **/
    _count?: true | Audit_logsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Audit_logsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Audit_logsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Audit_logsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Audit_logsMaxAggregateInputType
  }

  export type GetAudit_logsAggregateType<T extends Audit_logsAggregateArgs> = {
        [P in keyof T & keyof AggregateAudit_logs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAudit_logs[P]>
      : GetScalarType<T[P], AggregateAudit_logs[P]>
  }




  export type audit_logsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: audit_logsWhereInput
    orderBy?: audit_logsOrderByWithAggregationInput | audit_logsOrderByWithAggregationInput[]
    by: Audit_logsScalarFieldEnum[] | Audit_logsScalarFieldEnum
    having?: audit_logsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Audit_logsCountAggregateInputType | true
    _avg?: Audit_logsAvgAggregateInputType
    _sum?: Audit_logsSumAggregateInputType
    _min?: Audit_logsMinAggregateInputType
    _max?: Audit_logsMaxAggregateInputType
  }

  export type Audit_logsGroupByOutputType = {
    id: number
    empid: number | null
    performed_by: number | null
    action: string | null
    timestamp: Date | null
    _count: Audit_logsCountAggregateOutputType | null
    _avg: Audit_logsAvgAggregateOutputType | null
    _sum: Audit_logsSumAggregateOutputType | null
    _min: Audit_logsMinAggregateOutputType | null
    _max: Audit_logsMaxAggregateOutputType | null
  }

  type GetAudit_logsGroupByPayload<T extends audit_logsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Audit_logsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Audit_logsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Audit_logsGroupByOutputType[P]>
            : GetScalarType<T[P], Audit_logsGroupByOutputType[P]>
        }
      >
    >


  export type audit_logsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    empid?: boolean
    performed_by?: boolean
    action?: boolean
    timestamp?: boolean
    employees_audit_logs_empidToemployees?: boolean | audit_logs$employees_audit_logs_empidToemployeesArgs<ExtArgs>
    employees_audit_logs_performed_byToemployees?: boolean | audit_logs$employees_audit_logs_performed_byToemployeesArgs<ExtArgs>
  }, ExtArgs["result"]["audit_logs"]>

  export type audit_logsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    empid?: boolean
    performed_by?: boolean
    action?: boolean
    timestamp?: boolean
    employees_audit_logs_empidToemployees?: boolean | audit_logs$employees_audit_logs_empidToemployeesArgs<ExtArgs>
    employees_audit_logs_performed_byToemployees?: boolean | audit_logs$employees_audit_logs_performed_byToemployeesArgs<ExtArgs>
  }, ExtArgs["result"]["audit_logs"]>

  export type audit_logsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    empid?: boolean
    performed_by?: boolean
    action?: boolean
    timestamp?: boolean
    employees_audit_logs_empidToemployees?: boolean | audit_logs$employees_audit_logs_empidToemployeesArgs<ExtArgs>
    employees_audit_logs_performed_byToemployees?: boolean | audit_logs$employees_audit_logs_performed_byToemployeesArgs<ExtArgs>
  }, ExtArgs["result"]["audit_logs"]>

  export type audit_logsSelectScalar = {
    id?: boolean
    empid?: boolean
    performed_by?: boolean
    action?: boolean
    timestamp?: boolean
  }

  export type audit_logsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "empid" | "performed_by" | "action" | "timestamp", ExtArgs["result"]["audit_logs"]>
  export type audit_logsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employees_audit_logs_empidToemployees?: boolean | audit_logs$employees_audit_logs_empidToemployeesArgs<ExtArgs>
    employees_audit_logs_performed_byToemployees?: boolean | audit_logs$employees_audit_logs_performed_byToemployeesArgs<ExtArgs>
  }
  export type audit_logsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employees_audit_logs_empidToemployees?: boolean | audit_logs$employees_audit_logs_empidToemployeesArgs<ExtArgs>
    employees_audit_logs_performed_byToemployees?: boolean | audit_logs$employees_audit_logs_performed_byToemployeesArgs<ExtArgs>
  }
  export type audit_logsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employees_audit_logs_empidToemployees?: boolean | audit_logs$employees_audit_logs_empidToemployeesArgs<ExtArgs>
    employees_audit_logs_performed_byToemployees?: boolean | audit_logs$employees_audit_logs_performed_byToemployeesArgs<ExtArgs>
  }

  export type $audit_logsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "audit_logs"
    objects: {
      employees_audit_logs_empidToemployees: Prisma.$employeesPayload<ExtArgs> | null
      employees_audit_logs_performed_byToemployees: Prisma.$employeesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      empid: number | null
      performed_by: number | null
      action: string | null
      timestamp: Date | null
    }, ExtArgs["result"]["audit_logs"]>
    composites: {}
  }

  type audit_logsGetPayload<S extends boolean | null | undefined | audit_logsDefaultArgs> = $Result.GetResult<Prisma.$audit_logsPayload, S>

  type audit_logsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<audit_logsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Audit_logsCountAggregateInputType | true
    }

  export interface audit_logsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['audit_logs'], meta: { name: 'audit_logs' } }
    /**
     * Find zero or one Audit_logs that matches the filter.
     * @param {audit_logsFindUniqueArgs} args - Arguments to find a Audit_logs
     * @example
     * // Get one Audit_logs
     * const audit_logs = await prisma.audit_logs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends audit_logsFindUniqueArgs>(args: SelectSubset<T, audit_logsFindUniqueArgs<ExtArgs>>): Prisma__audit_logsClient<$Result.GetResult<Prisma.$audit_logsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Audit_logs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {audit_logsFindUniqueOrThrowArgs} args - Arguments to find a Audit_logs
     * @example
     * // Get one Audit_logs
     * const audit_logs = await prisma.audit_logs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends audit_logsFindUniqueOrThrowArgs>(args: SelectSubset<T, audit_logsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__audit_logsClient<$Result.GetResult<Prisma.$audit_logsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Audit_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {audit_logsFindFirstArgs} args - Arguments to find a Audit_logs
     * @example
     * // Get one Audit_logs
     * const audit_logs = await prisma.audit_logs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends audit_logsFindFirstArgs>(args?: SelectSubset<T, audit_logsFindFirstArgs<ExtArgs>>): Prisma__audit_logsClient<$Result.GetResult<Prisma.$audit_logsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Audit_logs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {audit_logsFindFirstOrThrowArgs} args - Arguments to find a Audit_logs
     * @example
     * // Get one Audit_logs
     * const audit_logs = await prisma.audit_logs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends audit_logsFindFirstOrThrowArgs>(args?: SelectSubset<T, audit_logsFindFirstOrThrowArgs<ExtArgs>>): Prisma__audit_logsClient<$Result.GetResult<Prisma.$audit_logsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Audit_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {audit_logsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Audit_logs
     * const audit_logs = await prisma.audit_logs.findMany()
     * 
     * // Get first 10 Audit_logs
     * const audit_logs = await prisma.audit_logs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const audit_logsWithIdOnly = await prisma.audit_logs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends audit_logsFindManyArgs>(args?: SelectSubset<T, audit_logsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$audit_logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Audit_logs.
     * @param {audit_logsCreateArgs} args - Arguments to create a Audit_logs.
     * @example
     * // Create one Audit_logs
     * const Audit_logs = await prisma.audit_logs.create({
     *   data: {
     *     // ... data to create a Audit_logs
     *   }
     * })
     * 
     */
    create<T extends audit_logsCreateArgs>(args: SelectSubset<T, audit_logsCreateArgs<ExtArgs>>): Prisma__audit_logsClient<$Result.GetResult<Prisma.$audit_logsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Audit_logs.
     * @param {audit_logsCreateManyArgs} args - Arguments to create many Audit_logs.
     * @example
     * // Create many Audit_logs
     * const audit_logs = await prisma.audit_logs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends audit_logsCreateManyArgs>(args?: SelectSubset<T, audit_logsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Audit_logs and returns the data saved in the database.
     * @param {audit_logsCreateManyAndReturnArgs} args - Arguments to create many Audit_logs.
     * @example
     * // Create many Audit_logs
     * const audit_logs = await prisma.audit_logs.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Audit_logs and only return the `id`
     * const audit_logsWithIdOnly = await prisma.audit_logs.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends audit_logsCreateManyAndReturnArgs>(args?: SelectSubset<T, audit_logsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$audit_logsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Audit_logs.
     * @param {audit_logsDeleteArgs} args - Arguments to delete one Audit_logs.
     * @example
     * // Delete one Audit_logs
     * const Audit_logs = await prisma.audit_logs.delete({
     *   where: {
     *     // ... filter to delete one Audit_logs
     *   }
     * })
     * 
     */
    delete<T extends audit_logsDeleteArgs>(args: SelectSubset<T, audit_logsDeleteArgs<ExtArgs>>): Prisma__audit_logsClient<$Result.GetResult<Prisma.$audit_logsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Audit_logs.
     * @param {audit_logsUpdateArgs} args - Arguments to update one Audit_logs.
     * @example
     * // Update one Audit_logs
     * const audit_logs = await prisma.audit_logs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends audit_logsUpdateArgs>(args: SelectSubset<T, audit_logsUpdateArgs<ExtArgs>>): Prisma__audit_logsClient<$Result.GetResult<Prisma.$audit_logsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Audit_logs.
     * @param {audit_logsDeleteManyArgs} args - Arguments to filter Audit_logs to delete.
     * @example
     * // Delete a few Audit_logs
     * const { count } = await prisma.audit_logs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends audit_logsDeleteManyArgs>(args?: SelectSubset<T, audit_logsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Audit_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {audit_logsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Audit_logs
     * const audit_logs = await prisma.audit_logs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends audit_logsUpdateManyArgs>(args: SelectSubset<T, audit_logsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Audit_logs and returns the data updated in the database.
     * @param {audit_logsUpdateManyAndReturnArgs} args - Arguments to update many Audit_logs.
     * @example
     * // Update many Audit_logs
     * const audit_logs = await prisma.audit_logs.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Audit_logs and only return the `id`
     * const audit_logsWithIdOnly = await prisma.audit_logs.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends audit_logsUpdateManyAndReturnArgs>(args: SelectSubset<T, audit_logsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$audit_logsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Audit_logs.
     * @param {audit_logsUpsertArgs} args - Arguments to update or create a Audit_logs.
     * @example
     * // Update or create a Audit_logs
     * const audit_logs = await prisma.audit_logs.upsert({
     *   create: {
     *     // ... data to create a Audit_logs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Audit_logs we want to update
     *   }
     * })
     */
    upsert<T extends audit_logsUpsertArgs>(args: SelectSubset<T, audit_logsUpsertArgs<ExtArgs>>): Prisma__audit_logsClient<$Result.GetResult<Prisma.$audit_logsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Audit_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {audit_logsCountArgs} args - Arguments to filter Audit_logs to count.
     * @example
     * // Count the number of Audit_logs
     * const count = await prisma.audit_logs.count({
     *   where: {
     *     // ... the filter for the Audit_logs we want to count
     *   }
     * })
    **/
    count<T extends audit_logsCountArgs>(
      args?: Subset<T, audit_logsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Audit_logsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Audit_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Audit_logsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Audit_logsAggregateArgs>(args: Subset<T, Audit_logsAggregateArgs>): Prisma.PrismaPromise<GetAudit_logsAggregateType<T>>

    /**
     * Group by Audit_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {audit_logsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends audit_logsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: audit_logsGroupByArgs['orderBy'] }
        : { orderBy?: audit_logsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, audit_logsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAudit_logsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the audit_logs model
   */
  readonly fields: audit_logsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for audit_logs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__audit_logsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    employees_audit_logs_empidToemployees<T extends audit_logs$employees_audit_logs_empidToemployeesArgs<ExtArgs> = {}>(args?: Subset<T, audit_logs$employees_audit_logs_empidToemployeesArgs<ExtArgs>>): Prisma__employeesClient<$Result.GetResult<Prisma.$employeesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    employees_audit_logs_performed_byToemployees<T extends audit_logs$employees_audit_logs_performed_byToemployeesArgs<ExtArgs> = {}>(args?: Subset<T, audit_logs$employees_audit_logs_performed_byToemployeesArgs<ExtArgs>>): Prisma__employeesClient<$Result.GetResult<Prisma.$employeesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the audit_logs model
   */
  interface audit_logsFieldRefs {
    readonly id: FieldRef<"audit_logs", 'Int'>
    readonly empid: FieldRef<"audit_logs", 'Int'>
    readonly performed_by: FieldRef<"audit_logs", 'Int'>
    readonly action: FieldRef<"audit_logs", 'String'>
    readonly timestamp: FieldRef<"audit_logs", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * audit_logs findUnique
   */
  export type audit_logsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_logs
     */
    select?: audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_logs
     */
    omit?: audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: audit_logsInclude<ExtArgs> | null
    /**
     * Filter, which audit_logs to fetch.
     */
    where: audit_logsWhereUniqueInput
  }

  /**
   * audit_logs findUniqueOrThrow
   */
  export type audit_logsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_logs
     */
    select?: audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_logs
     */
    omit?: audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: audit_logsInclude<ExtArgs> | null
    /**
     * Filter, which audit_logs to fetch.
     */
    where: audit_logsWhereUniqueInput
  }

  /**
   * audit_logs findFirst
   */
  export type audit_logsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_logs
     */
    select?: audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_logs
     */
    omit?: audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: audit_logsInclude<ExtArgs> | null
    /**
     * Filter, which audit_logs to fetch.
     */
    where?: audit_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of audit_logs to fetch.
     */
    orderBy?: audit_logsOrderByWithRelationInput | audit_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for audit_logs.
     */
    cursor?: audit_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` audit_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` audit_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of audit_logs.
     */
    distinct?: Audit_logsScalarFieldEnum | Audit_logsScalarFieldEnum[]
  }

  /**
   * audit_logs findFirstOrThrow
   */
  export type audit_logsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_logs
     */
    select?: audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_logs
     */
    omit?: audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: audit_logsInclude<ExtArgs> | null
    /**
     * Filter, which audit_logs to fetch.
     */
    where?: audit_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of audit_logs to fetch.
     */
    orderBy?: audit_logsOrderByWithRelationInput | audit_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for audit_logs.
     */
    cursor?: audit_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` audit_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` audit_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of audit_logs.
     */
    distinct?: Audit_logsScalarFieldEnum | Audit_logsScalarFieldEnum[]
  }

  /**
   * audit_logs findMany
   */
  export type audit_logsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_logs
     */
    select?: audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_logs
     */
    omit?: audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: audit_logsInclude<ExtArgs> | null
    /**
     * Filter, which audit_logs to fetch.
     */
    where?: audit_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of audit_logs to fetch.
     */
    orderBy?: audit_logsOrderByWithRelationInput | audit_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing audit_logs.
     */
    cursor?: audit_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` audit_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` audit_logs.
     */
    skip?: number
    distinct?: Audit_logsScalarFieldEnum | Audit_logsScalarFieldEnum[]
  }

  /**
   * audit_logs create
   */
  export type audit_logsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_logs
     */
    select?: audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_logs
     */
    omit?: audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: audit_logsInclude<ExtArgs> | null
    /**
     * The data needed to create a audit_logs.
     */
    data?: XOR<audit_logsCreateInput, audit_logsUncheckedCreateInput>
  }

  /**
   * audit_logs createMany
   */
  export type audit_logsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many audit_logs.
     */
    data: audit_logsCreateManyInput | audit_logsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * audit_logs createManyAndReturn
   */
  export type audit_logsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_logs
     */
    select?: audit_logsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the audit_logs
     */
    omit?: audit_logsOmit<ExtArgs> | null
    /**
     * The data used to create many audit_logs.
     */
    data: audit_logsCreateManyInput | audit_logsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: audit_logsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * audit_logs update
   */
  export type audit_logsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_logs
     */
    select?: audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_logs
     */
    omit?: audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: audit_logsInclude<ExtArgs> | null
    /**
     * The data needed to update a audit_logs.
     */
    data: XOR<audit_logsUpdateInput, audit_logsUncheckedUpdateInput>
    /**
     * Choose, which audit_logs to update.
     */
    where: audit_logsWhereUniqueInput
  }

  /**
   * audit_logs updateMany
   */
  export type audit_logsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update audit_logs.
     */
    data: XOR<audit_logsUpdateManyMutationInput, audit_logsUncheckedUpdateManyInput>
    /**
     * Filter which audit_logs to update
     */
    where?: audit_logsWhereInput
    /**
     * Limit how many audit_logs to update.
     */
    limit?: number
  }

  /**
   * audit_logs updateManyAndReturn
   */
  export type audit_logsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_logs
     */
    select?: audit_logsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the audit_logs
     */
    omit?: audit_logsOmit<ExtArgs> | null
    /**
     * The data used to update audit_logs.
     */
    data: XOR<audit_logsUpdateManyMutationInput, audit_logsUncheckedUpdateManyInput>
    /**
     * Filter which audit_logs to update
     */
    where?: audit_logsWhereInput
    /**
     * Limit how many audit_logs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: audit_logsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * audit_logs upsert
   */
  export type audit_logsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_logs
     */
    select?: audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_logs
     */
    omit?: audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: audit_logsInclude<ExtArgs> | null
    /**
     * The filter to search for the audit_logs to update in case it exists.
     */
    where: audit_logsWhereUniqueInput
    /**
     * In case the audit_logs found by the `where` argument doesn't exist, create a new audit_logs with this data.
     */
    create: XOR<audit_logsCreateInput, audit_logsUncheckedCreateInput>
    /**
     * In case the audit_logs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<audit_logsUpdateInput, audit_logsUncheckedUpdateInput>
  }

  /**
   * audit_logs delete
   */
  export type audit_logsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_logs
     */
    select?: audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_logs
     */
    omit?: audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: audit_logsInclude<ExtArgs> | null
    /**
     * Filter which audit_logs to delete.
     */
    where: audit_logsWhereUniqueInput
  }

  /**
   * audit_logs deleteMany
   */
  export type audit_logsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which audit_logs to delete
     */
    where?: audit_logsWhereInput
    /**
     * Limit how many audit_logs to delete.
     */
    limit?: number
  }

  /**
   * audit_logs.employees_audit_logs_empidToemployees
   */
  export type audit_logs$employees_audit_logs_empidToemployeesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employees
     */
    select?: employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employees
     */
    omit?: employeesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeesInclude<ExtArgs> | null
    where?: employeesWhereInput
  }

  /**
   * audit_logs.employees_audit_logs_performed_byToemployees
   */
  export type audit_logs$employees_audit_logs_performed_byToemployeesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employees
     */
    select?: employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employees
     */
    omit?: employeesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeesInclude<ExtArgs> | null
    where?: employeesWhereInput
  }

  /**
   * audit_logs without action
   */
  export type audit_logsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_logs
     */
    select?: audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_logs
     */
    omit?: audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: audit_logsInclude<ExtArgs> | null
  }


  /**
   * Model bank_details
   */

  export type AggregateBank_details = {
    _count: Bank_detailsCountAggregateOutputType | null
    _avg: Bank_detailsAvgAggregateOutputType | null
    _sum: Bank_detailsSumAggregateOutputType | null
    _min: Bank_detailsMinAggregateOutputType | null
    _max: Bank_detailsMaxAggregateOutputType | null
  }

  export type Bank_detailsAvgAggregateOutputType = {
    id: number | null
    employee_id: number | null
  }

  export type Bank_detailsSumAggregateOutputType = {
    id: number | null
    employee_id: number | null
  }

  export type Bank_detailsMinAggregateOutputType = {
    id: number | null
    employee_id: number | null
    account_holder_name: string | null
    bank_name: string | null
    branch_name: string | null
    account_number: string | null
    ifsc_code: string | null
    checkbook_document: string | null
  }

  export type Bank_detailsMaxAggregateOutputType = {
    id: number | null
    employee_id: number | null
    account_holder_name: string | null
    bank_name: string | null
    branch_name: string | null
    account_number: string | null
    ifsc_code: string | null
    checkbook_document: string | null
  }

  export type Bank_detailsCountAggregateOutputType = {
    id: number
    employee_id: number
    account_holder_name: number
    bank_name: number
    branch_name: number
    account_number: number
    ifsc_code: number
    checkbook_document: number
    _all: number
  }


  export type Bank_detailsAvgAggregateInputType = {
    id?: true
    employee_id?: true
  }

  export type Bank_detailsSumAggregateInputType = {
    id?: true
    employee_id?: true
  }

  export type Bank_detailsMinAggregateInputType = {
    id?: true
    employee_id?: true
    account_holder_name?: true
    bank_name?: true
    branch_name?: true
    account_number?: true
    ifsc_code?: true
    checkbook_document?: true
  }

  export type Bank_detailsMaxAggregateInputType = {
    id?: true
    employee_id?: true
    account_holder_name?: true
    bank_name?: true
    branch_name?: true
    account_number?: true
    ifsc_code?: true
    checkbook_document?: true
  }

  export type Bank_detailsCountAggregateInputType = {
    id?: true
    employee_id?: true
    account_holder_name?: true
    bank_name?: true
    branch_name?: true
    account_number?: true
    ifsc_code?: true
    checkbook_document?: true
    _all?: true
  }

  export type Bank_detailsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which bank_details to aggregate.
     */
    where?: bank_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of bank_details to fetch.
     */
    orderBy?: bank_detailsOrderByWithRelationInput | bank_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: bank_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` bank_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` bank_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned bank_details
    **/
    _count?: true | Bank_detailsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Bank_detailsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Bank_detailsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Bank_detailsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Bank_detailsMaxAggregateInputType
  }

  export type GetBank_detailsAggregateType<T extends Bank_detailsAggregateArgs> = {
        [P in keyof T & keyof AggregateBank_details]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBank_details[P]>
      : GetScalarType<T[P], AggregateBank_details[P]>
  }




  export type bank_detailsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: bank_detailsWhereInput
    orderBy?: bank_detailsOrderByWithAggregationInput | bank_detailsOrderByWithAggregationInput[]
    by: Bank_detailsScalarFieldEnum[] | Bank_detailsScalarFieldEnum
    having?: bank_detailsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Bank_detailsCountAggregateInputType | true
    _avg?: Bank_detailsAvgAggregateInputType
    _sum?: Bank_detailsSumAggregateInputType
    _min?: Bank_detailsMinAggregateInputType
    _max?: Bank_detailsMaxAggregateInputType
  }

  export type Bank_detailsGroupByOutputType = {
    id: number
    employee_id: number
    account_holder_name: string
    bank_name: string
    branch_name: string | null
    account_number: string
    ifsc_code: string
    checkbook_document: string | null
    _count: Bank_detailsCountAggregateOutputType | null
    _avg: Bank_detailsAvgAggregateOutputType | null
    _sum: Bank_detailsSumAggregateOutputType | null
    _min: Bank_detailsMinAggregateOutputType | null
    _max: Bank_detailsMaxAggregateOutputType | null
  }

  type GetBank_detailsGroupByPayload<T extends bank_detailsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Bank_detailsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Bank_detailsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Bank_detailsGroupByOutputType[P]>
            : GetScalarType<T[P], Bank_detailsGroupByOutputType[P]>
        }
      >
    >


  export type bank_detailsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    employee_id?: boolean
    account_holder_name?: boolean
    bank_name?: boolean
    branch_name?: boolean
    account_number?: boolean
    ifsc_code?: boolean
    checkbook_document?: boolean
    employees?: boolean | employeesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["bank_details"]>

  export type bank_detailsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    employee_id?: boolean
    account_holder_name?: boolean
    bank_name?: boolean
    branch_name?: boolean
    account_number?: boolean
    ifsc_code?: boolean
    checkbook_document?: boolean
    employees?: boolean | employeesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["bank_details"]>

  export type bank_detailsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    employee_id?: boolean
    account_holder_name?: boolean
    bank_name?: boolean
    branch_name?: boolean
    account_number?: boolean
    ifsc_code?: boolean
    checkbook_document?: boolean
    employees?: boolean | employeesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["bank_details"]>

  export type bank_detailsSelectScalar = {
    id?: boolean
    employee_id?: boolean
    account_holder_name?: boolean
    bank_name?: boolean
    branch_name?: boolean
    account_number?: boolean
    ifsc_code?: boolean
    checkbook_document?: boolean
  }

  export type bank_detailsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "employee_id" | "account_holder_name" | "bank_name" | "branch_name" | "account_number" | "ifsc_code" | "checkbook_document", ExtArgs["result"]["bank_details"]>
  export type bank_detailsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employees?: boolean | employeesDefaultArgs<ExtArgs>
  }
  export type bank_detailsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employees?: boolean | employeesDefaultArgs<ExtArgs>
  }
  export type bank_detailsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employees?: boolean | employeesDefaultArgs<ExtArgs>
  }

  export type $bank_detailsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "bank_details"
    objects: {
      employees: Prisma.$employeesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      employee_id: number
      account_holder_name: string
      bank_name: string
      branch_name: string | null
      account_number: string
      ifsc_code: string
      checkbook_document: string | null
    }, ExtArgs["result"]["bank_details"]>
    composites: {}
  }

  type bank_detailsGetPayload<S extends boolean | null | undefined | bank_detailsDefaultArgs> = $Result.GetResult<Prisma.$bank_detailsPayload, S>

  type bank_detailsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<bank_detailsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Bank_detailsCountAggregateInputType | true
    }

  export interface bank_detailsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['bank_details'], meta: { name: 'bank_details' } }
    /**
     * Find zero or one Bank_details that matches the filter.
     * @param {bank_detailsFindUniqueArgs} args - Arguments to find a Bank_details
     * @example
     * // Get one Bank_details
     * const bank_details = await prisma.bank_details.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends bank_detailsFindUniqueArgs>(args: SelectSubset<T, bank_detailsFindUniqueArgs<ExtArgs>>): Prisma__bank_detailsClient<$Result.GetResult<Prisma.$bank_detailsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Bank_details that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {bank_detailsFindUniqueOrThrowArgs} args - Arguments to find a Bank_details
     * @example
     * // Get one Bank_details
     * const bank_details = await prisma.bank_details.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends bank_detailsFindUniqueOrThrowArgs>(args: SelectSubset<T, bank_detailsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__bank_detailsClient<$Result.GetResult<Prisma.$bank_detailsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Bank_details that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bank_detailsFindFirstArgs} args - Arguments to find a Bank_details
     * @example
     * // Get one Bank_details
     * const bank_details = await prisma.bank_details.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends bank_detailsFindFirstArgs>(args?: SelectSubset<T, bank_detailsFindFirstArgs<ExtArgs>>): Prisma__bank_detailsClient<$Result.GetResult<Prisma.$bank_detailsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Bank_details that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bank_detailsFindFirstOrThrowArgs} args - Arguments to find a Bank_details
     * @example
     * // Get one Bank_details
     * const bank_details = await prisma.bank_details.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends bank_detailsFindFirstOrThrowArgs>(args?: SelectSubset<T, bank_detailsFindFirstOrThrowArgs<ExtArgs>>): Prisma__bank_detailsClient<$Result.GetResult<Prisma.$bank_detailsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Bank_details that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bank_detailsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Bank_details
     * const bank_details = await prisma.bank_details.findMany()
     * 
     * // Get first 10 Bank_details
     * const bank_details = await prisma.bank_details.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const bank_detailsWithIdOnly = await prisma.bank_details.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends bank_detailsFindManyArgs>(args?: SelectSubset<T, bank_detailsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$bank_detailsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Bank_details.
     * @param {bank_detailsCreateArgs} args - Arguments to create a Bank_details.
     * @example
     * // Create one Bank_details
     * const Bank_details = await prisma.bank_details.create({
     *   data: {
     *     // ... data to create a Bank_details
     *   }
     * })
     * 
     */
    create<T extends bank_detailsCreateArgs>(args: SelectSubset<T, bank_detailsCreateArgs<ExtArgs>>): Prisma__bank_detailsClient<$Result.GetResult<Prisma.$bank_detailsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Bank_details.
     * @param {bank_detailsCreateManyArgs} args - Arguments to create many Bank_details.
     * @example
     * // Create many Bank_details
     * const bank_details = await prisma.bank_details.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends bank_detailsCreateManyArgs>(args?: SelectSubset<T, bank_detailsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Bank_details and returns the data saved in the database.
     * @param {bank_detailsCreateManyAndReturnArgs} args - Arguments to create many Bank_details.
     * @example
     * // Create many Bank_details
     * const bank_details = await prisma.bank_details.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Bank_details and only return the `id`
     * const bank_detailsWithIdOnly = await prisma.bank_details.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends bank_detailsCreateManyAndReturnArgs>(args?: SelectSubset<T, bank_detailsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$bank_detailsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Bank_details.
     * @param {bank_detailsDeleteArgs} args - Arguments to delete one Bank_details.
     * @example
     * // Delete one Bank_details
     * const Bank_details = await prisma.bank_details.delete({
     *   where: {
     *     // ... filter to delete one Bank_details
     *   }
     * })
     * 
     */
    delete<T extends bank_detailsDeleteArgs>(args: SelectSubset<T, bank_detailsDeleteArgs<ExtArgs>>): Prisma__bank_detailsClient<$Result.GetResult<Prisma.$bank_detailsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Bank_details.
     * @param {bank_detailsUpdateArgs} args - Arguments to update one Bank_details.
     * @example
     * // Update one Bank_details
     * const bank_details = await prisma.bank_details.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends bank_detailsUpdateArgs>(args: SelectSubset<T, bank_detailsUpdateArgs<ExtArgs>>): Prisma__bank_detailsClient<$Result.GetResult<Prisma.$bank_detailsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Bank_details.
     * @param {bank_detailsDeleteManyArgs} args - Arguments to filter Bank_details to delete.
     * @example
     * // Delete a few Bank_details
     * const { count } = await prisma.bank_details.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends bank_detailsDeleteManyArgs>(args?: SelectSubset<T, bank_detailsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Bank_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bank_detailsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Bank_details
     * const bank_details = await prisma.bank_details.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends bank_detailsUpdateManyArgs>(args: SelectSubset<T, bank_detailsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Bank_details and returns the data updated in the database.
     * @param {bank_detailsUpdateManyAndReturnArgs} args - Arguments to update many Bank_details.
     * @example
     * // Update many Bank_details
     * const bank_details = await prisma.bank_details.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Bank_details and only return the `id`
     * const bank_detailsWithIdOnly = await prisma.bank_details.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends bank_detailsUpdateManyAndReturnArgs>(args: SelectSubset<T, bank_detailsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$bank_detailsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Bank_details.
     * @param {bank_detailsUpsertArgs} args - Arguments to update or create a Bank_details.
     * @example
     * // Update or create a Bank_details
     * const bank_details = await prisma.bank_details.upsert({
     *   create: {
     *     // ... data to create a Bank_details
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Bank_details we want to update
     *   }
     * })
     */
    upsert<T extends bank_detailsUpsertArgs>(args: SelectSubset<T, bank_detailsUpsertArgs<ExtArgs>>): Prisma__bank_detailsClient<$Result.GetResult<Prisma.$bank_detailsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Bank_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bank_detailsCountArgs} args - Arguments to filter Bank_details to count.
     * @example
     * // Count the number of Bank_details
     * const count = await prisma.bank_details.count({
     *   where: {
     *     // ... the filter for the Bank_details we want to count
     *   }
     * })
    **/
    count<T extends bank_detailsCountArgs>(
      args?: Subset<T, bank_detailsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Bank_detailsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Bank_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Bank_detailsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Bank_detailsAggregateArgs>(args: Subset<T, Bank_detailsAggregateArgs>): Prisma.PrismaPromise<GetBank_detailsAggregateType<T>>

    /**
     * Group by Bank_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bank_detailsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends bank_detailsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: bank_detailsGroupByArgs['orderBy'] }
        : { orderBy?: bank_detailsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, bank_detailsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBank_detailsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the bank_details model
   */
  readonly fields: bank_detailsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for bank_details.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__bank_detailsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    employees<T extends employeesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, employeesDefaultArgs<ExtArgs>>): Prisma__employeesClient<$Result.GetResult<Prisma.$employeesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the bank_details model
   */
  interface bank_detailsFieldRefs {
    readonly id: FieldRef<"bank_details", 'Int'>
    readonly employee_id: FieldRef<"bank_details", 'Int'>
    readonly account_holder_name: FieldRef<"bank_details", 'String'>
    readonly bank_name: FieldRef<"bank_details", 'String'>
    readonly branch_name: FieldRef<"bank_details", 'String'>
    readonly account_number: FieldRef<"bank_details", 'String'>
    readonly ifsc_code: FieldRef<"bank_details", 'String'>
    readonly checkbook_document: FieldRef<"bank_details", 'String'>
  }
    

  // Custom InputTypes
  /**
   * bank_details findUnique
   */
  export type bank_detailsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bank_details
     */
    select?: bank_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bank_details
     */
    omit?: bank_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bank_detailsInclude<ExtArgs> | null
    /**
     * Filter, which bank_details to fetch.
     */
    where: bank_detailsWhereUniqueInput
  }

  /**
   * bank_details findUniqueOrThrow
   */
  export type bank_detailsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bank_details
     */
    select?: bank_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bank_details
     */
    omit?: bank_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bank_detailsInclude<ExtArgs> | null
    /**
     * Filter, which bank_details to fetch.
     */
    where: bank_detailsWhereUniqueInput
  }

  /**
   * bank_details findFirst
   */
  export type bank_detailsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bank_details
     */
    select?: bank_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bank_details
     */
    omit?: bank_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bank_detailsInclude<ExtArgs> | null
    /**
     * Filter, which bank_details to fetch.
     */
    where?: bank_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of bank_details to fetch.
     */
    orderBy?: bank_detailsOrderByWithRelationInput | bank_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for bank_details.
     */
    cursor?: bank_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` bank_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` bank_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of bank_details.
     */
    distinct?: Bank_detailsScalarFieldEnum | Bank_detailsScalarFieldEnum[]
  }

  /**
   * bank_details findFirstOrThrow
   */
  export type bank_detailsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bank_details
     */
    select?: bank_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bank_details
     */
    omit?: bank_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bank_detailsInclude<ExtArgs> | null
    /**
     * Filter, which bank_details to fetch.
     */
    where?: bank_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of bank_details to fetch.
     */
    orderBy?: bank_detailsOrderByWithRelationInput | bank_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for bank_details.
     */
    cursor?: bank_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` bank_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` bank_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of bank_details.
     */
    distinct?: Bank_detailsScalarFieldEnum | Bank_detailsScalarFieldEnum[]
  }

  /**
   * bank_details findMany
   */
  export type bank_detailsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bank_details
     */
    select?: bank_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bank_details
     */
    omit?: bank_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bank_detailsInclude<ExtArgs> | null
    /**
     * Filter, which bank_details to fetch.
     */
    where?: bank_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of bank_details to fetch.
     */
    orderBy?: bank_detailsOrderByWithRelationInput | bank_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing bank_details.
     */
    cursor?: bank_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` bank_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` bank_details.
     */
    skip?: number
    distinct?: Bank_detailsScalarFieldEnum | Bank_detailsScalarFieldEnum[]
  }

  /**
   * bank_details create
   */
  export type bank_detailsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bank_details
     */
    select?: bank_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bank_details
     */
    omit?: bank_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bank_detailsInclude<ExtArgs> | null
    /**
     * The data needed to create a bank_details.
     */
    data: XOR<bank_detailsCreateInput, bank_detailsUncheckedCreateInput>
  }

  /**
   * bank_details createMany
   */
  export type bank_detailsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many bank_details.
     */
    data: bank_detailsCreateManyInput | bank_detailsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * bank_details createManyAndReturn
   */
  export type bank_detailsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bank_details
     */
    select?: bank_detailsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the bank_details
     */
    omit?: bank_detailsOmit<ExtArgs> | null
    /**
     * The data used to create many bank_details.
     */
    data: bank_detailsCreateManyInput | bank_detailsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bank_detailsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * bank_details update
   */
  export type bank_detailsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bank_details
     */
    select?: bank_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bank_details
     */
    omit?: bank_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bank_detailsInclude<ExtArgs> | null
    /**
     * The data needed to update a bank_details.
     */
    data: XOR<bank_detailsUpdateInput, bank_detailsUncheckedUpdateInput>
    /**
     * Choose, which bank_details to update.
     */
    where: bank_detailsWhereUniqueInput
  }

  /**
   * bank_details updateMany
   */
  export type bank_detailsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update bank_details.
     */
    data: XOR<bank_detailsUpdateManyMutationInput, bank_detailsUncheckedUpdateManyInput>
    /**
     * Filter which bank_details to update
     */
    where?: bank_detailsWhereInput
    /**
     * Limit how many bank_details to update.
     */
    limit?: number
  }

  /**
   * bank_details updateManyAndReturn
   */
  export type bank_detailsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bank_details
     */
    select?: bank_detailsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the bank_details
     */
    omit?: bank_detailsOmit<ExtArgs> | null
    /**
     * The data used to update bank_details.
     */
    data: XOR<bank_detailsUpdateManyMutationInput, bank_detailsUncheckedUpdateManyInput>
    /**
     * Filter which bank_details to update
     */
    where?: bank_detailsWhereInput
    /**
     * Limit how many bank_details to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bank_detailsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * bank_details upsert
   */
  export type bank_detailsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bank_details
     */
    select?: bank_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bank_details
     */
    omit?: bank_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bank_detailsInclude<ExtArgs> | null
    /**
     * The filter to search for the bank_details to update in case it exists.
     */
    where: bank_detailsWhereUniqueInput
    /**
     * In case the bank_details found by the `where` argument doesn't exist, create a new bank_details with this data.
     */
    create: XOR<bank_detailsCreateInput, bank_detailsUncheckedCreateInput>
    /**
     * In case the bank_details was found with the provided `where` argument, update it with this data.
     */
    update: XOR<bank_detailsUpdateInput, bank_detailsUncheckedUpdateInput>
  }

  /**
   * bank_details delete
   */
  export type bank_detailsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bank_details
     */
    select?: bank_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bank_details
     */
    omit?: bank_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bank_detailsInclude<ExtArgs> | null
    /**
     * Filter which bank_details to delete.
     */
    where: bank_detailsWhereUniqueInput
  }

  /**
   * bank_details deleteMany
   */
  export type bank_detailsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which bank_details to delete
     */
    where?: bank_detailsWhereInput
    /**
     * Limit how many bank_details to delete.
     */
    limit?: number
  }

  /**
   * bank_details without action
   */
  export type bank_detailsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bank_details
     */
    select?: bank_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bank_details
     */
    omit?: bank_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bank_detailsInclude<ExtArgs> | null
  }


  /**
   * Model candidates
   */

  export type AggregateCandidates = {
    _count: CandidatesCountAggregateOutputType | null
    _avg: CandidatesAvgAggregateOutputType | null
    _sum: CandidatesSumAggregateOutputType | null
    _min: CandidatesMinAggregateOutputType | null
    _max: CandidatesMaxAggregateOutputType | null
  }

  export type CandidatesAvgAggregateOutputType = {
    id: number | null
  }

  export type CandidatesSumAggregateOutputType = {
    id: number | null
  }

  export type CandidatesMinAggregateOutputType = {
    id: number | null
    candidate_id: string | null
    name: string | null
    email: string | null
    contact_number: string | null
    interview_date: Date | null
    resume: string | null
    form_link: string | null
    status: $Enums.candidates_status | null
    created_at: Date | null
    form_token: string | null
    interview_mail_status: string | null
    form_status: string | null
    verification: boolean | null
  }

  export type CandidatesMaxAggregateOutputType = {
    id: number | null
    candidate_id: string | null
    name: string | null
    email: string | null
    contact_number: string | null
    interview_date: Date | null
    resume: string | null
    form_link: string | null
    status: $Enums.candidates_status | null
    created_at: Date | null
    form_token: string | null
    interview_mail_status: string | null
    form_status: string | null
    verification: boolean | null
  }

  export type CandidatesCountAggregateOutputType = {
    id: number
    candidate_id: number
    name: number
    email: number
    contact_number: number
    interview_date: number
    resume: number
    form_link: number
    status: number
    created_at: number
    form_token: number
    interview_mail_status: number
    form_status: number
    verification: number
    _all: number
  }


  export type CandidatesAvgAggregateInputType = {
    id?: true
  }

  export type CandidatesSumAggregateInputType = {
    id?: true
  }

  export type CandidatesMinAggregateInputType = {
    id?: true
    candidate_id?: true
    name?: true
    email?: true
    contact_number?: true
    interview_date?: true
    resume?: true
    form_link?: true
    status?: true
    created_at?: true
    form_token?: true
    interview_mail_status?: true
    form_status?: true
    verification?: true
  }

  export type CandidatesMaxAggregateInputType = {
    id?: true
    candidate_id?: true
    name?: true
    email?: true
    contact_number?: true
    interview_date?: true
    resume?: true
    form_link?: true
    status?: true
    created_at?: true
    form_token?: true
    interview_mail_status?: true
    form_status?: true
    verification?: true
  }

  export type CandidatesCountAggregateInputType = {
    id?: true
    candidate_id?: true
    name?: true
    email?: true
    contact_number?: true
    interview_date?: true
    resume?: true
    form_link?: true
    status?: true
    created_at?: true
    form_token?: true
    interview_mail_status?: true
    form_status?: true
    verification?: true
    _all?: true
  }

  export type CandidatesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which candidates to aggregate.
     */
    where?: candidatesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of candidates to fetch.
     */
    orderBy?: candidatesOrderByWithRelationInput | candidatesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: candidatesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` candidates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` candidates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned candidates
    **/
    _count?: true | CandidatesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CandidatesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CandidatesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CandidatesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CandidatesMaxAggregateInputType
  }

  export type GetCandidatesAggregateType<T extends CandidatesAggregateArgs> = {
        [P in keyof T & keyof AggregateCandidates]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCandidates[P]>
      : GetScalarType<T[P], AggregateCandidates[P]>
  }




  export type candidatesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: candidatesWhereInput
    orderBy?: candidatesOrderByWithAggregationInput | candidatesOrderByWithAggregationInput[]
    by: CandidatesScalarFieldEnum[] | CandidatesScalarFieldEnum
    having?: candidatesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CandidatesCountAggregateInputType | true
    _avg?: CandidatesAvgAggregateInputType
    _sum?: CandidatesSumAggregateInputType
    _min?: CandidatesMinAggregateInputType
    _max?: CandidatesMaxAggregateInputType
  }

  export type CandidatesGroupByOutputType = {
    id: number
    candidate_id: string | null
    name: string
    email: string
    contact_number: string | null
    interview_date: Date | null
    resume: string | null
    form_link: string | null
    status: $Enums.candidates_status | null
    created_at: Date | null
    form_token: string | null
    interview_mail_status: string | null
    form_status: string | null
    verification: boolean | null
    _count: CandidatesCountAggregateOutputType | null
    _avg: CandidatesAvgAggregateOutputType | null
    _sum: CandidatesSumAggregateOutputType | null
    _min: CandidatesMinAggregateOutputType | null
    _max: CandidatesMaxAggregateOutputType | null
  }

  type GetCandidatesGroupByPayload<T extends candidatesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CandidatesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CandidatesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CandidatesGroupByOutputType[P]>
            : GetScalarType<T[P], CandidatesGroupByOutputType[P]>
        }
      >
    >


  export type candidatesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    candidate_id?: boolean
    name?: boolean
    email?: boolean
    contact_number?: boolean
    interview_date?: boolean
    resume?: boolean
    form_link?: boolean
    status?: boolean
    created_at?: boolean
    form_token?: boolean
    interview_mail_status?: boolean
    form_status?: boolean
    verification?: boolean
  }, ExtArgs["result"]["candidates"]>

  export type candidatesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    candidate_id?: boolean
    name?: boolean
    email?: boolean
    contact_number?: boolean
    interview_date?: boolean
    resume?: boolean
    form_link?: boolean
    status?: boolean
    created_at?: boolean
    form_token?: boolean
    interview_mail_status?: boolean
    form_status?: boolean
    verification?: boolean
  }, ExtArgs["result"]["candidates"]>

  export type candidatesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    candidate_id?: boolean
    name?: boolean
    email?: boolean
    contact_number?: boolean
    interview_date?: boolean
    resume?: boolean
    form_link?: boolean
    status?: boolean
    created_at?: boolean
    form_token?: boolean
    interview_mail_status?: boolean
    form_status?: boolean
    verification?: boolean
  }, ExtArgs["result"]["candidates"]>

  export type candidatesSelectScalar = {
    id?: boolean
    candidate_id?: boolean
    name?: boolean
    email?: boolean
    contact_number?: boolean
    interview_date?: boolean
    resume?: boolean
    form_link?: boolean
    status?: boolean
    created_at?: boolean
    form_token?: boolean
    interview_mail_status?: boolean
    form_status?: boolean
    verification?: boolean
  }

  export type candidatesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "candidate_id" | "name" | "email" | "contact_number" | "interview_date" | "resume" | "form_link" | "status" | "created_at" | "form_token" | "interview_mail_status" | "form_status" | "verification", ExtArgs["result"]["candidates"]>

  export type $candidatesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "candidates"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      candidate_id: string | null
      name: string
      email: string
      contact_number: string | null
      interview_date: Date | null
      resume: string | null
      form_link: string | null
      status: $Enums.candidates_status | null
      created_at: Date | null
      form_token: string | null
      interview_mail_status: string | null
      form_status: string | null
      verification: boolean | null
    }, ExtArgs["result"]["candidates"]>
    composites: {}
  }

  type candidatesGetPayload<S extends boolean | null | undefined | candidatesDefaultArgs> = $Result.GetResult<Prisma.$candidatesPayload, S>

  type candidatesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<candidatesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CandidatesCountAggregateInputType | true
    }

  export interface candidatesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['candidates'], meta: { name: 'candidates' } }
    /**
     * Find zero or one Candidates that matches the filter.
     * @param {candidatesFindUniqueArgs} args - Arguments to find a Candidates
     * @example
     * // Get one Candidates
     * const candidates = await prisma.candidates.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends candidatesFindUniqueArgs>(args: SelectSubset<T, candidatesFindUniqueArgs<ExtArgs>>): Prisma__candidatesClient<$Result.GetResult<Prisma.$candidatesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Candidates that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {candidatesFindUniqueOrThrowArgs} args - Arguments to find a Candidates
     * @example
     * // Get one Candidates
     * const candidates = await prisma.candidates.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends candidatesFindUniqueOrThrowArgs>(args: SelectSubset<T, candidatesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__candidatesClient<$Result.GetResult<Prisma.$candidatesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Candidates that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {candidatesFindFirstArgs} args - Arguments to find a Candidates
     * @example
     * // Get one Candidates
     * const candidates = await prisma.candidates.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends candidatesFindFirstArgs>(args?: SelectSubset<T, candidatesFindFirstArgs<ExtArgs>>): Prisma__candidatesClient<$Result.GetResult<Prisma.$candidatesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Candidates that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {candidatesFindFirstOrThrowArgs} args - Arguments to find a Candidates
     * @example
     * // Get one Candidates
     * const candidates = await prisma.candidates.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends candidatesFindFirstOrThrowArgs>(args?: SelectSubset<T, candidatesFindFirstOrThrowArgs<ExtArgs>>): Prisma__candidatesClient<$Result.GetResult<Prisma.$candidatesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Candidates that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {candidatesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Candidates
     * const candidates = await prisma.candidates.findMany()
     * 
     * // Get first 10 Candidates
     * const candidates = await prisma.candidates.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const candidatesWithIdOnly = await prisma.candidates.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends candidatesFindManyArgs>(args?: SelectSubset<T, candidatesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$candidatesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Candidates.
     * @param {candidatesCreateArgs} args - Arguments to create a Candidates.
     * @example
     * // Create one Candidates
     * const Candidates = await prisma.candidates.create({
     *   data: {
     *     // ... data to create a Candidates
     *   }
     * })
     * 
     */
    create<T extends candidatesCreateArgs>(args: SelectSubset<T, candidatesCreateArgs<ExtArgs>>): Prisma__candidatesClient<$Result.GetResult<Prisma.$candidatesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Candidates.
     * @param {candidatesCreateManyArgs} args - Arguments to create many Candidates.
     * @example
     * // Create many Candidates
     * const candidates = await prisma.candidates.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends candidatesCreateManyArgs>(args?: SelectSubset<T, candidatesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Candidates and returns the data saved in the database.
     * @param {candidatesCreateManyAndReturnArgs} args - Arguments to create many Candidates.
     * @example
     * // Create many Candidates
     * const candidates = await prisma.candidates.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Candidates and only return the `id`
     * const candidatesWithIdOnly = await prisma.candidates.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends candidatesCreateManyAndReturnArgs>(args?: SelectSubset<T, candidatesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$candidatesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Candidates.
     * @param {candidatesDeleteArgs} args - Arguments to delete one Candidates.
     * @example
     * // Delete one Candidates
     * const Candidates = await prisma.candidates.delete({
     *   where: {
     *     // ... filter to delete one Candidates
     *   }
     * })
     * 
     */
    delete<T extends candidatesDeleteArgs>(args: SelectSubset<T, candidatesDeleteArgs<ExtArgs>>): Prisma__candidatesClient<$Result.GetResult<Prisma.$candidatesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Candidates.
     * @param {candidatesUpdateArgs} args - Arguments to update one Candidates.
     * @example
     * // Update one Candidates
     * const candidates = await prisma.candidates.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends candidatesUpdateArgs>(args: SelectSubset<T, candidatesUpdateArgs<ExtArgs>>): Prisma__candidatesClient<$Result.GetResult<Prisma.$candidatesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Candidates.
     * @param {candidatesDeleteManyArgs} args - Arguments to filter Candidates to delete.
     * @example
     * // Delete a few Candidates
     * const { count } = await prisma.candidates.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends candidatesDeleteManyArgs>(args?: SelectSubset<T, candidatesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Candidates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {candidatesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Candidates
     * const candidates = await prisma.candidates.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends candidatesUpdateManyArgs>(args: SelectSubset<T, candidatesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Candidates and returns the data updated in the database.
     * @param {candidatesUpdateManyAndReturnArgs} args - Arguments to update many Candidates.
     * @example
     * // Update many Candidates
     * const candidates = await prisma.candidates.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Candidates and only return the `id`
     * const candidatesWithIdOnly = await prisma.candidates.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends candidatesUpdateManyAndReturnArgs>(args: SelectSubset<T, candidatesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$candidatesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Candidates.
     * @param {candidatesUpsertArgs} args - Arguments to update or create a Candidates.
     * @example
     * // Update or create a Candidates
     * const candidates = await prisma.candidates.upsert({
     *   create: {
     *     // ... data to create a Candidates
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Candidates we want to update
     *   }
     * })
     */
    upsert<T extends candidatesUpsertArgs>(args: SelectSubset<T, candidatesUpsertArgs<ExtArgs>>): Prisma__candidatesClient<$Result.GetResult<Prisma.$candidatesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Candidates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {candidatesCountArgs} args - Arguments to filter Candidates to count.
     * @example
     * // Count the number of Candidates
     * const count = await prisma.candidates.count({
     *   where: {
     *     // ... the filter for the Candidates we want to count
     *   }
     * })
    **/
    count<T extends candidatesCountArgs>(
      args?: Subset<T, candidatesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CandidatesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Candidates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidatesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CandidatesAggregateArgs>(args: Subset<T, CandidatesAggregateArgs>): Prisma.PrismaPromise<GetCandidatesAggregateType<T>>

    /**
     * Group by Candidates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {candidatesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends candidatesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: candidatesGroupByArgs['orderBy'] }
        : { orderBy?: candidatesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, candidatesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCandidatesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the candidates model
   */
  readonly fields: candidatesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for candidates.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__candidatesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the candidates model
   */
  interface candidatesFieldRefs {
    readonly id: FieldRef<"candidates", 'Int'>
    readonly candidate_id: FieldRef<"candidates", 'String'>
    readonly name: FieldRef<"candidates", 'String'>
    readonly email: FieldRef<"candidates", 'String'>
    readonly contact_number: FieldRef<"candidates", 'String'>
    readonly interview_date: FieldRef<"candidates", 'DateTime'>
    readonly resume: FieldRef<"candidates", 'String'>
    readonly form_link: FieldRef<"candidates", 'String'>
    readonly status: FieldRef<"candidates", 'candidates_status'>
    readonly created_at: FieldRef<"candidates", 'DateTime'>
    readonly form_token: FieldRef<"candidates", 'String'>
    readonly interview_mail_status: FieldRef<"candidates", 'String'>
    readonly form_status: FieldRef<"candidates", 'String'>
    readonly verification: FieldRef<"candidates", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * candidates findUnique
   */
  export type candidatesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candidates
     */
    select?: candidatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the candidates
     */
    omit?: candidatesOmit<ExtArgs> | null
    /**
     * Filter, which candidates to fetch.
     */
    where: candidatesWhereUniqueInput
  }

  /**
   * candidates findUniqueOrThrow
   */
  export type candidatesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candidates
     */
    select?: candidatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the candidates
     */
    omit?: candidatesOmit<ExtArgs> | null
    /**
     * Filter, which candidates to fetch.
     */
    where: candidatesWhereUniqueInput
  }

  /**
   * candidates findFirst
   */
  export type candidatesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candidates
     */
    select?: candidatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the candidates
     */
    omit?: candidatesOmit<ExtArgs> | null
    /**
     * Filter, which candidates to fetch.
     */
    where?: candidatesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of candidates to fetch.
     */
    orderBy?: candidatesOrderByWithRelationInput | candidatesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for candidates.
     */
    cursor?: candidatesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` candidates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` candidates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of candidates.
     */
    distinct?: CandidatesScalarFieldEnum | CandidatesScalarFieldEnum[]
  }

  /**
   * candidates findFirstOrThrow
   */
  export type candidatesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candidates
     */
    select?: candidatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the candidates
     */
    omit?: candidatesOmit<ExtArgs> | null
    /**
     * Filter, which candidates to fetch.
     */
    where?: candidatesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of candidates to fetch.
     */
    orderBy?: candidatesOrderByWithRelationInput | candidatesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for candidates.
     */
    cursor?: candidatesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` candidates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` candidates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of candidates.
     */
    distinct?: CandidatesScalarFieldEnum | CandidatesScalarFieldEnum[]
  }

  /**
   * candidates findMany
   */
  export type candidatesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candidates
     */
    select?: candidatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the candidates
     */
    omit?: candidatesOmit<ExtArgs> | null
    /**
     * Filter, which candidates to fetch.
     */
    where?: candidatesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of candidates to fetch.
     */
    orderBy?: candidatesOrderByWithRelationInput | candidatesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing candidates.
     */
    cursor?: candidatesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` candidates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` candidates.
     */
    skip?: number
    distinct?: CandidatesScalarFieldEnum | CandidatesScalarFieldEnum[]
  }

  /**
   * candidates create
   */
  export type candidatesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candidates
     */
    select?: candidatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the candidates
     */
    omit?: candidatesOmit<ExtArgs> | null
    /**
     * The data needed to create a candidates.
     */
    data: XOR<candidatesCreateInput, candidatesUncheckedCreateInput>
  }

  /**
   * candidates createMany
   */
  export type candidatesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many candidates.
     */
    data: candidatesCreateManyInput | candidatesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * candidates createManyAndReturn
   */
  export type candidatesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candidates
     */
    select?: candidatesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the candidates
     */
    omit?: candidatesOmit<ExtArgs> | null
    /**
     * The data used to create many candidates.
     */
    data: candidatesCreateManyInput | candidatesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * candidates update
   */
  export type candidatesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candidates
     */
    select?: candidatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the candidates
     */
    omit?: candidatesOmit<ExtArgs> | null
    /**
     * The data needed to update a candidates.
     */
    data: XOR<candidatesUpdateInput, candidatesUncheckedUpdateInput>
    /**
     * Choose, which candidates to update.
     */
    where: candidatesWhereUniqueInput
  }

  /**
   * candidates updateMany
   */
  export type candidatesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update candidates.
     */
    data: XOR<candidatesUpdateManyMutationInput, candidatesUncheckedUpdateManyInput>
    /**
     * Filter which candidates to update
     */
    where?: candidatesWhereInput
    /**
     * Limit how many candidates to update.
     */
    limit?: number
  }

  /**
   * candidates updateManyAndReturn
   */
  export type candidatesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candidates
     */
    select?: candidatesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the candidates
     */
    omit?: candidatesOmit<ExtArgs> | null
    /**
     * The data used to update candidates.
     */
    data: XOR<candidatesUpdateManyMutationInput, candidatesUncheckedUpdateManyInput>
    /**
     * Filter which candidates to update
     */
    where?: candidatesWhereInput
    /**
     * Limit how many candidates to update.
     */
    limit?: number
  }

  /**
   * candidates upsert
   */
  export type candidatesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candidates
     */
    select?: candidatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the candidates
     */
    omit?: candidatesOmit<ExtArgs> | null
    /**
     * The filter to search for the candidates to update in case it exists.
     */
    where: candidatesWhereUniqueInput
    /**
     * In case the candidates found by the `where` argument doesn't exist, create a new candidates with this data.
     */
    create: XOR<candidatesCreateInput, candidatesUncheckedCreateInput>
    /**
     * In case the candidates was found with the provided `where` argument, update it with this data.
     */
    update: XOR<candidatesUpdateInput, candidatesUncheckedUpdateInput>
  }

  /**
   * candidates delete
   */
  export type candidatesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candidates
     */
    select?: candidatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the candidates
     */
    omit?: candidatesOmit<ExtArgs> | null
    /**
     * Filter which candidates to delete.
     */
    where: candidatesWhereUniqueInput
  }

  /**
   * candidates deleteMany
   */
  export type candidatesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which candidates to delete
     */
    where?: candidatesWhereInput
    /**
     * Limit how many candidates to delete.
     */
    limit?: number
  }

  /**
   * candidates without action
   */
  export type candidatesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candidates
     */
    select?: candidatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the candidates
     */
    omit?: candidatesOmit<ExtArgs> | null
  }


  /**
   * Model compliance_documents
   */

  export type AggregateCompliance_documents = {
    _count: Compliance_documentsCountAggregateOutputType | null
    _avg: Compliance_documentsAvgAggregateOutputType | null
    _sum: Compliance_documentsSumAggregateOutputType | null
    _min: Compliance_documentsMinAggregateOutputType | null
    _max: Compliance_documentsMaxAggregateOutputType | null
  }

  export type Compliance_documentsAvgAggregateOutputType = {
    id: number | null
    empid: number | null
  }

  export type Compliance_documentsSumAggregateOutputType = {
    id: number | null
    empid: number | null
  }

  export type Compliance_documentsMinAggregateOutputType = {
    id: number | null
    empid: number | null
    doc_type: string | null
    file_path: string | null
    uploaded_at: Date | null
    expires_on: Date | null
  }

  export type Compliance_documentsMaxAggregateOutputType = {
    id: number | null
    empid: number | null
    doc_type: string | null
    file_path: string | null
    uploaded_at: Date | null
    expires_on: Date | null
  }

  export type Compliance_documentsCountAggregateOutputType = {
    id: number
    empid: number
    doc_type: number
    file_path: number
    uploaded_at: number
    expires_on: number
    _all: number
  }


  export type Compliance_documentsAvgAggregateInputType = {
    id?: true
    empid?: true
  }

  export type Compliance_documentsSumAggregateInputType = {
    id?: true
    empid?: true
  }

  export type Compliance_documentsMinAggregateInputType = {
    id?: true
    empid?: true
    doc_type?: true
    file_path?: true
    uploaded_at?: true
    expires_on?: true
  }

  export type Compliance_documentsMaxAggregateInputType = {
    id?: true
    empid?: true
    doc_type?: true
    file_path?: true
    uploaded_at?: true
    expires_on?: true
  }

  export type Compliance_documentsCountAggregateInputType = {
    id?: true
    empid?: true
    doc_type?: true
    file_path?: true
    uploaded_at?: true
    expires_on?: true
    _all?: true
  }

  export type Compliance_documentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which compliance_documents to aggregate.
     */
    where?: compliance_documentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of compliance_documents to fetch.
     */
    orderBy?: compliance_documentsOrderByWithRelationInput | compliance_documentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: compliance_documentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` compliance_documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` compliance_documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned compliance_documents
    **/
    _count?: true | Compliance_documentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Compliance_documentsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Compliance_documentsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Compliance_documentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Compliance_documentsMaxAggregateInputType
  }

  export type GetCompliance_documentsAggregateType<T extends Compliance_documentsAggregateArgs> = {
        [P in keyof T & keyof AggregateCompliance_documents]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCompliance_documents[P]>
      : GetScalarType<T[P], AggregateCompliance_documents[P]>
  }




  export type compliance_documentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: compliance_documentsWhereInput
    orderBy?: compliance_documentsOrderByWithAggregationInput | compliance_documentsOrderByWithAggregationInput[]
    by: Compliance_documentsScalarFieldEnum[] | Compliance_documentsScalarFieldEnum
    having?: compliance_documentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Compliance_documentsCountAggregateInputType | true
    _avg?: Compliance_documentsAvgAggregateInputType
    _sum?: Compliance_documentsSumAggregateInputType
    _min?: Compliance_documentsMinAggregateInputType
    _max?: Compliance_documentsMaxAggregateInputType
  }

  export type Compliance_documentsGroupByOutputType = {
    id: number
    empid: number | null
    doc_type: string | null
    file_path: string | null
    uploaded_at: Date | null
    expires_on: Date | null
    _count: Compliance_documentsCountAggregateOutputType | null
    _avg: Compliance_documentsAvgAggregateOutputType | null
    _sum: Compliance_documentsSumAggregateOutputType | null
    _min: Compliance_documentsMinAggregateOutputType | null
    _max: Compliance_documentsMaxAggregateOutputType | null
  }

  type GetCompliance_documentsGroupByPayload<T extends compliance_documentsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Compliance_documentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Compliance_documentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Compliance_documentsGroupByOutputType[P]>
            : GetScalarType<T[P], Compliance_documentsGroupByOutputType[P]>
        }
      >
    >


  export type compliance_documentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    empid?: boolean
    doc_type?: boolean
    file_path?: boolean
    uploaded_at?: boolean
    expires_on?: boolean
    employees?: boolean | compliance_documents$employeesArgs<ExtArgs>
  }, ExtArgs["result"]["compliance_documents"]>

  export type compliance_documentsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    empid?: boolean
    doc_type?: boolean
    file_path?: boolean
    uploaded_at?: boolean
    expires_on?: boolean
    employees?: boolean | compliance_documents$employeesArgs<ExtArgs>
  }, ExtArgs["result"]["compliance_documents"]>

  export type compliance_documentsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    empid?: boolean
    doc_type?: boolean
    file_path?: boolean
    uploaded_at?: boolean
    expires_on?: boolean
    employees?: boolean | compliance_documents$employeesArgs<ExtArgs>
  }, ExtArgs["result"]["compliance_documents"]>

  export type compliance_documentsSelectScalar = {
    id?: boolean
    empid?: boolean
    doc_type?: boolean
    file_path?: boolean
    uploaded_at?: boolean
    expires_on?: boolean
  }

  export type compliance_documentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "empid" | "doc_type" | "file_path" | "uploaded_at" | "expires_on", ExtArgs["result"]["compliance_documents"]>
  export type compliance_documentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employees?: boolean | compliance_documents$employeesArgs<ExtArgs>
  }
  export type compliance_documentsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employees?: boolean | compliance_documents$employeesArgs<ExtArgs>
  }
  export type compliance_documentsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employees?: boolean | compliance_documents$employeesArgs<ExtArgs>
  }

  export type $compliance_documentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "compliance_documents"
    objects: {
      employees: Prisma.$employeesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      empid: number | null
      doc_type: string | null
      file_path: string | null
      uploaded_at: Date | null
      expires_on: Date | null
    }, ExtArgs["result"]["compliance_documents"]>
    composites: {}
  }

  type compliance_documentsGetPayload<S extends boolean | null | undefined | compliance_documentsDefaultArgs> = $Result.GetResult<Prisma.$compliance_documentsPayload, S>

  type compliance_documentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<compliance_documentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Compliance_documentsCountAggregateInputType | true
    }

  export interface compliance_documentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['compliance_documents'], meta: { name: 'compliance_documents' } }
    /**
     * Find zero or one Compliance_documents that matches the filter.
     * @param {compliance_documentsFindUniqueArgs} args - Arguments to find a Compliance_documents
     * @example
     * // Get one Compliance_documents
     * const compliance_documents = await prisma.compliance_documents.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends compliance_documentsFindUniqueArgs>(args: SelectSubset<T, compliance_documentsFindUniqueArgs<ExtArgs>>): Prisma__compliance_documentsClient<$Result.GetResult<Prisma.$compliance_documentsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Compliance_documents that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {compliance_documentsFindUniqueOrThrowArgs} args - Arguments to find a Compliance_documents
     * @example
     * // Get one Compliance_documents
     * const compliance_documents = await prisma.compliance_documents.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends compliance_documentsFindUniqueOrThrowArgs>(args: SelectSubset<T, compliance_documentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__compliance_documentsClient<$Result.GetResult<Prisma.$compliance_documentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Compliance_documents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {compliance_documentsFindFirstArgs} args - Arguments to find a Compliance_documents
     * @example
     * // Get one Compliance_documents
     * const compliance_documents = await prisma.compliance_documents.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends compliance_documentsFindFirstArgs>(args?: SelectSubset<T, compliance_documentsFindFirstArgs<ExtArgs>>): Prisma__compliance_documentsClient<$Result.GetResult<Prisma.$compliance_documentsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Compliance_documents that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {compliance_documentsFindFirstOrThrowArgs} args - Arguments to find a Compliance_documents
     * @example
     * // Get one Compliance_documents
     * const compliance_documents = await prisma.compliance_documents.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends compliance_documentsFindFirstOrThrowArgs>(args?: SelectSubset<T, compliance_documentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__compliance_documentsClient<$Result.GetResult<Prisma.$compliance_documentsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Compliance_documents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {compliance_documentsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Compliance_documents
     * const compliance_documents = await prisma.compliance_documents.findMany()
     * 
     * // Get first 10 Compliance_documents
     * const compliance_documents = await prisma.compliance_documents.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const compliance_documentsWithIdOnly = await prisma.compliance_documents.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends compliance_documentsFindManyArgs>(args?: SelectSubset<T, compliance_documentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$compliance_documentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Compliance_documents.
     * @param {compliance_documentsCreateArgs} args - Arguments to create a Compliance_documents.
     * @example
     * // Create one Compliance_documents
     * const Compliance_documents = await prisma.compliance_documents.create({
     *   data: {
     *     // ... data to create a Compliance_documents
     *   }
     * })
     * 
     */
    create<T extends compliance_documentsCreateArgs>(args: SelectSubset<T, compliance_documentsCreateArgs<ExtArgs>>): Prisma__compliance_documentsClient<$Result.GetResult<Prisma.$compliance_documentsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Compliance_documents.
     * @param {compliance_documentsCreateManyArgs} args - Arguments to create many Compliance_documents.
     * @example
     * // Create many Compliance_documents
     * const compliance_documents = await prisma.compliance_documents.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends compliance_documentsCreateManyArgs>(args?: SelectSubset<T, compliance_documentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Compliance_documents and returns the data saved in the database.
     * @param {compliance_documentsCreateManyAndReturnArgs} args - Arguments to create many Compliance_documents.
     * @example
     * // Create many Compliance_documents
     * const compliance_documents = await prisma.compliance_documents.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Compliance_documents and only return the `id`
     * const compliance_documentsWithIdOnly = await prisma.compliance_documents.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends compliance_documentsCreateManyAndReturnArgs>(args?: SelectSubset<T, compliance_documentsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$compliance_documentsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Compliance_documents.
     * @param {compliance_documentsDeleteArgs} args - Arguments to delete one Compliance_documents.
     * @example
     * // Delete one Compliance_documents
     * const Compliance_documents = await prisma.compliance_documents.delete({
     *   where: {
     *     // ... filter to delete one Compliance_documents
     *   }
     * })
     * 
     */
    delete<T extends compliance_documentsDeleteArgs>(args: SelectSubset<T, compliance_documentsDeleteArgs<ExtArgs>>): Prisma__compliance_documentsClient<$Result.GetResult<Prisma.$compliance_documentsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Compliance_documents.
     * @param {compliance_documentsUpdateArgs} args - Arguments to update one Compliance_documents.
     * @example
     * // Update one Compliance_documents
     * const compliance_documents = await prisma.compliance_documents.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends compliance_documentsUpdateArgs>(args: SelectSubset<T, compliance_documentsUpdateArgs<ExtArgs>>): Prisma__compliance_documentsClient<$Result.GetResult<Prisma.$compliance_documentsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Compliance_documents.
     * @param {compliance_documentsDeleteManyArgs} args - Arguments to filter Compliance_documents to delete.
     * @example
     * // Delete a few Compliance_documents
     * const { count } = await prisma.compliance_documents.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends compliance_documentsDeleteManyArgs>(args?: SelectSubset<T, compliance_documentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Compliance_documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {compliance_documentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Compliance_documents
     * const compliance_documents = await prisma.compliance_documents.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends compliance_documentsUpdateManyArgs>(args: SelectSubset<T, compliance_documentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Compliance_documents and returns the data updated in the database.
     * @param {compliance_documentsUpdateManyAndReturnArgs} args - Arguments to update many Compliance_documents.
     * @example
     * // Update many Compliance_documents
     * const compliance_documents = await prisma.compliance_documents.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Compliance_documents and only return the `id`
     * const compliance_documentsWithIdOnly = await prisma.compliance_documents.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends compliance_documentsUpdateManyAndReturnArgs>(args: SelectSubset<T, compliance_documentsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$compliance_documentsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Compliance_documents.
     * @param {compliance_documentsUpsertArgs} args - Arguments to update or create a Compliance_documents.
     * @example
     * // Update or create a Compliance_documents
     * const compliance_documents = await prisma.compliance_documents.upsert({
     *   create: {
     *     // ... data to create a Compliance_documents
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Compliance_documents we want to update
     *   }
     * })
     */
    upsert<T extends compliance_documentsUpsertArgs>(args: SelectSubset<T, compliance_documentsUpsertArgs<ExtArgs>>): Prisma__compliance_documentsClient<$Result.GetResult<Prisma.$compliance_documentsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Compliance_documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {compliance_documentsCountArgs} args - Arguments to filter Compliance_documents to count.
     * @example
     * // Count the number of Compliance_documents
     * const count = await prisma.compliance_documents.count({
     *   where: {
     *     // ... the filter for the Compliance_documents we want to count
     *   }
     * })
    **/
    count<T extends compliance_documentsCountArgs>(
      args?: Subset<T, compliance_documentsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Compliance_documentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Compliance_documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Compliance_documentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Compliance_documentsAggregateArgs>(args: Subset<T, Compliance_documentsAggregateArgs>): Prisma.PrismaPromise<GetCompliance_documentsAggregateType<T>>

    /**
     * Group by Compliance_documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {compliance_documentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends compliance_documentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: compliance_documentsGroupByArgs['orderBy'] }
        : { orderBy?: compliance_documentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, compliance_documentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCompliance_documentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the compliance_documents model
   */
  readonly fields: compliance_documentsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for compliance_documents.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__compliance_documentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    employees<T extends compliance_documents$employeesArgs<ExtArgs> = {}>(args?: Subset<T, compliance_documents$employeesArgs<ExtArgs>>): Prisma__employeesClient<$Result.GetResult<Prisma.$employeesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the compliance_documents model
   */
  interface compliance_documentsFieldRefs {
    readonly id: FieldRef<"compliance_documents", 'Int'>
    readonly empid: FieldRef<"compliance_documents", 'Int'>
    readonly doc_type: FieldRef<"compliance_documents", 'String'>
    readonly file_path: FieldRef<"compliance_documents", 'String'>
    readonly uploaded_at: FieldRef<"compliance_documents", 'DateTime'>
    readonly expires_on: FieldRef<"compliance_documents", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * compliance_documents findUnique
   */
  export type compliance_documentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compliance_documents
     */
    select?: compliance_documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compliance_documents
     */
    omit?: compliance_documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compliance_documentsInclude<ExtArgs> | null
    /**
     * Filter, which compliance_documents to fetch.
     */
    where: compliance_documentsWhereUniqueInput
  }

  /**
   * compliance_documents findUniqueOrThrow
   */
  export type compliance_documentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compliance_documents
     */
    select?: compliance_documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compliance_documents
     */
    omit?: compliance_documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compliance_documentsInclude<ExtArgs> | null
    /**
     * Filter, which compliance_documents to fetch.
     */
    where: compliance_documentsWhereUniqueInput
  }

  /**
   * compliance_documents findFirst
   */
  export type compliance_documentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compliance_documents
     */
    select?: compliance_documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compliance_documents
     */
    omit?: compliance_documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compliance_documentsInclude<ExtArgs> | null
    /**
     * Filter, which compliance_documents to fetch.
     */
    where?: compliance_documentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of compliance_documents to fetch.
     */
    orderBy?: compliance_documentsOrderByWithRelationInput | compliance_documentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for compliance_documents.
     */
    cursor?: compliance_documentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` compliance_documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` compliance_documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of compliance_documents.
     */
    distinct?: Compliance_documentsScalarFieldEnum | Compliance_documentsScalarFieldEnum[]
  }

  /**
   * compliance_documents findFirstOrThrow
   */
  export type compliance_documentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compliance_documents
     */
    select?: compliance_documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compliance_documents
     */
    omit?: compliance_documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compliance_documentsInclude<ExtArgs> | null
    /**
     * Filter, which compliance_documents to fetch.
     */
    where?: compliance_documentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of compliance_documents to fetch.
     */
    orderBy?: compliance_documentsOrderByWithRelationInput | compliance_documentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for compliance_documents.
     */
    cursor?: compliance_documentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` compliance_documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` compliance_documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of compliance_documents.
     */
    distinct?: Compliance_documentsScalarFieldEnum | Compliance_documentsScalarFieldEnum[]
  }

  /**
   * compliance_documents findMany
   */
  export type compliance_documentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compliance_documents
     */
    select?: compliance_documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compliance_documents
     */
    omit?: compliance_documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compliance_documentsInclude<ExtArgs> | null
    /**
     * Filter, which compliance_documents to fetch.
     */
    where?: compliance_documentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of compliance_documents to fetch.
     */
    orderBy?: compliance_documentsOrderByWithRelationInput | compliance_documentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing compliance_documents.
     */
    cursor?: compliance_documentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` compliance_documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` compliance_documents.
     */
    skip?: number
    distinct?: Compliance_documentsScalarFieldEnum | Compliance_documentsScalarFieldEnum[]
  }

  /**
   * compliance_documents create
   */
  export type compliance_documentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compliance_documents
     */
    select?: compliance_documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compliance_documents
     */
    omit?: compliance_documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compliance_documentsInclude<ExtArgs> | null
    /**
     * The data needed to create a compliance_documents.
     */
    data?: XOR<compliance_documentsCreateInput, compliance_documentsUncheckedCreateInput>
  }

  /**
   * compliance_documents createMany
   */
  export type compliance_documentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many compliance_documents.
     */
    data: compliance_documentsCreateManyInput | compliance_documentsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * compliance_documents createManyAndReturn
   */
  export type compliance_documentsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compliance_documents
     */
    select?: compliance_documentsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the compliance_documents
     */
    omit?: compliance_documentsOmit<ExtArgs> | null
    /**
     * The data used to create many compliance_documents.
     */
    data: compliance_documentsCreateManyInput | compliance_documentsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compliance_documentsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * compliance_documents update
   */
  export type compliance_documentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compliance_documents
     */
    select?: compliance_documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compliance_documents
     */
    omit?: compliance_documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compliance_documentsInclude<ExtArgs> | null
    /**
     * The data needed to update a compliance_documents.
     */
    data: XOR<compliance_documentsUpdateInput, compliance_documentsUncheckedUpdateInput>
    /**
     * Choose, which compliance_documents to update.
     */
    where: compliance_documentsWhereUniqueInput
  }

  /**
   * compliance_documents updateMany
   */
  export type compliance_documentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update compliance_documents.
     */
    data: XOR<compliance_documentsUpdateManyMutationInput, compliance_documentsUncheckedUpdateManyInput>
    /**
     * Filter which compliance_documents to update
     */
    where?: compliance_documentsWhereInput
    /**
     * Limit how many compliance_documents to update.
     */
    limit?: number
  }

  /**
   * compliance_documents updateManyAndReturn
   */
  export type compliance_documentsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compliance_documents
     */
    select?: compliance_documentsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the compliance_documents
     */
    omit?: compliance_documentsOmit<ExtArgs> | null
    /**
     * The data used to update compliance_documents.
     */
    data: XOR<compliance_documentsUpdateManyMutationInput, compliance_documentsUncheckedUpdateManyInput>
    /**
     * Filter which compliance_documents to update
     */
    where?: compliance_documentsWhereInput
    /**
     * Limit how many compliance_documents to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compliance_documentsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * compliance_documents upsert
   */
  export type compliance_documentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compliance_documents
     */
    select?: compliance_documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compliance_documents
     */
    omit?: compliance_documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compliance_documentsInclude<ExtArgs> | null
    /**
     * The filter to search for the compliance_documents to update in case it exists.
     */
    where: compliance_documentsWhereUniqueInput
    /**
     * In case the compliance_documents found by the `where` argument doesn't exist, create a new compliance_documents with this data.
     */
    create: XOR<compliance_documentsCreateInput, compliance_documentsUncheckedCreateInput>
    /**
     * In case the compliance_documents was found with the provided `where` argument, update it with this data.
     */
    update: XOR<compliance_documentsUpdateInput, compliance_documentsUncheckedUpdateInput>
  }

  /**
   * compliance_documents delete
   */
  export type compliance_documentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compliance_documents
     */
    select?: compliance_documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compliance_documents
     */
    omit?: compliance_documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compliance_documentsInclude<ExtArgs> | null
    /**
     * Filter which compliance_documents to delete.
     */
    where: compliance_documentsWhereUniqueInput
  }

  /**
   * compliance_documents deleteMany
   */
  export type compliance_documentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which compliance_documents to delete
     */
    where?: compliance_documentsWhereInput
    /**
     * Limit how many compliance_documents to delete.
     */
    limit?: number
  }

  /**
   * compliance_documents.employees
   */
  export type compliance_documents$employeesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employees
     */
    select?: employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employees
     */
    omit?: employeesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeesInclude<ExtArgs> | null
    where?: employeesWhereInput
  }

  /**
   * compliance_documents without action
   */
  export type compliance_documentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compliance_documents
     */
    select?: compliance_documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compliance_documents
     */
    omit?: compliance_documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compliance_documentsInclude<ExtArgs> | null
  }


  /**
   * Model compliance_status
   */

  export type AggregateCompliance_status = {
    _count: Compliance_statusCountAggregateOutputType | null
    _avg: Compliance_statusAvgAggregateOutputType | null
    _sum: Compliance_statusSumAggregateOutputType | null
    _min: Compliance_statusMinAggregateOutputType | null
    _max: Compliance_statusMaxAggregateOutputType | null
  }

  export type Compliance_statusAvgAggregateOutputType = {
    empid: number | null
  }

  export type Compliance_statusSumAggregateOutputType = {
    empid: number | null
  }

  export type Compliance_statusMinAggregateOutputType = {
    empid: number | null
    overall_status: $Enums.compliance_status_overall_status | null
    last_updated: Date | null
  }

  export type Compliance_statusMaxAggregateOutputType = {
    empid: number | null
    overall_status: $Enums.compliance_status_overall_status | null
    last_updated: Date | null
  }

  export type Compliance_statusCountAggregateOutputType = {
    empid: number
    overall_status: number
    last_updated: number
    _all: number
  }


  export type Compliance_statusAvgAggregateInputType = {
    empid?: true
  }

  export type Compliance_statusSumAggregateInputType = {
    empid?: true
  }

  export type Compliance_statusMinAggregateInputType = {
    empid?: true
    overall_status?: true
    last_updated?: true
  }

  export type Compliance_statusMaxAggregateInputType = {
    empid?: true
    overall_status?: true
    last_updated?: true
  }

  export type Compliance_statusCountAggregateInputType = {
    empid?: true
    overall_status?: true
    last_updated?: true
    _all?: true
  }

  export type Compliance_statusAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which compliance_status to aggregate.
     */
    where?: compliance_statusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of compliance_statuses to fetch.
     */
    orderBy?: compliance_statusOrderByWithRelationInput | compliance_statusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: compliance_statusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` compliance_statuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` compliance_statuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned compliance_statuses
    **/
    _count?: true | Compliance_statusCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Compliance_statusAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Compliance_statusSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Compliance_statusMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Compliance_statusMaxAggregateInputType
  }

  export type GetCompliance_statusAggregateType<T extends Compliance_statusAggregateArgs> = {
        [P in keyof T & keyof AggregateCompliance_status]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCompliance_status[P]>
      : GetScalarType<T[P], AggregateCompliance_status[P]>
  }




  export type compliance_statusGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: compliance_statusWhereInput
    orderBy?: compliance_statusOrderByWithAggregationInput | compliance_statusOrderByWithAggregationInput[]
    by: Compliance_statusScalarFieldEnum[] | Compliance_statusScalarFieldEnum
    having?: compliance_statusScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Compliance_statusCountAggregateInputType | true
    _avg?: Compliance_statusAvgAggregateInputType
    _sum?: Compliance_statusSumAggregateInputType
    _min?: Compliance_statusMinAggregateInputType
    _max?: Compliance_statusMaxAggregateInputType
  }

  export type Compliance_statusGroupByOutputType = {
    empid: number
    overall_status: $Enums.compliance_status_overall_status | null
    last_updated: Date | null
    _count: Compliance_statusCountAggregateOutputType | null
    _avg: Compliance_statusAvgAggregateOutputType | null
    _sum: Compliance_statusSumAggregateOutputType | null
    _min: Compliance_statusMinAggregateOutputType | null
    _max: Compliance_statusMaxAggregateOutputType | null
  }

  type GetCompliance_statusGroupByPayload<T extends compliance_statusGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Compliance_statusGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Compliance_statusGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Compliance_statusGroupByOutputType[P]>
            : GetScalarType<T[P], Compliance_statusGroupByOutputType[P]>
        }
      >
    >


  export type compliance_statusSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    empid?: boolean
    overall_status?: boolean
    last_updated?: boolean
    employees?: boolean | employeesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["compliance_status"]>

  export type compliance_statusSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    empid?: boolean
    overall_status?: boolean
    last_updated?: boolean
    employees?: boolean | employeesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["compliance_status"]>

  export type compliance_statusSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    empid?: boolean
    overall_status?: boolean
    last_updated?: boolean
    employees?: boolean | employeesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["compliance_status"]>

  export type compliance_statusSelectScalar = {
    empid?: boolean
    overall_status?: boolean
    last_updated?: boolean
  }

  export type compliance_statusOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"empid" | "overall_status" | "last_updated", ExtArgs["result"]["compliance_status"]>
  export type compliance_statusInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employees?: boolean | employeesDefaultArgs<ExtArgs>
  }
  export type compliance_statusIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employees?: boolean | employeesDefaultArgs<ExtArgs>
  }
  export type compliance_statusIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employees?: boolean | employeesDefaultArgs<ExtArgs>
  }

  export type $compliance_statusPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "compliance_status"
    objects: {
      employees: Prisma.$employeesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      empid: number
      overall_status: $Enums.compliance_status_overall_status | null
      last_updated: Date | null
    }, ExtArgs["result"]["compliance_status"]>
    composites: {}
  }

  type compliance_statusGetPayload<S extends boolean | null | undefined | compliance_statusDefaultArgs> = $Result.GetResult<Prisma.$compliance_statusPayload, S>

  type compliance_statusCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<compliance_statusFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Compliance_statusCountAggregateInputType | true
    }

  export interface compliance_statusDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['compliance_status'], meta: { name: 'compliance_status' } }
    /**
     * Find zero or one Compliance_status that matches the filter.
     * @param {compliance_statusFindUniqueArgs} args - Arguments to find a Compliance_status
     * @example
     * // Get one Compliance_status
     * const compliance_status = await prisma.compliance_status.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends compliance_statusFindUniqueArgs>(args: SelectSubset<T, compliance_statusFindUniqueArgs<ExtArgs>>): Prisma__compliance_statusClient<$Result.GetResult<Prisma.$compliance_statusPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Compliance_status that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {compliance_statusFindUniqueOrThrowArgs} args - Arguments to find a Compliance_status
     * @example
     * // Get one Compliance_status
     * const compliance_status = await prisma.compliance_status.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends compliance_statusFindUniqueOrThrowArgs>(args: SelectSubset<T, compliance_statusFindUniqueOrThrowArgs<ExtArgs>>): Prisma__compliance_statusClient<$Result.GetResult<Prisma.$compliance_statusPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Compliance_status that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {compliance_statusFindFirstArgs} args - Arguments to find a Compliance_status
     * @example
     * // Get one Compliance_status
     * const compliance_status = await prisma.compliance_status.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends compliance_statusFindFirstArgs>(args?: SelectSubset<T, compliance_statusFindFirstArgs<ExtArgs>>): Prisma__compliance_statusClient<$Result.GetResult<Prisma.$compliance_statusPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Compliance_status that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {compliance_statusFindFirstOrThrowArgs} args - Arguments to find a Compliance_status
     * @example
     * // Get one Compliance_status
     * const compliance_status = await prisma.compliance_status.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends compliance_statusFindFirstOrThrowArgs>(args?: SelectSubset<T, compliance_statusFindFirstOrThrowArgs<ExtArgs>>): Prisma__compliance_statusClient<$Result.GetResult<Prisma.$compliance_statusPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Compliance_statuses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {compliance_statusFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Compliance_statuses
     * const compliance_statuses = await prisma.compliance_status.findMany()
     * 
     * // Get first 10 Compliance_statuses
     * const compliance_statuses = await prisma.compliance_status.findMany({ take: 10 })
     * 
     * // Only select the `empid`
     * const compliance_statusWithEmpidOnly = await prisma.compliance_status.findMany({ select: { empid: true } })
     * 
     */
    findMany<T extends compliance_statusFindManyArgs>(args?: SelectSubset<T, compliance_statusFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$compliance_statusPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Compliance_status.
     * @param {compliance_statusCreateArgs} args - Arguments to create a Compliance_status.
     * @example
     * // Create one Compliance_status
     * const Compliance_status = await prisma.compliance_status.create({
     *   data: {
     *     // ... data to create a Compliance_status
     *   }
     * })
     * 
     */
    create<T extends compliance_statusCreateArgs>(args: SelectSubset<T, compliance_statusCreateArgs<ExtArgs>>): Prisma__compliance_statusClient<$Result.GetResult<Prisma.$compliance_statusPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Compliance_statuses.
     * @param {compliance_statusCreateManyArgs} args - Arguments to create many Compliance_statuses.
     * @example
     * // Create many Compliance_statuses
     * const compliance_status = await prisma.compliance_status.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends compliance_statusCreateManyArgs>(args?: SelectSubset<T, compliance_statusCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Compliance_statuses and returns the data saved in the database.
     * @param {compliance_statusCreateManyAndReturnArgs} args - Arguments to create many Compliance_statuses.
     * @example
     * // Create many Compliance_statuses
     * const compliance_status = await prisma.compliance_status.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Compliance_statuses and only return the `empid`
     * const compliance_statusWithEmpidOnly = await prisma.compliance_status.createManyAndReturn({
     *   select: { empid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends compliance_statusCreateManyAndReturnArgs>(args?: SelectSubset<T, compliance_statusCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$compliance_statusPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Compliance_status.
     * @param {compliance_statusDeleteArgs} args - Arguments to delete one Compliance_status.
     * @example
     * // Delete one Compliance_status
     * const Compliance_status = await prisma.compliance_status.delete({
     *   where: {
     *     // ... filter to delete one Compliance_status
     *   }
     * })
     * 
     */
    delete<T extends compliance_statusDeleteArgs>(args: SelectSubset<T, compliance_statusDeleteArgs<ExtArgs>>): Prisma__compliance_statusClient<$Result.GetResult<Prisma.$compliance_statusPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Compliance_status.
     * @param {compliance_statusUpdateArgs} args - Arguments to update one Compliance_status.
     * @example
     * // Update one Compliance_status
     * const compliance_status = await prisma.compliance_status.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends compliance_statusUpdateArgs>(args: SelectSubset<T, compliance_statusUpdateArgs<ExtArgs>>): Prisma__compliance_statusClient<$Result.GetResult<Prisma.$compliance_statusPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Compliance_statuses.
     * @param {compliance_statusDeleteManyArgs} args - Arguments to filter Compliance_statuses to delete.
     * @example
     * // Delete a few Compliance_statuses
     * const { count } = await prisma.compliance_status.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends compliance_statusDeleteManyArgs>(args?: SelectSubset<T, compliance_statusDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Compliance_statuses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {compliance_statusUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Compliance_statuses
     * const compliance_status = await prisma.compliance_status.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends compliance_statusUpdateManyArgs>(args: SelectSubset<T, compliance_statusUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Compliance_statuses and returns the data updated in the database.
     * @param {compliance_statusUpdateManyAndReturnArgs} args - Arguments to update many Compliance_statuses.
     * @example
     * // Update many Compliance_statuses
     * const compliance_status = await prisma.compliance_status.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Compliance_statuses and only return the `empid`
     * const compliance_statusWithEmpidOnly = await prisma.compliance_status.updateManyAndReturn({
     *   select: { empid: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends compliance_statusUpdateManyAndReturnArgs>(args: SelectSubset<T, compliance_statusUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$compliance_statusPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Compliance_status.
     * @param {compliance_statusUpsertArgs} args - Arguments to update or create a Compliance_status.
     * @example
     * // Update or create a Compliance_status
     * const compliance_status = await prisma.compliance_status.upsert({
     *   create: {
     *     // ... data to create a Compliance_status
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Compliance_status we want to update
     *   }
     * })
     */
    upsert<T extends compliance_statusUpsertArgs>(args: SelectSubset<T, compliance_statusUpsertArgs<ExtArgs>>): Prisma__compliance_statusClient<$Result.GetResult<Prisma.$compliance_statusPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Compliance_statuses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {compliance_statusCountArgs} args - Arguments to filter Compliance_statuses to count.
     * @example
     * // Count the number of Compliance_statuses
     * const count = await prisma.compliance_status.count({
     *   where: {
     *     // ... the filter for the Compliance_statuses we want to count
     *   }
     * })
    **/
    count<T extends compliance_statusCountArgs>(
      args?: Subset<T, compliance_statusCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Compliance_statusCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Compliance_status.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Compliance_statusAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Compliance_statusAggregateArgs>(args: Subset<T, Compliance_statusAggregateArgs>): Prisma.PrismaPromise<GetCompliance_statusAggregateType<T>>

    /**
     * Group by Compliance_status.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {compliance_statusGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends compliance_statusGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: compliance_statusGroupByArgs['orderBy'] }
        : { orderBy?: compliance_statusGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, compliance_statusGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCompliance_statusGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the compliance_status model
   */
  readonly fields: compliance_statusFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for compliance_status.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__compliance_statusClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    employees<T extends employeesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, employeesDefaultArgs<ExtArgs>>): Prisma__employeesClient<$Result.GetResult<Prisma.$employeesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the compliance_status model
   */
  interface compliance_statusFieldRefs {
    readonly empid: FieldRef<"compliance_status", 'Int'>
    readonly overall_status: FieldRef<"compliance_status", 'compliance_status_overall_status'>
    readonly last_updated: FieldRef<"compliance_status", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * compliance_status findUnique
   */
  export type compliance_statusFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compliance_status
     */
    select?: compliance_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compliance_status
     */
    omit?: compliance_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compliance_statusInclude<ExtArgs> | null
    /**
     * Filter, which compliance_status to fetch.
     */
    where: compliance_statusWhereUniqueInput
  }

  /**
   * compliance_status findUniqueOrThrow
   */
  export type compliance_statusFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compliance_status
     */
    select?: compliance_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compliance_status
     */
    omit?: compliance_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compliance_statusInclude<ExtArgs> | null
    /**
     * Filter, which compliance_status to fetch.
     */
    where: compliance_statusWhereUniqueInput
  }

  /**
   * compliance_status findFirst
   */
  export type compliance_statusFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compliance_status
     */
    select?: compliance_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compliance_status
     */
    omit?: compliance_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compliance_statusInclude<ExtArgs> | null
    /**
     * Filter, which compliance_status to fetch.
     */
    where?: compliance_statusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of compliance_statuses to fetch.
     */
    orderBy?: compliance_statusOrderByWithRelationInput | compliance_statusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for compliance_statuses.
     */
    cursor?: compliance_statusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` compliance_statuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` compliance_statuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of compliance_statuses.
     */
    distinct?: Compliance_statusScalarFieldEnum | Compliance_statusScalarFieldEnum[]
  }

  /**
   * compliance_status findFirstOrThrow
   */
  export type compliance_statusFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compliance_status
     */
    select?: compliance_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compliance_status
     */
    omit?: compliance_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compliance_statusInclude<ExtArgs> | null
    /**
     * Filter, which compliance_status to fetch.
     */
    where?: compliance_statusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of compliance_statuses to fetch.
     */
    orderBy?: compliance_statusOrderByWithRelationInput | compliance_statusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for compliance_statuses.
     */
    cursor?: compliance_statusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` compliance_statuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` compliance_statuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of compliance_statuses.
     */
    distinct?: Compliance_statusScalarFieldEnum | Compliance_statusScalarFieldEnum[]
  }

  /**
   * compliance_status findMany
   */
  export type compliance_statusFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compliance_status
     */
    select?: compliance_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compliance_status
     */
    omit?: compliance_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compliance_statusInclude<ExtArgs> | null
    /**
     * Filter, which compliance_statuses to fetch.
     */
    where?: compliance_statusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of compliance_statuses to fetch.
     */
    orderBy?: compliance_statusOrderByWithRelationInput | compliance_statusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing compliance_statuses.
     */
    cursor?: compliance_statusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` compliance_statuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` compliance_statuses.
     */
    skip?: number
    distinct?: Compliance_statusScalarFieldEnum | Compliance_statusScalarFieldEnum[]
  }

  /**
   * compliance_status create
   */
  export type compliance_statusCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compliance_status
     */
    select?: compliance_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compliance_status
     */
    omit?: compliance_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compliance_statusInclude<ExtArgs> | null
    /**
     * The data needed to create a compliance_status.
     */
    data: XOR<compliance_statusCreateInput, compliance_statusUncheckedCreateInput>
  }

  /**
   * compliance_status createMany
   */
  export type compliance_statusCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many compliance_statuses.
     */
    data: compliance_statusCreateManyInput | compliance_statusCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * compliance_status createManyAndReturn
   */
  export type compliance_statusCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compliance_status
     */
    select?: compliance_statusSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the compliance_status
     */
    omit?: compliance_statusOmit<ExtArgs> | null
    /**
     * The data used to create many compliance_statuses.
     */
    data: compliance_statusCreateManyInput | compliance_statusCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compliance_statusIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * compliance_status update
   */
  export type compliance_statusUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compliance_status
     */
    select?: compliance_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compliance_status
     */
    omit?: compliance_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compliance_statusInclude<ExtArgs> | null
    /**
     * The data needed to update a compliance_status.
     */
    data: XOR<compliance_statusUpdateInput, compliance_statusUncheckedUpdateInput>
    /**
     * Choose, which compliance_status to update.
     */
    where: compliance_statusWhereUniqueInput
  }

  /**
   * compliance_status updateMany
   */
  export type compliance_statusUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update compliance_statuses.
     */
    data: XOR<compliance_statusUpdateManyMutationInput, compliance_statusUncheckedUpdateManyInput>
    /**
     * Filter which compliance_statuses to update
     */
    where?: compliance_statusWhereInput
    /**
     * Limit how many compliance_statuses to update.
     */
    limit?: number
  }

  /**
   * compliance_status updateManyAndReturn
   */
  export type compliance_statusUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compliance_status
     */
    select?: compliance_statusSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the compliance_status
     */
    omit?: compliance_statusOmit<ExtArgs> | null
    /**
     * The data used to update compliance_statuses.
     */
    data: XOR<compliance_statusUpdateManyMutationInput, compliance_statusUncheckedUpdateManyInput>
    /**
     * Filter which compliance_statuses to update
     */
    where?: compliance_statusWhereInput
    /**
     * Limit how many compliance_statuses to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compliance_statusIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * compliance_status upsert
   */
  export type compliance_statusUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compliance_status
     */
    select?: compliance_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compliance_status
     */
    omit?: compliance_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compliance_statusInclude<ExtArgs> | null
    /**
     * The filter to search for the compliance_status to update in case it exists.
     */
    where: compliance_statusWhereUniqueInput
    /**
     * In case the compliance_status found by the `where` argument doesn't exist, create a new compliance_status with this data.
     */
    create: XOR<compliance_statusCreateInput, compliance_statusUncheckedCreateInput>
    /**
     * In case the compliance_status was found with the provided `where` argument, update it with this data.
     */
    update: XOR<compliance_statusUpdateInput, compliance_statusUncheckedUpdateInput>
  }

  /**
   * compliance_status delete
   */
  export type compliance_statusDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compliance_status
     */
    select?: compliance_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compliance_status
     */
    omit?: compliance_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compliance_statusInclude<ExtArgs> | null
    /**
     * Filter which compliance_status to delete.
     */
    where: compliance_statusWhereUniqueInput
  }

  /**
   * compliance_status deleteMany
   */
  export type compliance_statusDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which compliance_statuses to delete
     */
    where?: compliance_statusWhereInput
    /**
     * Limit how many compliance_statuses to delete.
     */
    limit?: number
  }

  /**
   * compliance_status without action
   */
  export type compliance_statusDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compliance_status
     */
    select?: compliance_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compliance_status
     */
    omit?: compliance_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compliance_statusInclude<ExtArgs> | null
  }


  /**
   * Model employees
   */

  export type AggregateEmployees = {
    _count: EmployeesCountAggregateOutputType | null
    _avg: EmployeesAvgAggregateOutputType | null
    _sum: EmployeesSumAggregateOutputType | null
    _min: EmployeesMinAggregateOutputType | null
    _max: EmployeesMaxAggregateOutputType | null
  }

  export type EmployeesAvgAggregateOutputType = {
    empid: number | null
    experience_years: number | null
    experience_months: number | null
  }

  export type EmployeesSumAggregateOutputType = {
    empid: number | null
    experience_years: number | null
    experience_months: number | null
  }

  export type EmployeesMinAggregateOutputType = {
    empid: number | null
    candidate_id: string | null
    name: string | null
    email: string | null
    contact_no: string | null
    password: string | null
    gender: string | null
    dob: Date | null
    aadhar_card: string | null
    pan_card: string | null
    education_certificates: string | null
    resume: string | null
    experience_certificate: string | null
    profile_photo: string | null
    created_at: Date | null
    experience_years: number | null
    experience_months: number | null
    employee_type: $Enums.employees_employee_type | null
    aadhar_number: string | null
    pan_number: string | null
  }

  export type EmployeesMaxAggregateOutputType = {
    empid: number | null
    candidate_id: string | null
    name: string | null
    email: string | null
    contact_no: string | null
    password: string | null
    gender: string | null
    dob: Date | null
    aadhar_card: string | null
    pan_card: string | null
    education_certificates: string | null
    resume: string | null
    experience_certificate: string | null
    profile_photo: string | null
    created_at: Date | null
    experience_years: number | null
    experience_months: number | null
    employee_type: $Enums.employees_employee_type | null
    aadhar_number: string | null
    pan_number: string | null
  }

  export type EmployeesCountAggregateOutputType = {
    empid: number
    candidate_id: number
    name: number
    email: number
    contact_no: number
    password: number
    gender: number
    dob: number
    aadhar_card: number
    pan_card: number
    education_certificates: number
    resume: number
    experience_certificate: number
    profile_photo: number
    created_at: number
    experience_years: number
    experience_months: number
    employee_type: number
    aadhar_number: number
    pan_number: number
    _all: number
  }


  export type EmployeesAvgAggregateInputType = {
    empid?: true
    experience_years?: true
    experience_months?: true
  }

  export type EmployeesSumAggregateInputType = {
    empid?: true
    experience_years?: true
    experience_months?: true
  }

  export type EmployeesMinAggregateInputType = {
    empid?: true
    candidate_id?: true
    name?: true
    email?: true
    contact_no?: true
    password?: true
    gender?: true
    dob?: true
    aadhar_card?: true
    pan_card?: true
    education_certificates?: true
    resume?: true
    experience_certificate?: true
    profile_photo?: true
    created_at?: true
    experience_years?: true
    experience_months?: true
    employee_type?: true
    aadhar_number?: true
    pan_number?: true
  }

  export type EmployeesMaxAggregateInputType = {
    empid?: true
    candidate_id?: true
    name?: true
    email?: true
    contact_no?: true
    password?: true
    gender?: true
    dob?: true
    aadhar_card?: true
    pan_card?: true
    education_certificates?: true
    resume?: true
    experience_certificate?: true
    profile_photo?: true
    created_at?: true
    experience_years?: true
    experience_months?: true
    employee_type?: true
    aadhar_number?: true
    pan_number?: true
  }

  export type EmployeesCountAggregateInputType = {
    empid?: true
    candidate_id?: true
    name?: true
    email?: true
    contact_no?: true
    password?: true
    gender?: true
    dob?: true
    aadhar_card?: true
    pan_card?: true
    education_certificates?: true
    resume?: true
    experience_certificate?: true
    profile_photo?: true
    created_at?: true
    experience_years?: true
    experience_months?: true
    employee_type?: true
    aadhar_number?: true
    pan_number?: true
    _all?: true
  }

  export type EmployeesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which employees to aggregate.
     */
    where?: employeesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of employees to fetch.
     */
    orderBy?: employeesOrderByWithRelationInput | employeesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: employeesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` employees from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` employees.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned employees
    **/
    _count?: true | EmployeesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EmployeesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EmployeesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EmployeesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EmployeesMaxAggregateInputType
  }

  export type GetEmployeesAggregateType<T extends EmployeesAggregateArgs> = {
        [P in keyof T & keyof AggregateEmployees]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEmployees[P]>
      : GetScalarType<T[P], AggregateEmployees[P]>
  }




  export type employeesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: employeesWhereInput
    orderBy?: employeesOrderByWithAggregationInput | employeesOrderByWithAggregationInput[]
    by: EmployeesScalarFieldEnum[] | EmployeesScalarFieldEnum
    having?: employeesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EmployeesCountAggregateInputType | true
    _avg?: EmployeesAvgAggregateInputType
    _sum?: EmployeesSumAggregateInputType
    _min?: EmployeesMinAggregateInputType
    _max?: EmployeesMaxAggregateInputType
  }

  export type EmployeesGroupByOutputType = {
    empid: number
    candidate_id: string | null
    name: string | null
    email: string | null
    contact_no: string | null
    password: string | null
    gender: string | null
    dob: Date | null
    aadhar_card: string | null
    pan_card: string | null
    education_certificates: string | null
    resume: string | null
    experience_certificate: string | null
    profile_photo: string | null
    created_at: Date | null
    experience_years: number | null
    experience_months: number | null
    employee_type: $Enums.employees_employee_type | null
    aadhar_number: string | null
    pan_number: string | null
    _count: EmployeesCountAggregateOutputType | null
    _avg: EmployeesAvgAggregateOutputType | null
    _sum: EmployeesSumAggregateOutputType | null
    _min: EmployeesMinAggregateOutputType | null
    _max: EmployeesMaxAggregateOutputType | null
  }

  type GetEmployeesGroupByPayload<T extends employeesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EmployeesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EmployeesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EmployeesGroupByOutputType[P]>
            : GetScalarType<T[P], EmployeesGroupByOutputType[P]>
        }
      >
    >


  export type employeesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    empid?: boolean
    candidate_id?: boolean
    name?: boolean
    email?: boolean
    contact_no?: boolean
    password?: boolean
    gender?: boolean
    dob?: boolean
    aadhar_card?: boolean
    pan_card?: boolean
    education_certificates?: boolean
    resume?: boolean
    experience_certificate?: boolean
    profile_photo?: boolean
    created_at?: boolean
    experience_years?: boolean
    experience_months?: boolean
    employee_type?: boolean
    aadhar_number?: boolean
    pan_number?: boolean
    addresses?: boolean | employees$addressesArgs<ExtArgs>
    audit_logs_audit_logs_empidToemployees?: boolean | employees$audit_logs_audit_logs_empidToemployeesArgs<ExtArgs>
    audit_logs_audit_logs_performed_byToemployees?: boolean | employees$audit_logs_audit_logs_performed_byToemployeesArgs<ExtArgs>
    bank_details?: boolean | employees$bank_detailsArgs<ExtArgs>
    compliance_documents?: boolean | employees$compliance_documentsArgs<ExtArgs>
    compliance_status?: boolean | employees$compliance_statusArgs<ExtArgs>
    users?: boolean | employees$usersArgs<ExtArgs>
    _count?: boolean | EmployeesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["employees"]>

  export type employeesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    empid?: boolean
    candidate_id?: boolean
    name?: boolean
    email?: boolean
    contact_no?: boolean
    password?: boolean
    gender?: boolean
    dob?: boolean
    aadhar_card?: boolean
    pan_card?: boolean
    education_certificates?: boolean
    resume?: boolean
    experience_certificate?: boolean
    profile_photo?: boolean
    created_at?: boolean
    experience_years?: boolean
    experience_months?: boolean
    employee_type?: boolean
    aadhar_number?: boolean
    pan_number?: boolean
    users?: boolean | employees$usersArgs<ExtArgs>
  }, ExtArgs["result"]["employees"]>

  export type employeesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    empid?: boolean
    candidate_id?: boolean
    name?: boolean
    email?: boolean
    contact_no?: boolean
    password?: boolean
    gender?: boolean
    dob?: boolean
    aadhar_card?: boolean
    pan_card?: boolean
    education_certificates?: boolean
    resume?: boolean
    experience_certificate?: boolean
    profile_photo?: boolean
    created_at?: boolean
    experience_years?: boolean
    experience_months?: boolean
    employee_type?: boolean
    aadhar_number?: boolean
    pan_number?: boolean
    users?: boolean | employees$usersArgs<ExtArgs>
  }, ExtArgs["result"]["employees"]>

  export type employeesSelectScalar = {
    empid?: boolean
    candidate_id?: boolean
    name?: boolean
    email?: boolean
    contact_no?: boolean
    password?: boolean
    gender?: boolean
    dob?: boolean
    aadhar_card?: boolean
    pan_card?: boolean
    education_certificates?: boolean
    resume?: boolean
    experience_certificate?: boolean
    profile_photo?: boolean
    created_at?: boolean
    experience_years?: boolean
    experience_months?: boolean
    employee_type?: boolean
    aadhar_number?: boolean
    pan_number?: boolean
  }

  export type employeesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"empid" | "candidate_id" | "name" | "email" | "contact_no" | "password" | "gender" | "dob" | "aadhar_card" | "pan_card" | "education_certificates" | "resume" | "experience_certificate" | "profile_photo" | "created_at" | "experience_years" | "experience_months" | "employee_type" | "aadhar_number" | "pan_number", ExtArgs["result"]["employees"]>
  export type employeesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    addresses?: boolean | employees$addressesArgs<ExtArgs>
    audit_logs_audit_logs_empidToemployees?: boolean | employees$audit_logs_audit_logs_empidToemployeesArgs<ExtArgs>
    audit_logs_audit_logs_performed_byToemployees?: boolean | employees$audit_logs_audit_logs_performed_byToemployeesArgs<ExtArgs>
    bank_details?: boolean | employees$bank_detailsArgs<ExtArgs>
    compliance_documents?: boolean | employees$compliance_documentsArgs<ExtArgs>
    compliance_status?: boolean | employees$compliance_statusArgs<ExtArgs>
    users?: boolean | employees$usersArgs<ExtArgs>
    _count?: boolean | EmployeesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type employeesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | employees$usersArgs<ExtArgs>
  }
  export type employeesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | employees$usersArgs<ExtArgs>
  }

  export type $employeesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "employees"
    objects: {
      addresses: Prisma.$addressesPayload<ExtArgs>[]
      audit_logs_audit_logs_empidToemployees: Prisma.$audit_logsPayload<ExtArgs>[]
      audit_logs_audit_logs_performed_byToemployees: Prisma.$audit_logsPayload<ExtArgs>[]
      bank_details: Prisma.$bank_detailsPayload<ExtArgs>[]
      compliance_documents: Prisma.$compliance_documentsPayload<ExtArgs>[]
      compliance_status: Prisma.$compliance_statusPayload<ExtArgs> | null
      users: Prisma.$usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      empid: number
      candidate_id: string | null
      name: string | null
      email: string | null
      contact_no: string | null
      password: string | null
      gender: string | null
      dob: Date | null
      aadhar_card: string | null
      pan_card: string | null
      education_certificates: string | null
      resume: string | null
      experience_certificate: string | null
      profile_photo: string | null
      created_at: Date | null
      experience_years: number | null
      experience_months: number | null
      employee_type: $Enums.employees_employee_type | null
      aadhar_number: string | null
      pan_number: string | null
    }, ExtArgs["result"]["employees"]>
    composites: {}
  }

  type employeesGetPayload<S extends boolean | null | undefined | employeesDefaultArgs> = $Result.GetResult<Prisma.$employeesPayload, S>

  type employeesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<employeesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EmployeesCountAggregateInputType | true
    }

  export interface employeesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['employees'], meta: { name: 'employees' } }
    /**
     * Find zero or one Employees that matches the filter.
     * @param {employeesFindUniqueArgs} args - Arguments to find a Employees
     * @example
     * // Get one Employees
     * const employees = await prisma.employees.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends employeesFindUniqueArgs>(args: SelectSubset<T, employeesFindUniqueArgs<ExtArgs>>): Prisma__employeesClient<$Result.GetResult<Prisma.$employeesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Employees that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {employeesFindUniqueOrThrowArgs} args - Arguments to find a Employees
     * @example
     * // Get one Employees
     * const employees = await prisma.employees.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends employeesFindUniqueOrThrowArgs>(args: SelectSubset<T, employeesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__employeesClient<$Result.GetResult<Prisma.$employeesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Employees that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {employeesFindFirstArgs} args - Arguments to find a Employees
     * @example
     * // Get one Employees
     * const employees = await prisma.employees.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends employeesFindFirstArgs>(args?: SelectSubset<T, employeesFindFirstArgs<ExtArgs>>): Prisma__employeesClient<$Result.GetResult<Prisma.$employeesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Employees that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {employeesFindFirstOrThrowArgs} args - Arguments to find a Employees
     * @example
     * // Get one Employees
     * const employees = await prisma.employees.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends employeesFindFirstOrThrowArgs>(args?: SelectSubset<T, employeesFindFirstOrThrowArgs<ExtArgs>>): Prisma__employeesClient<$Result.GetResult<Prisma.$employeesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Employees that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {employeesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Employees
     * const employees = await prisma.employees.findMany()
     * 
     * // Get first 10 Employees
     * const employees = await prisma.employees.findMany({ take: 10 })
     * 
     * // Only select the `empid`
     * const employeesWithEmpidOnly = await prisma.employees.findMany({ select: { empid: true } })
     * 
     */
    findMany<T extends employeesFindManyArgs>(args?: SelectSubset<T, employeesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$employeesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Employees.
     * @param {employeesCreateArgs} args - Arguments to create a Employees.
     * @example
     * // Create one Employees
     * const Employees = await prisma.employees.create({
     *   data: {
     *     // ... data to create a Employees
     *   }
     * })
     * 
     */
    create<T extends employeesCreateArgs>(args: SelectSubset<T, employeesCreateArgs<ExtArgs>>): Prisma__employeesClient<$Result.GetResult<Prisma.$employeesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Employees.
     * @param {employeesCreateManyArgs} args - Arguments to create many Employees.
     * @example
     * // Create many Employees
     * const employees = await prisma.employees.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends employeesCreateManyArgs>(args?: SelectSubset<T, employeesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Employees and returns the data saved in the database.
     * @param {employeesCreateManyAndReturnArgs} args - Arguments to create many Employees.
     * @example
     * // Create many Employees
     * const employees = await prisma.employees.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Employees and only return the `empid`
     * const employeesWithEmpidOnly = await prisma.employees.createManyAndReturn({
     *   select: { empid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends employeesCreateManyAndReturnArgs>(args?: SelectSubset<T, employeesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$employeesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Employees.
     * @param {employeesDeleteArgs} args - Arguments to delete one Employees.
     * @example
     * // Delete one Employees
     * const Employees = await prisma.employees.delete({
     *   where: {
     *     // ... filter to delete one Employees
     *   }
     * })
     * 
     */
    delete<T extends employeesDeleteArgs>(args: SelectSubset<T, employeesDeleteArgs<ExtArgs>>): Prisma__employeesClient<$Result.GetResult<Prisma.$employeesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Employees.
     * @param {employeesUpdateArgs} args - Arguments to update one Employees.
     * @example
     * // Update one Employees
     * const employees = await prisma.employees.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends employeesUpdateArgs>(args: SelectSubset<T, employeesUpdateArgs<ExtArgs>>): Prisma__employeesClient<$Result.GetResult<Prisma.$employeesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Employees.
     * @param {employeesDeleteManyArgs} args - Arguments to filter Employees to delete.
     * @example
     * // Delete a few Employees
     * const { count } = await prisma.employees.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends employeesDeleteManyArgs>(args?: SelectSubset<T, employeesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Employees.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {employeesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Employees
     * const employees = await prisma.employees.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends employeesUpdateManyArgs>(args: SelectSubset<T, employeesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Employees and returns the data updated in the database.
     * @param {employeesUpdateManyAndReturnArgs} args - Arguments to update many Employees.
     * @example
     * // Update many Employees
     * const employees = await prisma.employees.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Employees and only return the `empid`
     * const employeesWithEmpidOnly = await prisma.employees.updateManyAndReturn({
     *   select: { empid: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends employeesUpdateManyAndReturnArgs>(args: SelectSubset<T, employeesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$employeesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Employees.
     * @param {employeesUpsertArgs} args - Arguments to update or create a Employees.
     * @example
     * // Update or create a Employees
     * const employees = await prisma.employees.upsert({
     *   create: {
     *     // ... data to create a Employees
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Employees we want to update
     *   }
     * })
     */
    upsert<T extends employeesUpsertArgs>(args: SelectSubset<T, employeesUpsertArgs<ExtArgs>>): Prisma__employeesClient<$Result.GetResult<Prisma.$employeesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Employees.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {employeesCountArgs} args - Arguments to filter Employees to count.
     * @example
     * // Count the number of Employees
     * const count = await prisma.employees.count({
     *   where: {
     *     // ... the filter for the Employees we want to count
     *   }
     * })
    **/
    count<T extends employeesCountArgs>(
      args?: Subset<T, employeesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EmployeesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Employees.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmployeesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EmployeesAggregateArgs>(args: Subset<T, EmployeesAggregateArgs>): Prisma.PrismaPromise<GetEmployeesAggregateType<T>>

    /**
     * Group by Employees.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {employeesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends employeesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: employeesGroupByArgs['orderBy'] }
        : { orderBy?: employeesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, employeesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEmployeesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the employees model
   */
  readonly fields: employeesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for employees.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__employeesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    addresses<T extends employees$addressesArgs<ExtArgs> = {}>(args?: Subset<T, employees$addressesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    audit_logs_audit_logs_empidToemployees<T extends employees$audit_logs_audit_logs_empidToemployeesArgs<ExtArgs> = {}>(args?: Subset<T, employees$audit_logs_audit_logs_empidToemployeesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$audit_logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    audit_logs_audit_logs_performed_byToemployees<T extends employees$audit_logs_audit_logs_performed_byToemployeesArgs<ExtArgs> = {}>(args?: Subset<T, employees$audit_logs_audit_logs_performed_byToemployeesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$audit_logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    bank_details<T extends employees$bank_detailsArgs<ExtArgs> = {}>(args?: Subset<T, employees$bank_detailsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$bank_detailsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    compliance_documents<T extends employees$compliance_documentsArgs<ExtArgs> = {}>(args?: Subset<T, employees$compliance_documentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$compliance_documentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    compliance_status<T extends employees$compliance_statusArgs<ExtArgs> = {}>(args?: Subset<T, employees$compliance_statusArgs<ExtArgs>>): Prisma__compliance_statusClient<$Result.GetResult<Prisma.$compliance_statusPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    users<T extends employees$usersArgs<ExtArgs> = {}>(args?: Subset<T, employees$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the employees model
   */
  interface employeesFieldRefs {
    readonly empid: FieldRef<"employees", 'Int'>
    readonly candidate_id: FieldRef<"employees", 'String'>
    readonly name: FieldRef<"employees", 'String'>
    readonly email: FieldRef<"employees", 'String'>
    readonly contact_no: FieldRef<"employees", 'String'>
    readonly password: FieldRef<"employees", 'String'>
    readonly gender: FieldRef<"employees", 'String'>
    readonly dob: FieldRef<"employees", 'DateTime'>
    readonly aadhar_card: FieldRef<"employees", 'String'>
    readonly pan_card: FieldRef<"employees", 'String'>
    readonly education_certificates: FieldRef<"employees", 'String'>
    readonly resume: FieldRef<"employees", 'String'>
    readonly experience_certificate: FieldRef<"employees", 'String'>
    readonly profile_photo: FieldRef<"employees", 'String'>
    readonly created_at: FieldRef<"employees", 'DateTime'>
    readonly experience_years: FieldRef<"employees", 'Int'>
    readonly experience_months: FieldRef<"employees", 'Int'>
    readonly employee_type: FieldRef<"employees", 'employees_employee_type'>
    readonly aadhar_number: FieldRef<"employees", 'String'>
    readonly pan_number: FieldRef<"employees", 'String'>
  }
    

  // Custom InputTypes
  /**
   * employees findUnique
   */
  export type employeesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employees
     */
    select?: employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employees
     */
    omit?: employeesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeesInclude<ExtArgs> | null
    /**
     * Filter, which employees to fetch.
     */
    where: employeesWhereUniqueInput
  }

  /**
   * employees findUniqueOrThrow
   */
  export type employeesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employees
     */
    select?: employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employees
     */
    omit?: employeesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeesInclude<ExtArgs> | null
    /**
     * Filter, which employees to fetch.
     */
    where: employeesWhereUniqueInput
  }

  /**
   * employees findFirst
   */
  export type employeesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employees
     */
    select?: employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employees
     */
    omit?: employeesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeesInclude<ExtArgs> | null
    /**
     * Filter, which employees to fetch.
     */
    where?: employeesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of employees to fetch.
     */
    orderBy?: employeesOrderByWithRelationInput | employeesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for employees.
     */
    cursor?: employeesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` employees from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` employees.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of employees.
     */
    distinct?: EmployeesScalarFieldEnum | EmployeesScalarFieldEnum[]
  }

  /**
   * employees findFirstOrThrow
   */
  export type employeesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employees
     */
    select?: employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employees
     */
    omit?: employeesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeesInclude<ExtArgs> | null
    /**
     * Filter, which employees to fetch.
     */
    where?: employeesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of employees to fetch.
     */
    orderBy?: employeesOrderByWithRelationInput | employeesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for employees.
     */
    cursor?: employeesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` employees from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` employees.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of employees.
     */
    distinct?: EmployeesScalarFieldEnum | EmployeesScalarFieldEnum[]
  }

  /**
   * employees findMany
   */
  export type employeesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employees
     */
    select?: employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employees
     */
    omit?: employeesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeesInclude<ExtArgs> | null
    /**
     * Filter, which employees to fetch.
     */
    where?: employeesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of employees to fetch.
     */
    orderBy?: employeesOrderByWithRelationInput | employeesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing employees.
     */
    cursor?: employeesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` employees from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` employees.
     */
    skip?: number
    distinct?: EmployeesScalarFieldEnum | EmployeesScalarFieldEnum[]
  }

  /**
   * employees create
   */
  export type employeesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employees
     */
    select?: employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employees
     */
    omit?: employeesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeesInclude<ExtArgs> | null
    /**
     * The data needed to create a employees.
     */
    data?: XOR<employeesCreateInput, employeesUncheckedCreateInput>
  }

  /**
   * employees createMany
   */
  export type employeesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many employees.
     */
    data: employeesCreateManyInput | employeesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * employees createManyAndReturn
   */
  export type employeesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employees
     */
    select?: employeesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the employees
     */
    omit?: employeesOmit<ExtArgs> | null
    /**
     * The data used to create many employees.
     */
    data: employeesCreateManyInput | employeesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * employees update
   */
  export type employeesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employees
     */
    select?: employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employees
     */
    omit?: employeesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeesInclude<ExtArgs> | null
    /**
     * The data needed to update a employees.
     */
    data: XOR<employeesUpdateInput, employeesUncheckedUpdateInput>
    /**
     * Choose, which employees to update.
     */
    where: employeesWhereUniqueInput
  }

  /**
   * employees updateMany
   */
  export type employeesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update employees.
     */
    data: XOR<employeesUpdateManyMutationInput, employeesUncheckedUpdateManyInput>
    /**
     * Filter which employees to update
     */
    where?: employeesWhereInput
    /**
     * Limit how many employees to update.
     */
    limit?: number
  }

  /**
   * employees updateManyAndReturn
   */
  export type employeesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employees
     */
    select?: employeesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the employees
     */
    omit?: employeesOmit<ExtArgs> | null
    /**
     * The data used to update employees.
     */
    data: XOR<employeesUpdateManyMutationInput, employeesUncheckedUpdateManyInput>
    /**
     * Filter which employees to update
     */
    where?: employeesWhereInput
    /**
     * Limit how many employees to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * employees upsert
   */
  export type employeesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employees
     */
    select?: employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employees
     */
    omit?: employeesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeesInclude<ExtArgs> | null
    /**
     * The filter to search for the employees to update in case it exists.
     */
    where: employeesWhereUniqueInput
    /**
     * In case the employees found by the `where` argument doesn't exist, create a new employees with this data.
     */
    create: XOR<employeesCreateInput, employeesUncheckedCreateInput>
    /**
     * In case the employees was found with the provided `where` argument, update it with this data.
     */
    update: XOR<employeesUpdateInput, employeesUncheckedUpdateInput>
  }

  /**
   * employees delete
   */
  export type employeesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employees
     */
    select?: employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employees
     */
    omit?: employeesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeesInclude<ExtArgs> | null
    /**
     * Filter which employees to delete.
     */
    where: employeesWhereUniqueInput
  }

  /**
   * employees deleteMany
   */
  export type employeesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which employees to delete
     */
    where?: employeesWhereInput
    /**
     * Limit how many employees to delete.
     */
    limit?: number
  }

  /**
   * employees.addresses
   */
  export type employees$addressesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    where?: addressesWhereInput
    orderBy?: addressesOrderByWithRelationInput | addressesOrderByWithRelationInput[]
    cursor?: addressesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AddressesScalarFieldEnum | AddressesScalarFieldEnum[]
  }

  /**
   * employees.audit_logs_audit_logs_empidToemployees
   */
  export type employees$audit_logs_audit_logs_empidToemployeesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_logs
     */
    select?: audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_logs
     */
    omit?: audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: audit_logsInclude<ExtArgs> | null
    where?: audit_logsWhereInput
    orderBy?: audit_logsOrderByWithRelationInput | audit_logsOrderByWithRelationInput[]
    cursor?: audit_logsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Audit_logsScalarFieldEnum | Audit_logsScalarFieldEnum[]
  }

  /**
   * employees.audit_logs_audit_logs_performed_byToemployees
   */
  export type employees$audit_logs_audit_logs_performed_byToemployeesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_logs
     */
    select?: audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_logs
     */
    omit?: audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: audit_logsInclude<ExtArgs> | null
    where?: audit_logsWhereInput
    orderBy?: audit_logsOrderByWithRelationInput | audit_logsOrderByWithRelationInput[]
    cursor?: audit_logsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Audit_logsScalarFieldEnum | Audit_logsScalarFieldEnum[]
  }

  /**
   * employees.bank_details
   */
  export type employees$bank_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bank_details
     */
    select?: bank_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bank_details
     */
    omit?: bank_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bank_detailsInclude<ExtArgs> | null
    where?: bank_detailsWhereInput
    orderBy?: bank_detailsOrderByWithRelationInput | bank_detailsOrderByWithRelationInput[]
    cursor?: bank_detailsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Bank_detailsScalarFieldEnum | Bank_detailsScalarFieldEnum[]
  }

  /**
   * employees.compliance_documents
   */
  export type employees$compliance_documentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compliance_documents
     */
    select?: compliance_documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compliance_documents
     */
    omit?: compliance_documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compliance_documentsInclude<ExtArgs> | null
    where?: compliance_documentsWhereInput
    orderBy?: compliance_documentsOrderByWithRelationInput | compliance_documentsOrderByWithRelationInput[]
    cursor?: compliance_documentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Compliance_documentsScalarFieldEnum | Compliance_documentsScalarFieldEnum[]
  }

  /**
   * employees.compliance_status
   */
  export type employees$compliance_statusArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compliance_status
     */
    select?: compliance_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compliance_status
     */
    omit?: compliance_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compliance_statusInclude<ExtArgs> | null
    where?: compliance_statusWhereInput
  }

  /**
   * employees.users
   */
  export type employees$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * employees without action
   */
  export type employeesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employees
     */
    select?: employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employees
     */
    omit?: employeesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeesInclude<ExtArgs> | null
  }


  /**
   * Model main_employee
   */

  export type AggregateMain_employee = {
    _count: Main_employeeCountAggregateOutputType | null
    _avg: Main_employeeAvgAggregateOutputType | null
    _sum: Main_employeeSumAggregateOutputType | null
    _min: Main_employeeMinAggregateOutputType | null
    _max: Main_employeeMaxAggregateOutputType | null
  }

  export type Main_employeeAvgAggregateOutputType = {
    candidate_id: number | null
  }

  export type Main_employeeSumAggregateOutputType = {
    candidate_id: number | null
  }

  export type Main_employeeMinAggregateOutputType = {
    empid: string | null
    candidate_id: number | null
    email: string | null
    password: string | null
    role: string | null
    name: string | null
    contact: string | null
    position: string | null
    doj: Date | null
    gender: string | null
    dob: Date | null
    address: string | null
    employee_type: string | null
    experience: string | null
    profile_photo: string | null
    aadhar_card: string | null
    pan_card: string | null
    education_certificates: string | null
    resume: string | null
    experience_certificate: string | null
    bank_details: string | null
    status: string | null
    created_at: Date | null
  }

  export type Main_employeeMaxAggregateOutputType = {
    empid: string | null
    candidate_id: number | null
    email: string | null
    password: string | null
    role: string | null
    name: string | null
    contact: string | null
    position: string | null
    doj: Date | null
    gender: string | null
    dob: Date | null
    address: string | null
    employee_type: string | null
    experience: string | null
    profile_photo: string | null
    aadhar_card: string | null
    pan_card: string | null
    education_certificates: string | null
    resume: string | null
    experience_certificate: string | null
    bank_details: string | null
    status: string | null
    created_at: Date | null
  }

  export type Main_employeeCountAggregateOutputType = {
    empid: number
    candidate_id: number
    email: number
    password: number
    role: number
    name: number
    contact: number
    position: number
    doj: number
    gender: number
    dob: number
    address: number
    employee_type: number
    experience: number
    profile_photo: number
    aadhar_card: number
    pan_card: number
    education_certificates: number
    resume: number
    experience_certificate: number
    bank_details: number
    status: number
    created_at: number
    _all: number
  }


  export type Main_employeeAvgAggregateInputType = {
    candidate_id?: true
  }

  export type Main_employeeSumAggregateInputType = {
    candidate_id?: true
  }

  export type Main_employeeMinAggregateInputType = {
    empid?: true
    candidate_id?: true
    email?: true
    password?: true
    role?: true
    name?: true
    contact?: true
    position?: true
    doj?: true
    gender?: true
    dob?: true
    address?: true
    employee_type?: true
    experience?: true
    profile_photo?: true
    aadhar_card?: true
    pan_card?: true
    education_certificates?: true
    resume?: true
    experience_certificate?: true
    bank_details?: true
    status?: true
    created_at?: true
  }

  export type Main_employeeMaxAggregateInputType = {
    empid?: true
    candidate_id?: true
    email?: true
    password?: true
    role?: true
    name?: true
    contact?: true
    position?: true
    doj?: true
    gender?: true
    dob?: true
    address?: true
    employee_type?: true
    experience?: true
    profile_photo?: true
    aadhar_card?: true
    pan_card?: true
    education_certificates?: true
    resume?: true
    experience_certificate?: true
    bank_details?: true
    status?: true
    created_at?: true
  }

  export type Main_employeeCountAggregateInputType = {
    empid?: true
    candidate_id?: true
    email?: true
    password?: true
    role?: true
    name?: true
    contact?: true
    position?: true
    doj?: true
    gender?: true
    dob?: true
    address?: true
    employee_type?: true
    experience?: true
    profile_photo?: true
    aadhar_card?: true
    pan_card?: true
    education_certificates?: true
    resume?: true
    experience_certificate?: true
    bank_details?: true
    status?: true
    created_at?: true
    _all?: true
  }

  export type Main_employeeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which main_employee to aggregate.
     */
    where?: main_employeeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of main_employees to fetch.
     */
    orderBy?: main_employeeOrderByWithRelationInput | main_employeeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: main_employeeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` main_employees from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` main_employees.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned main_employees
    **/
    _count?: true | Main_employeeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Main_employeeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Main_employeeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Main_employeeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Main_employeeMaxAggregateInputType
  }

  export type GetMain_employeeAggregateType<T extends Main_employeeAggregateArgs> = {
        [P in keyof T & keyof AggregateMain_employee]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMain_employee[P]>
      : GetScalarType<T[P], AggregateMain_employee[P]>
  }




  export type main_employeeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: main_employeeWhereInput
    orderBy?: main_employeeOrderByWithAggregationInput | main_employeeOrderByWithAggregationInput[]
    by: Main_employeeScalarFieldEnum[] | Main_employeeScalarFieldEnum
    having?: main_employeeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Main_employeeCountAggregateInputType | true
    _avg?: Main_employeeAvgAggregateInputType
    _sum?: Main_employeeSumAggregateInputType
    _min?: Main_employeeMinAggregateInputType
    _max?: Main_employeeMaxAggregateInputType
  }

  export type Main_employeeGroupByOutputType = {
    empid: string
    candidate_id: number | null
    email: string
    password: string
    role: string | null
    name: string | null
    contact: string | null
    position: string | null
    doj: Date | null
    gender: string | null
    dob: Date | null
    address: string | null
    employee_type: string | null
    experience: string | null
    profile_photo: string | null
    aadhar_card: string | null
    pan_card: string | null
    education_certificates: string | null
    resume: string | null
    experience_certificate: string | null
    bank_details: string | null
    status: string | null
    created_at: Date | null
    _count: Main_employeeCountAggregateOutputType | null
    _avg: Main_employeeAvgAggregateOutputType | null
    _sum: Main_employeeSumAggregateOutputType | null
    _min: Main_employeeMinAggregateOutputType | null
    _max: Main_employeeMaxAggregateOutputType | null
  }

  type GetMain_employeeGroupByPayload<T extends main_employeeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Main_employeeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Main_employeeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Main_employeeGroupByOutputType[P]>
            : GetScalarType<T[P], Main_employeeGroupByOutputType[P]>
        }
      >
    >


  export type main_employeeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    empid?: boolean
    candidate_id?: boolean
    email?: boolean
    password?: boolean
    role?: boolean
    name?: boolean
    contact?: boolean
    position?: boolean
    doj?: boolean
    gender?: boolean
    dob?: boolean
    address?: boolean
    employee_type?: boolean
    experience?: boolean
    profile_photo?: boolean
    aadhar_card?: boolean
    pan_card?: boolean
    education_certificates?: boolean
    resume?: boolean
    experience_certificate?: boolean
    bank_details?: boolean
    status?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["main_employee"]>

  export type main_employeeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    empid?: boolean
    candidate_id?: boolean
    email?: boolean
    password?: boolean
    role?: boolean
    name?: boolean
    contact?: boolean
    position?: boolean
    doj?: boolean
    gender?: boolean
    dob?: boolean
    address?: boolean
    employee_type?: boolean
    experience?: boolean
    profile_photo?: boolean
    aadhar_card?: boolean
    pan_card?: boolean
    education_certificates?: boolean
    resume?: boolean
    experience_certificate?: boolean
    bank_details?: boolean
    status?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["main_employee"]>

  export type main_employeeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    empid?: boolean
    candidate_id?: boolean
    email?: boolean
    password?: boolean
    role?: boolean
    name?: boolean
    contact?: boolean
    position?: boolean
    doj?: boolean
    gender?: boolean
    dob?: boolean
    address?: boolean
    employee_type?: boolean
    experience?: boolean
    profile_photo?: boolean
    aadhar_card?: boolean
    pan_card?: boolean
    education_certificates?: boolean
    resume?: boolean
    experience_certificate?: boolean
    bank_details?: boolean
    status?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["main_employee"]>

  export type main_employeeSelectScalar = {
    empid?: boolean
    candidate_id?: boolean
    email?: boolean
    password?: boolean
    role?: boolean
    name?: boolean
    contact?: boolean
    position?: boolean
    doj?: boolean
    gender?: boolean
    dob?: boolean
    address?: boolean
    employee_type?: boolean
    experience?: boolean
    profile_photo?: boolean
    aadhar_card?: boolean
    pan_card?: boolean
    education_certificates?: boolean
    resume?: boolean
    experience_certificate?: boolean
    bank_details?: boolean
    status?: boolean
    created_at?: boolean
  }

  export type main_employeeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"empid" | "candidate_id" | "email" | "password" | "role" | "name" | "contact" | "position" | "doj" | "gender" | "dob" | "address" | "employee_type" | "experience" | "profile_photo" | "aadhar_card" | "pan_card" | "education_certificates" | "resume" | "experience_certificate" | "bank_details" | "status" | "created_at", ExtArgs["result"]["main_employee"]>

  export type $main_employeePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "main_employee"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      empid: string
      candidate_id: number | null
      email: string
      password: string
      role: string | null
      name: string | null
      contact: string | null
      position: string | null
      doj: Date | null
      gender: string | null
      dob: Date | null
      address: string | null
      employee_type: string | null
      experience: string | null
      profile_photo: string | null
      aadhar_card: string | null
      pan_card: string | null
      education_certificates: string | null
      resume: string | null
      experience_certificate: string | null
      bank_details: string | null
      status: string | null
      created_at: Date | null
    }, ExtArgs["result"]["main_employee"]>
    composites: {}
  }

  type main_employeeGetPayload<S extends boolean | null | undefined | main_employeeDefaultArgs> = $Result.GetResult<Prisma.$main_employeePayload, S>

  type main_employeeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<main_employeeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Main_employeeCountAggregateInputType | true
    }

  export interface main_employeeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['main_employee'], meta: { name: 'main_employee' } }
    /**
     * Find zero or one Main_employee that matches the filter.
     * @param {main_employeeFindUniqueArgs} args - Arguments to find a Main_employee
     * @example
     * // Get one Main_employee
     * const main_employee = await prisma.main_employee.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends main_employeeFindUniqueArgs>(args: SelectSubset<T, main_employeeFindUniqueArgs<ExtArgs>>): Prisma__main_employeeClient<$Result.GetResult<Prisma.$main_employeePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Main_employee that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {main_employeeFindUniqueOrThrowArgs} args - Arguments to find a Main_employee
     * @example
     * // Get one Main_employee
     * const main_employee = await prisma.main_employee.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends main_employeeFindUniqueOrThrowArgs>(args: SelectSubset<T, main_employeeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__main_employeeClient<$Result.GetResult<Prisma.$main_employeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Main_employee that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {main_employeeFindFirstArgs} args - Arguments to find a Main_employee
     * @example
     * // Get one Main_employee
     * const main_employee = await prisma.main_employee.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends main_employeeFindFirstArgs>(args?: SelectSubset<T, main_employeeFindFirstArgs<ExtArgs>>): Prisma__main_employeeClient<$Result.GetResult<Prisma.$main_employeePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Main_employee that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {main_employeeFindFirstOrThrowArgs} args - Arguments to find a Main_employee
     * @example
     * // Get one Main_employee
     * const main_employee = await prisma.main_employee.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends main_employeeFindFirstOrThrowArgs>(args?: SelectSubset<T, main_employeeFindFirstOrThrowArgs<ExtArgs>>): Prisma__main_employeeClient<$Result.GetResult<Prisma.$main_employeePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Main_employees that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {main_employeeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Main_employees
     * const main_employees = await prisma.main_employee.findMany()
     * 
     * // Get first 10 Main_employees
     * const main_employees = await prisma.main_employee.findMany({ take: 10 })
     * 
     * // Only select the `empid`
     * const main_employeeWithEmpidOnly = await prisma.main_employee.findMany({ select: { empid: true } })
     * 
     */
    findMany<T extends main_employeeFindManyArgs>(args?: SelectSubset<T, main_employeeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$main_employeePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Main_employee.
     * @param {main_employeeCreateArgs} args - Arguments to create a Main_employee.
     * @example
     * // Create one Main_employee
     * const Main_employee = await prisma.main_employee.create({
     *   data: {
     *     // ... data to create a Main_employee
     *   }
     * })
     * 
     */
    create<T extends main_employeeCreateArgs>(args: SelectSubset<T, main_employeeCreateArgs<ExtArgs>>): Prisma__main_employeeClient<$Result.GetResult<Prisma.$main_employeePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Main_employees.
     * @param {main_employeeCreateManyArgs} args - Arguments to create many Main_employees.
     * @example
     * // Create many Main_employees
     * const main_employee = await prisma.main_employee.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends main_employeeCreateManyArgs>(args?: SelectSubset<T, main_employeeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Main_employees and returns the data saved in the database.
     * @param {main_employeeCreateManyAndReturnArgs} args - Arguments to create many Main_employees.
     * @example
     * // Create many Main_employees
     * const main_employee = await prisma.main_employee.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Main_employees and only return the `empid`
     * const main_employeeWithEmpidOnly = await prisma.main_employee.createManyAndReturn({
     *   select: { empid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends main_employeeCreateManyAndReturnArgs>(args?: SelectSubset<T, main_employeeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$main_employeePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Main_employee.
     * @param {main_employeeDeleteArgs} args - Arguments to delete one Main_employee.
     * @example
     * // Delete one Main_employee
     * const Main_employee = await prisma.main_employee.delete({
     *   where: {
     *     // ... filter to delete one Main_employee
     *   }
     * })
     * 
     */
    delete<T extends main_employeeDeleteArgs>(args: SelectSubset<T, main_employeeDeleteArgs<ExtArgs>>): Prisma__main_employeeClient<$Result.GetResult<Prisma.$main_employeePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Main_employee.
     * @param {main_employeeUpdateArgs} args - Arguments to update one Main_employee.
     * @example
     * // Update one Main_employee
     * const main_employee = await prisma.main_employee.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends main_employeeUpdateArgs>(args: SelectSubset<T, main_employeeUpdateArgs<ExtArgs>>): Prisma__main_employeeClient<$Result.GetResult<Prisma.$main_employeePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Main_employees.
     * @param {main_employeeDeleteManyArgs} args - Arguments to filter Main_employees to delete.
     * @example
     * // Delete a few Main_employees
     * const { count } = await prisma.main_employee.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends main_employeeDeleteManyArgs>(args?: SelectSubset<T, main_employeeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Main_employees.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {main_employeeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Main_employees
     * const main_employee = await prisma.main_employee.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends main_employeeUpdateManyArgs>(args: SelectSubset<T, main_employeeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Main_employees and returns the data updated in the database.
     * @param {main_employeeUpdateManyAndReturnArgs} args - Arguments to update many Main_employees.
     * @example
     * // Update many Main_employees
     * const main_employee = await prisma.main_employee.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Main_employees and only return the `empid`
     * const main_employeeWithEmpidOnly = await prisma.main_employee.updateManyAndReturn({
     *   select: { empid: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends main_employeeUpdateManyAndReturnArgs>(args: SelectSubset<T, main_employeeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$main_employeePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Main_employee.
     * @param {main_employeeUpsertArgs} args - Arguments to update or create a Main_employee.
     * @example
     * // Update or create a Main_employee
     * const main_employee = await prisma.main_employee.upsert({
     *   create: {
     *     // ... data to create a Main_employee
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Main_employee we want to update
     *   }
     * })
     */
    upsert<T extends main_employeeUpsertArgs>(args: SelectSubset<T, main_employeeUpsertArgs<ExtArgs>>): Prisma__main_employeeClient<$Result.GetResult<Prisma.$main_employeePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Main_employees.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {main_employeeCountArgs} args - Arguments to filter Main_employees to count.
     * @example
     * // Count the number of Main_employees
     * const count = await prisma.main_employee.count({
     *   where: {
     *     // ... the filter for the Main_employees we want to count
     *   }
     * })
    **/
    count<T extends main_employeeCountArgs>(
      args?: Subset<T, main_employeeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Main_employeeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Main_employee.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Main_employeeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Main_employeeAggregateArgs>(args: Subset<T, Main_employeeAggregateArgs>): Prisma.PrismaPromise<GetMain_employeeAggregateType<T>>

    /**
     * Group by Main_employee.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {main_employeeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends main_employeeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: main_employeeGroupByArgs['orderBy'] }
        : { orderBy?: main_employeeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, main_employeeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMain_employeeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the main_employee model
   */
  readonly fields: main_employeeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for main_employee.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__main_employeeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the main_employee model
   */
  interface main_employeeFieldRefs {
    readonly empid: FieldRef<"main_employee", 'String'>
    readonly candidate_id: FieldRef<"main_employee", 'Int'>
    readonly email: FieldRef<"main_employee", 'String'>
    readonly password: FieldRef<"main_employee", 'String'>
    readonly role: FieldRef<"main_employee", 'String'>
    readonly name: FieldRef<"main_employee", 'String'>
    readonly contact: FieldRef<"main_employee", 'String'>
    readonly position: FieldRef<"main_employee", 'String'>
    readonly doj: FieldRef<"main_employee", 'DateTime'>
    readonly gender: FieldRef<"main_employee", 'String'>
    readonly dob: FieldRef<"main_employee", 'DateTime'>
    readonly address: FieldRef<"main_employee", 'String'>
    readonly employee_type: FieldRef<"main_employee", 'String'>
    readonly experience: FieldRef<"main_employee", 'String'>
    readonly profile_photo: FieldRef<"main_employee", 'String'>
    readonly aadhar_card: FieldRef<"main_employee", 'String'>
    readonly pan_card: FieldRef<"main_employee", 'String'>
    readonly education_certificates: FieldRef<"main_employee", 'String'>
    readonly resume: FieldRef<"main_employee", 'String'>
    readonly experience_certificate: FieldRef<"main_employee", 'String'>
    readonly bank_details: FieldRef<"main_employee", 'String'>
    readonly status: FieldRef<"main_employee", 'String'>
    readonly created_at: FieldRef<"main_employee", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * main_employee findUnique
   */
  export type main_employeeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the main_employee
     */
    select?: main_employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the main_employee
     */
    omit?: main_employeeOmit<ExtArgs> | null
    /**
     * Filter, which main_employee to fetch.
     */
    where: main_employeeWhereUniqueInput
  }

  /**
   * main_employee findUniqueOrThrow
   */
  export type main_employeeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the main_employee
     */
    select?: main_employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the main_employee
     */
    omit?: main_employeeOmit<ExtArgs> | null
    /**
     * Filter, which main_employee to fetch.
     */
    where: main_employeeWhereUniqueInput
  }

  /**
   * main_employee findFirst
   */
  export type main_employeeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the main_employee
     */
    select?: main_employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the main_employee
     */
    omit?: main_employeeOmit<ExtArgs> | null
    /**
     * Filter, which main_employee to fetch.
     */
    where?: main_employeeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of main_employees to fetch.
     */
    orderBy?: main_employeeOrderByWithRelationInput | main_employeeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for main_employees.
     */
    cursor?: main_employeeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` main_employees from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` main_employees.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of main_employees.
     */
    distinct?: Main_employeeScalarFieldEnum | Main_employeeScalarFieldEnum[]
  }

  /**
   * main_employee findFirstOrThrow
   */
  export type main_employeeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the main_employee
     */
    select?: main_employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the main_employee
     */
    omit?: main_employeeOmit<ExtArgs> | null
    /**
     * Filter, which main_employee to fetch.
     */
    where?: main_employeeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of main_employees to fetch.
     */
    orderBy?: main_employeeOrderByWithRelationInput | main_employeeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for main_employees.
     */
    cursor?: main_employeeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` main_employees from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` main_employees.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of main_employees.
     */
    distinct?: Main_employeeScalarFieldEnum | Main_employeeScalarFieldEnum[]
  }

  /**
   * main_employee findMany
   */
  export type main_employeeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the main_employee
     */
    select?: main_employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the main_employee
     */
    omit?: main_employeeOmit<ExtArgs> | null
    /**
     * Filter, which main_employees to fetch.
     */
    where?: main_employeeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of main_employees to fetch.
     */
    orderBy?: main_employeeOrderByWithRelationInput | main_employeeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing main_employees.
     */
    cursor?: main_employeeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` main_employees from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` main_employees.
     */
    skip?: number
    distinct?: Main_employeeScalarFieldEnum | Main_employeeScalarFieldEnum[]
  }

  /**
   * main_employee create
   */
  export type main_employeeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the main_employee
     */
    select?: main_employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the main_employee
     */
    omit?: main_employeeOmit<ExtArgs> | null
    /**
     * The data needed to create a main_employee.
     */
    data: XOR<main_employeeCreateInput, main_employeeUncheckedCreateInput>
  }

  /**
   * main_employee createMany
   */
  export type main_employeeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many main_employees.
     */
    data: main_employeeCreateManyInput | main_employeeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * main_employee createManyAndReturn
   */
  export type main_employeeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the main_employee
     */
    select?: main_employeeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the main_employee
     */
    omit?: main_employeeOmit<ExtArgs> | null
    /**
     * The data used to create many main_employees.
     */
    data: main_employeeCreateManyInput | main_employeeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * main_employee update
   */
  export type main_employeeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the main_employee
     */
    select?: main_employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the main_employee
     */
    omit?: main_employeeOmit<ExtArgs> | null
    /**
     * The data needed to update a main_employee.
     */
    data: XOR<main_employeeUpdateInput, main_employeeUncheckedUpdateInput>
    /**
     * Choose, which main_employee to update.
     */
    where: main_employeeWhereUniqueInput
  }

  /**
   * main_employee updateMany
   */
  export type main_employeeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update main_employees.
     */
    data: XOR<main_employeeUpdateManyMutationInput, main_employeeUncheckedUpdateManyInput>
    /**
     * Filter which main_employees to update
     */
    where?: main_employeeWhereInput
    /**
     * Limit how many main_employees to update.
     */
    limit?: number
  }

  /**
   * main_employee updateManyAndReturn
   */
  export type main_employeeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the main_employee
     */
    select?: main_employeeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the main_employee
     */
    omit?: main_employeeOmit<ExtArgs> | null
    /**
     * The data used to update main_employees.
     */
    data: XOR<main_employeeUpdateManyMutationInput, main_employeeUncheckedUpdateManyInput>
    /**
     * Filter which main_employees to update
     */
    where?: main_employeeWhereInput
    /**
     * Limit how many main_employees to update.
     */
    limit?: number
  }

  /**
   * main_employee upsert
   */
  export type main_employeeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the main_employee
     */
    select?: main_employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the main_employee
     */
    omit?: main_employeeOmit<ExtArgs> | null
    /**
     * The filter to search for the main_employee to update in case it exists.
     */
    where: main_employeeWhereUniqueInput
    /**
     * In case the main_employee found by the `where` argument doesn't exist, create a new main_employee with this data.
     */
    create: XOR<main_employeeCreateInput, main_employeeUncheckedCreateInput>
    /**
     * In case the main_employee was found with the provided `where` argument, update it with this data.
     */
    update: XOR<main_employeeUpdateInput, main_employeeUncheckedUpdateInput>
  }

  /**
   * main_employee delete
   */
  export type main_employeeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the main_employee
     */
    select?: main_employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the main_employee
     */
    omit?: main_employeeOmit<ExtArgs> | null
    /**
     * Filter which main_employee to delete.
     */
    where: main_employeeWhereUniqueInput
  }

  /**
   * main_employee deleteMany
   */
  export type main_employeeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which main_employees to delete
     */
    where?: main_employeeWhereInput
    /**
     * Limit how many main_employees to delete.
     */
    limit?: number
  }

  /**
   * main_employee without action
   */
  export type main_employeeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the main_employee
     */
    select?: main_employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the main_employee
     */
    omit?: main_employeeOmit<ExtArgs> | null
  }


  /**
   * Model leave_types
   */

  export type AggregateLeave_types = {
    _count: Leave_typesCountAggregateOutputType | null
    _avg: Leave_typesAvgAggregateOutputType | null
    _sum: Leave_typesSumAggregateOutputType | null
    _min: Leave_typesMinAggregateOutputType | null
    _max: Leave_typesMaxAggregateOutputType | null
  }

  export type Leave_typesAvgAggregateOutputType = {
    id: number | null
    max_days: number | null
  }

  export type Leave_typesSumAggregateOutputType = {
    id: number | null
    max_days: number | null
  }

  export type Leave_typesMinAggregateOutputType = {
    id: number | null
    type_name: $Enums.leave_types_type_name | null
    max_days: number | null
    paid: boolean | null
  }

  export type Leave_typesMaxAggregateOutputType = {
    id: number | null
    type_name: $Enums.leave_types_type_name | null
    max_days: number | null
    paid: boolean | null
  }

  export type Leave_typesCountAggregateOutputType = {
    id: number
    type_name: number
    max_days: number
    paid: number
    _all: number
  }


  export type Leave_typesAvgAggregateInputType = {
    id?: true
    max_days?: true
  }

  export type Leave_typesSumAggregateInputType = {
    id?: true
    max_days?: true
  }

  export type Leave_typesMinAggregateInputType = {
    id?: true
    type_name?: true
    max_days?: true
    paid?: true
  }

  export type Leave_typesMaxAggregateInputType = {
    id?: true
    type_name?: true
    max_days?: true
    paid?: true
  }

  export type Leave_typesCountAggregateInputType = {
    id?: true
    type_name?: true
    max_days?: true
    paid?: true
    _all?: true
  }

  export type Leave_typesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which leave_types to aggregate.
     */
    where?: leave_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of leave_types to fetch.
     */
    orderBy?: leave_typesOrderByWithRelationInput | leave_typesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: leave_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` leave_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` leave_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned leave_types
    **/
    _count?: true | Leave_typesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Leave_typesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Leave_typesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Leave_typesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Leave_typesMaxAggregateInputType
  }

  export type GetLeave_typesAggregateType<T extends Leave_typesAggregateArgs> = {
        [P in keyof T & keyof AggregateLeave_types]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLeave_types[P]>
      : GetScalarType<T[P], AggregateLeave_types[P]>
  }




  export type leave_typesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: leave_typesWhereInput
    orderBy?: leave_typesOrderByWithAggregationInput | leave_typesOrderByWithAggregationInput[]
    by: Leave_typesScalarFieldEnum[] | Leave_typesScalarFieldEnum
    having?: leave_typesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Leave_typesCountAggregateInputType | true
    _avg?: Leave_typesAvgAggregateInputType
    _sum?: Leave_typesSumAggregateInputType
    _min?: Leave_typesMinAggregateInputType
    _max?: Leave_typesMaxAggregateInputType
  }

  export type Leave_typesGroupByOutputType = {
    id: number
    type_name: $Enums.leave_types_type_name
    max_days: number
    paid: boolean | null
    _count: Leave_typesCountAggregateOutputType | null
    _avg: Leave_typesAvgAggregateOutputType | null
    _sum: Leave_typesSumAggregateOutputType | null
    _min: Leave_typesMinAggregateOutputType | null
    _max: Leave_typesMaxAggregateOutputType | null
  }

  type GetLeave_typesGroupByPayload<T extends leave_typesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Leave_typesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Leave_typesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Leave_typesGroupByOutputType[P]>
            : GetScalarType<T[P], Leave_typesGroupByOutputType[P]>
        }
      >
    >


  export type leave_typesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type_name?: boolean
    max_days?: boolean
    paid?: boolean
    leave_balances?: boolean | leave_types$leave_balancesArgs<ExtArgs>
    _count?: boolean | Leave_typesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["leave_types"]>

  export type leave_typesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type_name?: boolean
    max_days?: boolean
    paid?: boolean
  }, ExtArgs["result"]["leave_types"]>

  export type leave_typesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type_name?: boolean
    max_days?: boolean
    paid?: boolean
  }, ExtArgs["result"]["leave_types"]>

  export type leave_typesSelectScalar = {
    id?: boolean
    type_name?: boolean
    max_days?: boolean
    paid?: boolean
  }

  export type leave_typesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "type_name" | "max_days" | "paid", ExtArgs["result"]["leave_types"]>
  export type leave_typesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    leave_balances?: boolean | leave_types$leave_balancesArgs<ExtArgs>
    _count?: boolean | Leave_typesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type leave_typesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type leave_typesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $leave_typesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "leave_types"
    objects: {
      leave_balances: Prisma.$leave_balancesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      type_name: $Enums.leave_types_type_name
      max_days: number
      paid: boolean | null
    }, ExtArgs["result"]["leave_types"]>
    composites: {}
  }

  type leave_typesGetPayload<S extends boolean | null | undefined | leave_typesDefaultArgs> = $Result.GetResult<Prisma.$leave_typesPayload, S>

  type leave_typesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<leave_typesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Leave_typesCountAggregateInputType | true
    }

  export interface leave_typesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['leave_types'], meta: { name: 'leave_types' } }
    /**
     * Find zero or one Leave_types that matches the filter.
     * @param {leave_typesFindUniqueArgs} args - Arguments to find a Leave_types
     * @example
     * // Get one Leave_types
     * const leave_types = await prisma.leave_types.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends leave_typesFindUniqueArgs>(args: SelectSubset<T, leave_typesFindUniqueArgs<ExtArgs>>): Prisma__leave_typesClient<$Result.GetResult<Prisma.$leave_typesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Leave_types that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {leave_typesFindUniqueOrThrowArgs} args - Arguments to find a Leave_types
     * @example
     * // Get one Leave_types
     * const leave_types = await prisma.leave_types.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends leave_typesFindUniqueOrThrowArgs>(args: SelectSubset<T, leave_typesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__leave_typesClient<$Result.GetResult<Prisma.$leave_typesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Leave_types that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {leave_typesFindFirstArgs} args - Arguments to find a Leave_types
     * @example
     * // Get one Leave_types
     * const leave_types = await prisma.leave_types.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends leave_typesFindFirstArgs>(args?: SelectSubset<T, leave_typesFindFirstArgs<ExtArgs>>): Prisma__leave_typesClient<$Result.GetResult<Prisma.$leave_typesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Leave_types that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {leave_typesFindFirstOrThrowArgs} args - Arguments to find a Leave_types
     * @example
     * // Get one Leave_types
     * const leave_types = await prisma.leave_types.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends leave_typesFindFirstOrThrowArgs>(args?: SelectSubset<T, leave_typesFindFirstOrThrowArgs<ExtArgs>>): Prisma__leave_typesClient<$Result.GetResult<Prisma.$leave_typesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Leave_types that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {leave_typesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Leave_types
     * const leave_types = await prisma.leave_types.findMany()
     * 
     * // Get first 10 Leave_types
     * const leave_types = await prisma.leave_types.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const leave_typesWithIdOnly = await prisma.leave_types.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends leave_typesFindManyArgs>(args?: SelectSubset<T, leave_typesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$leave_typesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Leave_types.
     * @param {leave_typesCreateArgs} args - Arguments to create a Leave_types.
     * @example
     * // Create one Leave_types
     * const Leave_types = await prisma.leave_types.create({
     *   data: {
     *     // ... data to create a Leave_types
     *   }
     * })
     * 
     */
    create<T extends leave_typesCreateArgs>(args: SelectSubset<T, leave_typesCreateArgs<ExtArgs>>): Prisma__leave_typesClient<$Result.GetResult<Prisma.$leave_typesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Leave_types.
     * @param {leave_typesCreateManyArgs} args - Arguments to create many Leave_types.
     * @example
     * // Create many Leave_types
     * const leave_types = await prisma.leave_types.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends leave_typesCreateManyArgs>(args?: SelectSubset<T, leave_typesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Leave_types and returns the data saved in the database.
     * @param {leave_typesCreateManyAndReturnArgs} args - Arguments to create many Leave_types.
     * @example
     * // Create many Leave_types
     * const leave_types = await prisma.leave_types.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Leave_types and only return the `id`
     * const leave_typesWithIdOnly = await prisma.leave_types.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends leave_typesCreateManyAndReturnArgs>(args?: SelectSubset<T, leave_typesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$leave_typesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Leave_types.
     * @param {leave_typesDeleteArgs} args - Arguments to delete one Leave_types.
     * @example
     * // Delete one Leave_types
     * const Leave_types = await prisma.leave_types.delete({
     *   where: {
     *     // ... filter to delete one Leave_types
     *   }
     * })
     * 
     */
    delete<T extends leave_typesDeleteArgs>(args: SelectSubset<T, leave_typesDeleteArgs<ExtArgs>>): Prisma__leave_typesClient<$Result.GetResult<Prisma.$leave_typesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Leave_types.
     * @param {leave_typesUpdateArgs} args - Arguments to update one Leave_types.
     * @example
     * // Update one Leave_types
     * const leave_types = await prisma.leave_types.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends leave_typesUpdateArgs>(args: SelectSubset<T, leave_typesUpdateArgs<ExtArgs>>): Prisma__leave_typesClient<$Result.GetResult<Prisma.$leave_typesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Leave_types.
     * @param {leave_typesDeleteManyArgs} args - Arguments to filter Leave_types to delete.
     * @example
     * // Delete a few Leave_types
     * const { count } = await prisma.leave_types.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends leave_typesDeleteManyArgs>(args?: SelectSubset<T, leave_typesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Leave_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {leave_typesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Leave_types
     * const leave_types = await prisma.leave_types.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends leave_typesUpdateManyArgs>(args: SelectSubset<T, leave_typesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Leave_types and returns the data updated in the database.
     * @param {leave_typesUpdateManyAndReturnArgs} args - Arguments to update many Leave_types.
     * @example
     * // Update many Leave_types
     * const leave_types = await prisma.leave_types.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Leave_types and only return the `id`
     * const leave_typesWithIdOnly = await prisma.leave_types.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends leave_typesUpdateManyAndReturnArgs>(args: SelectSubset<T, leave_typesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$leave_typesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Leave_types.
     * @param {leave_typesUpsertArgs} args - Arguments to update or create a Leave_types.
     * @example
     * // Update or create a Leave_types
     * const leave_types = await prisma.leave_types.upsert({
     *   create: {
     *     // ... data to create a Leave_types
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Leave_types we want to update
     *   }
     * })
     */
    upsert<T extends leave_typesUpsertArgs>(args: SelectSubset<T, leave_typesUpsertArgs<ExtArgs>>): Prisma__leave_typesClient<$Result.GetResult<Prisma.$leave_typesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Leave_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {leave_typesCountArgs} args - Arguments to filter Leave_types to count.
     * @example
     * // Count the number of Leave_types
     * const count = await prisma.leave_types.count({
     *   where: {
     *     // ... the filter for the Leave_types we want to count
     *   }
     * })
    **/
    count<T extends leave_typesCountArgs>(
      args?: Subset<T, leave_typesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Leave_typesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Leave_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Leave_typesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Leave_typesAggregateArgs>(args: Subset<T, Leave_typesAggregateArgs>): Prisma.PrismaPromise<GetLeave_typesAggregateType<T>>

    /**
     * Group by Leave_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {leave_typesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends leave_typesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: leave_typesGroupByArgs['orderBy'] }
        : { orderBy?: leave_typesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, leave_typesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLeave_typesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the leave_types model
   */
  readonly fields: leave_typesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for leave_types.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__leave_typesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    leave_balances<T extends leave_types$leave_balancesArgs<ExtArgs> = {}>(args?: Subset<T, leave_types$leave_balancesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$leave_balancesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the leave_types model
   */
  interface leave_typesFieldRefs {
    readonly id: FieldRef<"leave_types", 'Int'>
    readonly type_name: FieldRef<"leave_types", 'leave_types_type_name'>
    readonly max_days: FieldRef<"leave_types", 'Int'>
    readonly paid: FieldRef<"leave_types", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * leave_types findUnique
   */
  export type leave_typesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_types
     */
    select?: leave_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_types
     */
    omit?: leave_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_typesInclude<ExtArgs> | null
    /**
     * Filter, which leave_types to fetch.
     */
    where: leave_typesWhereUniqueInput
  }

  /**
   * leave_types findUniqueOrThrow
   */
  export type leave_typesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_types
     */
    select?: leave_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_types
     */
    omit?: leave_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_typesInclude<ExtArgs> | null
    /**
     * Filter, which leave_types to fetch.
     */
    where: leave_typesWhereUniqueInput
  }

  /**
   * leave_types findFirst
   */
  export type leave_typesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_types
     */
    select?: leave_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_types
     */
    omit?: leave_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_typesInclude<ExtArgs> | null
    /**
     * Filter, which leave_types to fetch.
     */
    where?: leave_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of leave_types to fetch.
     */
    orderBy?: leave_typesOrderByWithRelationInput | leave_typesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for leave_types.
     */
    cursor?: leave_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` leave_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` leave_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of leave_types.
     */
    distinct?: Leave_typesScalarFieldEnum | Leave_typesScalarFieldEnum[]
  }

  /**
   * leave_types findFirstOrThrow
   */
  export type leave_typesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_types
     */
    select?: leave_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_types
     */
    omit?: leave_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_typesInclude<ExtArgs> | null
    /**
     * Filter, which leave_types to fetch.
     */
    where?: leave_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of leave_types to fetch.
     */
    orderBy?: leave_typesOrderByWithRelationInput | leave_typesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for leave_types.
     */
    cursor?: leave_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` leave_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` leave_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of leave_types.
     */
    distinct?: Leave_typesScalarFieldEnum | Leave_typesScalarFieldEnum[]
  }

  /**
   * leave_types findMany
   */
  export type leave_typesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_types
     */
    select?: leave_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_types
     */
    omit?: leave_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_typesInclude<ExtArgs> | null
    /**
     * Filter, which leave_types to fetch.
     */
    where?: leave_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of leave_types to fetch.
     */
    orderBy?: leave_typesOrderByWithRelationInput | leave_typesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing leave_types.
     */
    cursor?: leave_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` leave_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` leave_types.
     */
    skip?: number
    distinct?: Leave_typesScalarFieldEnum | Leave_typesScalarFieldEnum[]
  }

  /**
   * leave_types create
   */
  export type leave_typesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_types
     */
    select?: leave_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_types
     */
    omit?: leave_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_typesInclude<ExtArgs> | null
    /**
     * The data needed to create a leave_types.
     */
    data: XOR<leave_typesCreateInput, leave_typesUncheckedCreateInput>
  }

  /**
   * leave_types createMany
   */
  export type leave_typesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many leave_types.
     */
    data: leave_typesCreateManyInput | leave_typesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * leave_types createManyAndReturn
   */
  export type leave_typesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_types
     */
    select?: leave_typesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the leave_types
     */
    omit?: leave_typesOmit<ExtArgs> | null
    /**
     * The data used to create many leave_types.
     */
    data: leave_typesCreateManyInput | leave_typesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * leave_types update
   */
  export type leave_typesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_types
     */
    select?: leave_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_types
     */
    omit?: leave_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_typesInclude<ExtArgs> | null
    /**
     * The data needed to update a leave_types.
     */
    data: XOR<leave_typesUpdateInput, leave_typesUncheckedUpdateInput>
    /**
     * Choose, which leave_types to update.
     */
    where: leave_typesWhereUniqueInput
  }

  /**
   * leave_types updateMany
   */
  export type leave_typesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update leave_types.
     */
    data: XOR<leave_typesUpdateManyMutationInput, leave_typesUncheckedUpdateManyInput>
    /**
     * Filter which leave_types to update
     */
    where?: leave_typesWhereInput
    /**
     * Limit how many leave_types to update.
     */
    limit?: number
  }

  /**
   * leave_types updateManyAndReturn
   */
  export type leave_typesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_types
     */
    select?: leave_typesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the leave_types
     */
    omit?: leave_typesOmit<ExtArgs> | null
    /**
     * The data used to update leave_types.
     */
    data: XOR<leave_typesUpdateManyMutationInput, leave_typesUncheckedUpdateManyInput>
    /**
     * Filter which leave_types to update
     */
    where?: leave_typesWhereInput
    /**
     * Limit how many leave_types to update.
     */
    limit?: number
  }

  /**
   * leave_types upsert
   */
  export type leave_typesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_types
     */
    select?: leave_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_types
     */
    omit?: leave_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_typesInclude<ExtArgs> | null
    /**
     * The filter to search for the leave_types to update in case it exists.
     */
    where: leave_typesWhereUniqueInput
    /**
     * In case the leave_types found by the `where` argument doesn't exist, create a new leave_types with this data.
     */
    create: XOR<leave_typesCreateInput, leave_typesUncheckedCreateInput>
    /**
     * In case the leave_types was found with the provided `where` argument, update it with this data.
     */
    update: XOR<leave_typesUpdateInput, leave_typesUncheckedUpdateInput>
  }

  /**
   * leave_types delete
   */
  export type leave_typesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_types
     */
    select?: leave_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_types
     */
    omit?: leave_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_typesInclude<ExtArgs> | null
    /**
     * Filter which leave_types to delete.
     */
    where: leave_typesWhereUniqueInput
  }

  /**
   * leave_types deleteMany
   */
  export type leave_typesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which leave_types to delete
     */
    where?: leave_typesWhereInput
    /**
     * Limit how many leave_types to delete.
     */
    limit?: number
  }

  /**
   * leave_types.leave_balances
   */
  export type leave_types$leave_balancesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_balances
     */
    select?: leave_balancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_balances
     */
    omit?: leave_balancesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_balancesInclude<ExtArgs> | null
    where?: leave_balancesWhereInput
    orderBy?: leave_balancesOrderByWithRelationInput | leave_balancesOrderByWithRelationInput[]
    cursor?: leave_balancesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Leave_balancesScalarFieldEnum | Leave_balancesScalarFieldEnum[]
  }

  /**
   * leave_types without action
   */
  export type leave_typesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_types
     */
    select?: leave_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_types
     */
    omit?: leave_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_typesInclude<ExtArgs> | null
  }


  /**
   * Model leave_balances
   */

  export type AggregateLeave_balances = {
    _count: Leave_balancesCountAggregateOutputType | null
    _avg: Leave_balancesAvgAggregateOutputType | null
    _sum: Leave_balancesSumAggregateOutputType | null
    _min: Leave_balancesMinAggregateOutputType | null
    _max: Leave_balancesMaxAggregateOutputType | null
  }

  export type Leave_balancesAvgAggregateOutputType = {
    id: number | null
    type_id: number | null
    total: number | null
    used: number | null
    remaining: number | null
  }

  export type Leave_balancesSumAggregateOutputType = {
    id: number | null
    type_id: number | null
    total: number | null
    used: number | null
    remaining: number | null
  }

  export type Leave_balancesMinAggregateOutputType = {
    id: number | null
    empid: string | null
    type_id: number | null
    total: number | null
    used: number | null
    remaining: number | null
  }

  export type Leave_balancesMaxAggregateOutputType = {
    id: number | null
    empid: string | null
    type_id: number | null
    total: number | null
    used: number | null
    remaining: number | null
  }

  export type Leave_balancesCountAggregateOutputType = {
    id: number
    empid: number
    type_id: number
    total: number
    used: number
    remaining: number
    _all: number
  }


  export type Leave_balancesAvgAggregateInputType = {
    id?: true
    type_id?: true
    total?: true
    used?: true
    remaining?: true
  }

  export type Leave_balancesSumAggregateInputType = {
    id?: true
    type_id?: true
    total?: true
    used?: true
    remaining?: true
  }

  export type Leave_balancesMinAggregateInputType = {
    id?: true
    empid?: true
    type_id?: true
    total?: true
    used?: true
    remaining?: true
  }

  export type Leave_balancesMaxAggregateInputType = {
    id?: true
    empid?: true
    type_id?: true
    total?: true
    used?: true
    remaining?: true
  }

  export type Leave_balancesCountAggregateInputType = {
    id?: true
    empid?: true
    type_id?: true
    total?: true
    used?: true
    remaining?: true
    _all?: true
  }

  export type Leave_balancesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which leave_balances to aggregate.
     */
    where?: leave_balancesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of leave_balances to fetch.
     */
    orderBy?: leave_balancesOrderByWithRelationInput | leave_balancesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: leave_balancesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` leave_balances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` leave_balances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned leave_balances
    **/
    _count?: true | Leave_balancesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Leave_balancesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Leave_balancesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Leave_balancesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Leave_balancesMaxAggregateInputType
  }

  export type GetLeave_balancesAggregateType<T extends Leave_balancesAggregateArgs> = {
        [P in keyof T & keyof AggregateLeave_balances]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLeave_balances[P]>
      : GetScalarType<T[P], AggregateLeave_balances[P]>
  }




  export type leave_balancesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: leave_balancesWhereInput
    orderBy?: leave_balancesOrderByWithAggregationInput | leave_balancesOrderByWithAggregationInput[]
    by: Leave_balancesScalarFieldEnum[] | Leave_balancesScalarFieldEnum
    having?: leave_balancesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Leave_balancesCountAggregateInputType | true
    _avg?: Leave_balancesAvgAggregateInputType
    _sum?: Leave_balancesSumAggregateInputType
    _min?: Leave_balancesMinAggregateInputType
    _max?: Leave_balancesMaxAggregateInputType
  }

  export type Leave_balancesGroupByOutputType = {
    id: number
    empid: string
    type_id: number
    total: number
    used: number | null
    remaining: number | null
    _count: Leave_balancesCountAggregateOutputType | null
    _avg: Leave_balancesAvgAggregateOutputType | null
    _sum: Leave_balancesSumAggregateOutputType | null
    _min: Leave_balancesMinAggregateOutputType | null
    _max: Leave_balancesMaxAggregateOutputType | null
  }

  type GetLeave_balancesGroupByPayload<T extends leave_balancesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Leave_balancesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Leave_balancesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Leave_balancesGroupByOutputType[P]>
            : GetScalarType<T[P], Leave_balancesGroupByOutputType[P]>
        }
      >
    >


  export type leave_balancesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    empid?: boolean
    type_id?: boolean
    total?: boolean
    used?: boolean
    remaining?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
    leave_types?: boolean | leave_typesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["leave_balances"]>

  export type leave_balancesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    empid?: boolean
    type_id?: boolean
    total?: boolean
    used?: boolean
    remaining?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
    leave_types?: boolean | leave_typesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["leave_balances"]>

  export type leave_balancesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    empid?: boolean
    type_id?: boolean
    total?: boolean
    used?: boolean
    remaining?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
    leave_types?: boolean | leave_typesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["leave_balances"]>

  export type leave_balancesSelectScalar = {
    id?: boolean
    empid?: boolean
    type_id?: boolean
    total?: boolean
    used?: boolean
    remaining?: boolean
  }

  export type leave_balancesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "empid" | "type_id" | "total" | "used" | "remaining", ExtArgs["result"]["leave_balances"]>
  export type leave_balancesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
    leave_types?: boolean | leave_typesDefaultArgs<ExtArgs>
  }
  export type leave_balancesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
    leave_types?: boolean | leave_typesDefaultArgs<ExtArgs>
  }
  export type leave_balancesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
    leave_types?: boolean | leave_typesDefaultArgs<ExtArgs>
  }

  export type $leave_balancesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "leave_balances"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>
      leave_types: Prisma.$leave_typesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      empid: string
      type_id: number
      total: number
      used: number | null
      remaining: number | null
    }, ExtArgs["result"]["leave_balances"]>
    composites: {}
  }

  type leave_balancesGetPayload<S extends boolean | null | undefined | leave_balancesDefaultArgs> = $Result.GetResult<Prisma.$leave_balancesPayload, S>

  type leave_balancesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<leave_balancesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Leave_balancesCountAggregateInputType | true
    }

  export interface leave_balancesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['leave_balances'], meta: { name: 'leave_balances' } }
    /**
     * Find zero or one Leave_balances that matches the filter.
     * @param {leave_balancesFindUniqueArgs} args - Arguments to find a Leave_balances
     * @example
     * // Get one Leave_balances
     * const leave_balances = await prisma.leave_balances.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends leave_balancesFindUniqueArgs>(args: SelectSubset<T, leave_balancesFindUniqueArgs<ExtArgs>>): Prisma__leave_balancesClient<$Result.GetResult<Prisma.$leave_balancesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Leave_balances that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {leave_balancesFindUniqueOrThrowArgs} args - Arguments to find a Leave_balances
     * @example
     * // Get one Leave_balances
     * const leave_balances = await prisma.leave_balances.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends leave_balancesFindUniqueOrThrowArgs>(args: SelectSubset<T, leave_balancesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__leave_balancesClient<$Result.GetResult<Prisma.$leave_balancesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Leave_balances that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {leave_balancesFindFirstArgs} args - Arguments to find a Leave_balances
     * @example
     * // Get one Leave_balances
     * const leave_balances = await prisma.leave_balances.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends leave_balancesFindFirstArgs>(args?: SelectSubset<T, leave_balancesFindFirstArgs<ExtArgs>>): Prisma__leave_balancesClient<$Result.GetResult<Prisma.$leave_balancesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Leave_balances that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {leave_balancesFindFirstOrThrowArgs} args - Arguments to find a Leave_balances
     * @example
     * // Get one Leave_balances
     * const leave_balances = await prisma.leave_balances.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends leave_balancesFindFirstOrThrowArgs>(args?: SelectSubset<T, leave_balancesFindFirstOrThrowArgs<ExtArgs>>): Prisma__leave_balancesClient<$Result.GetResult<Prisma.$leave_balancesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Leave_balances that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {leave_balancesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Leave_balances
     * const leave_balances = await prisma.leave_balances.findMany()
     * 
     * // Get first 10 Leave_balances
     * const leave_balances = await prisma.leave_balances.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const leave_balancesWithIdOnly = await prisma.leave_balances.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends leave_balancesFindManyArgs>(args?: SelectSubset<T, leave_balancesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$leave_balancesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Leave_balances.
     * @param {leave_balancesCreateArgs} args - Arguments to create a Leave_balances.
     * @example
     * // Create one Leave_balances
     * const Leave_balances = await prisma.leave_balances.create({
     *   data: {
     *     // ... data to create a Leave_balances
     *   }
     * })
     * 
     */
    create<T extends leave_balancesCreateArgs>(args: SelectSubset<T, leave_balancesCreateArgs<ExtArgs>>): Prisma__leave_balancesClient<$Result.GetResult<Prisma.$leave_balancesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Leave_balances.
     * @param {leave_balancesCreateManyArgs} args - Arguments to create many Leave_balances.
     * @example
     * // Create many Leave_balances
     * const leave_balances = await prisma.leave_balances.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends leave_balancesCreateManyArgs>(args?: SelectSubset<T, leave_balancesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Leave_balances and returns the data saved in the database.
     * @param {leave_balancesCreateManyAndReturnArgs} args - Arguments to create many Leave_balances.
     * @example
     * // Create many Leave_balances
     * const leave_balances = await prisma.leave_balances.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Leave_balances and only return the `id`
     * const leave_balancesWithIdOnly = await prisma.leave_balances.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends leave_balancesCreateManyAndReturnArgs>(args?: SelectSubset<T, leave_balancesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$leave_balancesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Leave_balances.
     * @param {leave_balancesDeleteArgs} args - Arguments to delete one Leave_balances.
     * @example
     * // Delete one Leave_balances
     * const Leave_balances = await prisma.leave_balances.delete({
     *   where: {
     *     // ... filter to delete one Leave_balances
     *   }
     * })
     * 
     */
    delete<T extends leave_balancesDeleteArgs>(args: SelectSubset<T, leave_balancesDeleteArgs<ExtArgs>>): Prisma__leave_balancesClient<$Result.GetResult<Prisma.$leave_balancesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Leave_balances.
     * @param {leave_balancesUpdateArgs} args - Arguments to update one Leave_balances.
     * @example
     * // Update one Leave_balances
     * const leave_balances = await prisma.leave_balances.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends leave_balancesUpdateArgs>(args: SelectSubset<T, leave_balancesUpdateArgs<ExtArgs>>): Prisma__leave_balancesClient<$Result.GetResult<Prisma.$leave_balancesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Leave_balances.
     * @param {leave_balancesDeleteManyArgs} args - Arguments to filter Leave_balances to delete.
     * @example
     * // Delete a few Leave_balances
     * const { count } = await prisma.leave_balances.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends leave_balancesDeleteManyArgs>(args?: SelectSubset<T, leave_balancesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Leave_balances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {leave_balancesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Leave_balances
     * const leave_balances = await prisma.leave_balances.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends leave_balancesUpdateManyArgs>(args: SelectSubset<T, leave_balancesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Leave_balances and returns the data updated in the database.
     * @param {leave_balancesUpdateManyAndReturnArgs} args - Arguments to update many Leave_balances.
     * @example
     * // Update many Leave_balances
     * const leave_balances = await prisma.leave_balances.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Leave_balances and only return the `id`
     * const leave_balancesWithIdOnly = await prisma.leave_balances.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends leave_balancesUpdateManyAndReturnArgs>(args: SelectSubset<T, leave_balancesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$leave_balancesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Leave_balances.
     * @param {leave_balancesUpsertArgs} args - Arguments to update or create a Leave_balances.
     * @example
     * // Update or create a Leave_balances
     * const leave_balances = await prisma.leave_balances.upsert({
     *   create: {
     *     // ... data to create a Leave_balances
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Leave_balances we want to update
     *   }
     * })
     */
    upsert<T extends leave_balancesUpsertArgs>(args: SelectSubset<T, leave_balancesUpsertArgs<ExtArgs>>): Prisma__leave_balancesClient<$Result.GetResult<Prisma.$leave_balancesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Leave_balances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {leave_balancesCountArgs} args - Arguments to filter Leave_balances to count.
     * @example
     * // Count the number of Leave_balances
     * const count = await prisma.leave_balances.count({
     *   where: {
     *     // ... the filter for the Leave_balances we want to count
     *   }
     * })
    **/
    count<T extends leave_balancesCountArgs>(
      args?: Subset<T, leave_balancesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Leave_balancesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Leave_balances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Leave_balancesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Leave_balancesAggregateArgs>(args: Subset<T, Leave_balancesAggregateArgs>): Prisma.PrismaPromise<GetLeave_balancesAggregateType<T>>

    /**
     * Group by Leave_balances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {leave_balancesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends leave_balancesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: leave_balancesGroupByArgs['orderBy'] }
        : { orderBy?: leave_balancesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, leave_balancesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLeave_balancesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the leave_balances model
   */
  readonly fields: leave_balancesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for leave_balances.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__leave_balancesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    leave_types<T extends leave_typesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, leave_typesDefaultArgs<ExtArgs>>): Prisma__leave_typesClient<$Result.GetResult<Prisma.$leave_typesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the leave_balances model
   */
  interface leave_balancesFieldRefs {
    readonly id: FieldRef<"leave_balances", 'Int'>
    readonly empid: FieldRef<"leave_balances", 'String'>
    readonly type_id: FieldRef<"leave_balances", 'Int'>
    readonly total: FieldRef<"leave_balances", 'Int'>
    readonly used: FieldRef<"leave_balances", 'Int'>
    readonly remaining: FieldRef<"leave_balances", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * leave_balances findUnique
   */
  export type leave_balancesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_balances
     */
    select?: leave_balancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_balances
     */
    omit?: leave_balancesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_balancesInclude<ExtArgs> | null
    /**
     * Filter, which leave_balances to fetch.
     */
    where: leave_balancesWhereUniqueInput
  }

  /**
   * leave_balances findUniqueOrThrow
   */
  export type leave_balancesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_balances
     */
    select?: leave_balancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_balances
     */
    omit?: leave_balancesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_balancesInclude<ExtArgs> | null
    /**
     * Filter, which leave_balances to fetch.
     */
    where: leave_balancesWhereUniqueInput
  }

  /**
   * leave_balances findFirst
   */
  export type leave_balancesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_balances
     */
    select?: leave_balancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_balances
     */
    omit?: leave_balancesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_balancesInclude<ExtArgs> | null
    /**
     * Filter, which leave_balances to fetch.
     */
    where?: leave_balancesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of leave_balances to fetch.
     */
    orderBy?: leave_balancesOrderByWithRelationInput | leave_balancesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for leave_balances.
     */
    cursor?: leave_balancesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` leave_balances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` leave_balances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of leave_balances.
     */
    distinct?: Leave_balancesScalarFieldEnum | Leave_balancesScalarFieldEnum[]
  }

  /**
   * leave_balances findFirstOrThrow
   */
  export type leave_balancesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_balances
     */
    select?: leave_balancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_balances
     */
    omit?: leave_balancesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_balancesInclude<ExtArgs> | null
    /**
     * Filter, which leave_balances to fetch.
     */
    where?: leave_balancesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of leave_balances to fetch.
     */
    orderBy?: leave_balancesOrderByWithRelationInput | leave_balancesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for leave_balances.
     */
    cursor?: leave_balancesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` leave_balances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` leave_balances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of leave_balances.
     */
    distinct?: Leave_balancesScalarFieldEnum | Leave_balancesScalarFieldEnum[]
  }

  /**
   * leave_balances findMany
   */
  export type leave_balancesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_balances
     */
    select?: leave_balancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_balances
     */
    omit?: leave_balancesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_balancesInclude<ExtArgs> | null
    /**
     * Filter, which leave_balances to fetch.
     */
    where?: leave_balancesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of leave_balances to fetch.
     */
    orderBy?: leave_balancesOrderByWithRelationInput | leave_balancesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing leave_balances.
     */
    cursor?: leave_balancesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` leave_balances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` leave_balances.
     */
    skip?: number
    distinct?: Leave_balancesScalarFieldEnum | Leave_balancesScalarFieldEnum[]
  }

  /**
   * leave_balances create
   */
  export type leave_balancesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_balances
     */
    select?: leave_balancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_balances
     */
    omit?: leave_balancesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_balancesInclude<ExtArgs> | null
    /**
     * The data needed to create a leave_balances.
     */
    data: XOR<leave_balancesCreateInput, leave_balancesUncheckedCreateInput>
  }

  /**
   * leave_balances createMany
   */
  export type leave_balancesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many leave_balances.
     */
    data: leave_balancesCreateManyInput | leave_balancesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * leave_balances createManyAndReturn
   */
  export type leave_balancesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_balances
     */
    select?: leave_balancesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the leave_balances
     */
    omit?: leave_balancesOmit<ExtArgs> | null
    /**
     * The data used to create many leave_balances.
     */
    data: leave_balancesCreateManyInput | leave_balancesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_balancesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * leave_balances update
   */
  export type leave_balancesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_balances
     */
    select?: leave_balancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_balances
     */
    omit?: leave_balancesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_balancesInclude<ExtArgs> | null
    /**
     * The data needed to update a leave_balances.
     */
    data: XOR<leave_balancesUpdateInput, leave_balancesUncheckedUpdateInput>
    /**
     * Choose, which leave_balances to update.
     */
    where: leave_balancesWhereUniqueInput
  }

  /**
   * leave_balances updateMany
   */
  export type leave_balancesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update leave_balances.
     */
    data: XOR<leave_balancesUpdateManyMutationInput, leave_balancesUncheckedUpdateManyInput>
    /**
     * Filter which leave_balances to update
     */
    where?: leave_balancesWhereInput
    /**
     * Limit how many leave_balances to update.
     */
    limit?: number
  }

  /**
   * leave_balances updateManyAndReturn
   */
  export type leave_balancesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_balances
     */
    select?: leave_balancesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the leave_balances
     */
    omit?: leave_balancesOmit<ExtArgs> | null
    /**
     * The data used to update leave_balances.
     */
    data: XOR<leave_balancesUpdateManyMutationInput, leave_balancesUncheckedUpdateManyInput>
    /**
     * Filter which leave_balances to update
     */
    where?: leave_balancesWhereInput
    /**
     * Limit how many leave_balances to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_balancesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * leave_balances upsert
   */
  export type leave_balancesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_balances
     */
    select?: leave_balancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_balances
     */
    omit?: leave_balancesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_balancesInclude<ExtArgs> | null
    /**
     * The filter to search for the leave_balances to update in case it exists.
     */
    where: leave_balancesWhereUniqueInput
    /**
     * In case the leave_balances found by the `where` argument doesn't exist, create a new leave_balances with this data.
     */
    create: XOR<leave_balancesCreateInput, leave_balancesUncheckedCreateInput>
    /**
     * In case the leave_balances was found with the provided `where` argument, update it with this data.
     */
    update: XOR<leave_balancesUpdateInput, leave_balancesUncheckedUpdateInput>
  }

  /**
   * leave_balances delete
   */
  export type leave_balancesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_balances
     */
    select?: leave_balancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_balances
     */
    omit?: leave_balancesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_balancesInclude<ExtArgs> | null
    /**
     * Filter which leave_balances to delete.
     */
    where: leave_balancesWhereUniqueInput
  }

  /**
   * leave_balances deleteMany
   */
  export type leave_balancesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which leave_balances to delete
     */
    where?: leave_balancesWhereInput
    /**
     * Limit how many leave_balances to delete.
     */
    limit?: number
  }

  /**
   * leave_balances without action
   */
  export type leave_balancesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_balances
     */
    select?: leave_balancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_balances
     */
    omit?: leave_balancesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_balancesInclude<ExtArgs> | null
  }


  /**
   * Model leave_requests
   */

  export type AggregateLeave_requests = {
    _count: Leave_requestsCountAggregateOutputType | null
    _avg: Leave_requestsAvgAggregateOutputType | null
    _sum: Leave_requestsSumAggregateOutputType | null
    _min: Leave_requestsMinAggregateOutputType | null
    _max: Leave_requestsMaxAggregateOutputType | null
  }

  export type Leave_requestsAvgAggregateOutputType = {
    id: number | null
  }

  export type Leave_requestsSumAggregateOutputType = {
    id: number | null
  }

  export type Leave_requestsMinAggregateOutputType = {
    id: number | null
    empid: string | null
    from_date: Date | null
    to_date: Date | null
    reason: string | null
    status: $Enums.leave_requests_status | null
    applied_at: Date | null
    attachment: string | null
    leave_type: string | null
    name: string | null
  }

  export type Leave_requestsMaxAggregateOutputType = {
    id: number | null
    empid: string | null
    from_date: Date | null
    to_date: Date | null
    reason: string | null
    status: $Enums.leave_requests_status | null
    applied_at: Date | null
    attachment: string | null
    leave_type: string | null
    name: string | null
  }

  export type Leave_requestsCountAggregateOutputType = {
    id: number
    empid: number
    from_date: number
    to_date: number
    reason: number
    status: number
    applied_at: number
    attachment: number
    leave_type: number
    name: number
    _all: number
  }


  export type Leave_requestsAvgAggregateInputType = {
    id?: true
  }

  export type Leave_requestsSumAggregateInputType = {
    id?: true
  }

  export type Leave_requestsMinAggregateInputType = {
    id?: true
    empid?: true
    from_date?: true
    to_date?: true
    reason?: true
    status?: true
    applied_at?: true
    attachment?: true
    leave_type?: true
    name?: true
  }

  export type Leave_requestsMaxAggregateInputType = {
    id?: true
    empid?: true
    from_date?: true
    to_date?: true
    reason?: true
    status?: true
    applied_at?: true
    attachment?: true
    leave_type?: true
    name?: true
  }

  export type Leave_requestsCountAggregateInputType = {
    id?: true
    empid?: true
    from_date?: true
    to_date?: true
    reason?: true
    status?: true
    applied_at?: true
    attachment?: true
    leave_type?: true
    name?: true
    _all?: true
  }

  export type Leave_requestsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which leave_requests to aggregate.
     */
    where?: leave_requestsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of leave_requests to fetch.
     */
    orderBy?: leave_requestsOrderByWithRelationInput | leave_requestsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: leave_requestsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` leave_requests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` leave_requests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned leave_requests
    **/
    _count?: true | Leave_requestsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Leave_requestsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Leave_requestsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Leave_requestsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Leave_requestsMaxAggregateInputType
  }

  export type GetLeave_requestsAggregateType<T extends Leave_requestsAggregateArgs> = {
        [P in keyof T & keyof AggregateLeave_requests]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLeave_requests[P]>
      : GetScalarType<T[P], AggregateLeave_requests[P]>
  }




  export type leave_requestsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: leave_requestsWhereInput
    orderBy?: leave_requestsOrderByWithAggregationInput | leave_requestsOrderByWithAggregationInput[]
    by: Leave_requestsScalarFieldEnum[] | Leave_requestsScalarFieldEnum
    having?: leave_requestsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Leave_requestsCountAggregateInputType | true
    _avg?: Leave_requestsAvgAggregateInputType
    _sum?: Leave_requestsSumAggregateInputType
    _min?: Leave_requestsMinAggregateInputType
    _max?: Leave_requestsMaxAggregateInputType
  }

  export type Leave_requestsGroupByOutputType = {
    id: number
    empid: string
    from_date: Date
    to_date: Date
    reason: string | null
    status: $Enums.leave_requests_status | null
    applied_at: Date | null
    attachment: string | null
    leave_type: string
    name: string
    _count: Leave_requestsCountAggregateOutputType | null
    _avg: Leave_requestsAvgAggregateOutputType | null
    _sum: Leave_requestsSumAggregateOutputType | null
    _min: Leave_requestsMinAggregateOutputType | null
    _max: Leave_requestsMaxAggregateOutputType | null
  }

  type GetLeave_requestsGroupByPayload<T extends leave_requestsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Leave_requestsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Leave_requestsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Leave_requestsGroupByOutputType[P]>
            : GetScalarType<T[P], Leave_requestsGroupByOutputType[P]>
        }
      >
    >


  export type leave_requestsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    empid?: boolean
    from_date?: boolean
    to_date?: boolean
    reason?: boolean
    status?: boolean
    applied_at?: boolean
    attachment?: boolean
    leave_type?: boolean
    name?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["leave_requests"]>

  export type leave_requestsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    empid?: boolean
    from_date?: boolean
    to_date?: boolean
    reason?: boolean
    status?: boolean
    applied_at?: boolean
    attachment?: boolean
    leave_type?: boolean
    name?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["leave_requests"]>

  export type leave_requestsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    empid?: boolean
    from_date?: boolean
    to_date?: boolean
    reason?: boolean
    status?: boolean
    applied_at?: boolean
    attachment?: boolean
    leave_type?: boolean
    name?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["leave_requests"]>

  export type leave_requestsSelectScalar = {
    id?: boolean
    empid?: boolean
    from_date?: boolean
    to_date?: boolean
    reason?: boolean
    status?: boolean
    applied_at?: boolean
    attachment?: boolean
    leave_type?: boolean
    name?: boolean
  }

  export type leave_requestsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "empid" | "from_date" | "to_date" | "reason" | "status" | "applied_at" | "attachment" | "leave_type" | "name", ExtArgs["result"]["leave_requests"]>
  export type leave_requestsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type leave_requestsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type leave_requestsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $leave_requestsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "leave_requests"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      empid: string
      from_date: Date
      to_date: Date
      reason: string | null
      status: $Enums.leave_requests_status | null
      applied_at: Date | null
      attachment: string | null
      leave_type: string
      name: string
    }, ExtArgs["result"]["leave_requests"]>
    composites: {}
  }

  type leave_requestsGetPayload<S extends boolean | null | undefined | leave_requestsDefaultArgs> = $Result.GetResult<Prisma.$leave_requestsPayload, S>

  type leave_requestsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<leave_requestsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Leave_requestsCountAggregateInputType | true
    }

  export interface leave_requestsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['leave_requests'], meta: { name: 'leave_requests' } }
    /**
     * Find zero or one Leave_requests that matches the filter.
     * @param {leave_requestsFindUniqueArgs} args - Arguments to find a Leave_requests
     * @example
     * // Get one Leave_requests
     * const leave_requests = await prisma.leave_requests.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends leave_requestsFindUniqueArgs>(args: SelectSubset<T, leave_requestsFindUniqueArgs<ExtArgs>>): Prisma__leave_requestsClient<$Result.GetResult<Prisma.$leave_requestsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Leave_requests that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {leave_requestsFindUniqueOrThrowArgs} args - Arguments to find a Leave_requests
     * @example
     * // Get one Leave_requests
     * const leave_requests = await prisma.leave_requests.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends leave_requestsFindUniqueOrThrowArgs>(args: SelectSubset<T, leave_requestsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__leave_requestsClient<$Result.GetResult<Prisma.$leave_requestsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Leave_requests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {leave_requestsFindFirstArgs} args - Arguments to find a Leave_requests
     * @example
     * // Get one Leave_requests
     * const leave_requests = await prisma.leave_requests.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends leave_requestsFindFirstArgs>(args?: SelectSubset<T, leave_requestsFindFirstArgs<ExtArgs>>): Prisma__leave_requestsClient<$Result.GetResult<Prisma.$leave_requestsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Leave_requests that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {leave_requestsFindFirstOrThrowArgs} args - Arguments to find a Leave_requests
     * @example
     * // Get one Leave_requests
     * const leave_requests = await prisma.leave_requests.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends leave_requestsFindFirstOrThrowArgs>(args?: SelectSubset<T, leave_requestsFindFirstOrThrowArgs<ExtArgs>>): Prisma__leave_requestsClient<$Result.GetResult<Prisma.$leave_requestsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Leave_requests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {leave_requestsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Leave_requests
     * const leave_requests = await prisma.leave_requests.findMany()
     * 
     * // Get first 10 Leave_requests
     * const leave_requests = await prisma.leave_requests.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const leave_requestsWithIdOnly = await prisma.leave_requests.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends leave_requestsFindManyArgs>(args?: SelectSubset<T, leave_requestsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$leave_requestsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Leave_requests.
     * @param {leave_requestsCreateArgs} args - Arguments to create a Leave_requests.
     * @example
     * // Create one Leave_requests
     * const Leave_requests = await prisma.leave_requests.create({
     *   data: {
     *     // ... data to create a Leave_requests
     *   }
     * })
     * 
     */
    create<T extends leave_requestsCreateArgs>(args: SelectSubset<T, leave_requestsCreateArgs<ExtArgs>>): Prisma__leave_requestsClient<$Result.GetResult<Prisma.$leave_requestsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Leave_requests.
     * @param {leave_requestsCreateManyArgs} args - Arguments to create many Leave_requests.
     * @example
     * // Create many Leave_requests
     * const leave_requests = await prisma.leave_requests.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends leave_requestsCreateManyArgs>(args?: SelectSubset<T, leave_requestsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Leave_requests and returns the data saved in the database.
     * @param {leave_requestsCreateManyAndReturnArgs} args - Arguments to create many Leave_requests.
     * @example
     * // Create many Leave_requests
     * const leave_requests = await prisma.leave_requests.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Leave_requests and only return the `id`
     * const leave_requestsWithIdOnly = await prisma.leave_requests.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends leave_requestsCreateManyAndReturnArgs>(args?: SelectSubset<T, leave_requestsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$leave_requestsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Leave_requests.
     * @param {leave_requestsDeleteArgs} args - Arguments to delete one Leave_requests.
     * @example
     * // Delete one Leave_requests
     * const Leave_requests = await prisma.leave_requests.delete({
     *   where: {
     *     // ... filter to delete one Leave_requests
     *   }
     * })
     * 
     */
    delete<T extends leave_requestsDeleteArgs>(args: SelectSubset<T, leave_requestsDeleteArgs<ExtArgs>>): Prisma__leave_requestsClient<$Result.GetResult<Prisma.$leave_requestsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Leave_requests.
     * @param {leave_requestsUpdateArgs} args - Arguments to update one Leave_requests.
     * @example
     * // Update one Leave_requests
     * const leave_requests = await prisma.leave_requests.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends leave_requestsUpdateArgs>(args: SelectSubset<T, leave_requestsUpdateArgs<ExtArgs>>): Prisma__leave_requestsClient<$Result.GetResult<Prisma.$leave_requestsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Leave_requests.
     * @param {leave_requestsDeleteManyArgs} args - Arguments to filter Leave_requests to delete.
     * @example
     * // Delete a few Leave_requests
     * const { count } = await prisma.leave_requests.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends leave_requestsDeleteManyArgs>(args?: SelectSubset<T, leave_requestsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Leave_requests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {leave_requestsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Leave_requests
     * const leave_requests = await prisma.leave_requests.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends leave_requestsUpdateManyArgs>(args: SelectSubset<T, leave_requestsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Leave_requests and returns the data updated in the database.
     * @param {leave_requestsUpdateManyAndReturnArgs} args - Arguments to update many Leave_requests.
     * @example
     * // Update many Leave_requests
     * const leave_requests = await prisma.leave_requests.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Leave_requests and only return the `id`
     * const leave_requestsWithIdOnly = await prisma.leave_requests.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends leave_requestsUpdateManyAndReturnArgs>(args: SelectSubset<T, leave_requestsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$leave_requestsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Leave_requests.
     * @param {leave_requestsUpsertArgs} args - Arguments to update or create a Leave_requests.
     * @example
     * // Update or create a Leave_requests
     * const leave_requests = await prisma.leave_requests.upsert({
     *   create: {
     *     // ... data to create a Leave_requests
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Leave_requests we want to update
     *   }
     * })
     */
    upsert<T extends leave_requestsUpsertArgs>(args: SelectSubset<T, leave_requestsUpsertArgs<ExtArgs>>): Prisma__leave_requestsClient<$Result.GetResult<Prisma.$leave_requestsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Leave_requests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {leave_requestsCountArgs} args - Arguments to filter Leave_requests to count.
     * @example
     * // Count the number of Leave_requests
     * const count = await prisma.leave_requests.count({
     *   where: {
     *     // ... the filter for the Leave_requests we want to count
     *   }
     * })
    **/
    count<T extends leave_requestsCountArgs>(
      args?: Subset<T, leave_requestsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Leave_requestsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Leave_requests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Leave_requestsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Leave_requestsAggregateArgs>(args: Subset<T, Leave_requestsAggregateArgs>): Prisma.PrismaPromise<GetLeave_requestsAggregateType<T>>

    /**
     * Group by Leave_requests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {leave_requestsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends leave_requestsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: leave_requestsGroupByArgs['orderBy'] }
        : { orderBy?: leave_requestsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, leave_requestsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLeave_requestsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the leave_requests model
   */
  readonly fields: leave_requestsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for leave_requests.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__leave_requestsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the leave_requests model
   */
  interface leave_requestsFieldRefs {
    readonly id: FieldRef<"leave_requests", 'Int'>
    readonly empid: FieldRef<"leave_requests", 'String'>
    readonly from_date: FieldRef<"leave_requests", 'DateTime'>
    readonly to_date: FieldRef<"leave_requests", 'DateTime'>
    readonly reason: FieldRef<"leave_requests", 'String'>
    readonly status: FieldRef<"leave_requests", 'leave_requests_status'>
    readonly applied_at: FieldRef<"leave_requests", 'DateTime'>
    readonly attachment: FieldRef<"leave_requests", 'String'>
    readonly leave_type: FieldRef<"leave_requests", 'String'>
    readonly name: FieldRef<"leave_requests", 'String'>
  }
    

  // Custom InputTypes
  /**
   * leave_requests findUnique
   */
  export type leave_requestsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_requests
     */
    select?: leave_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_requests
     */
    omit?: leave_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_requestsInclude<ExtArgs> | null
    /**
     * Filter, which leave_requests to fetch.
     */
    where: leave_requestsWhereUniqueInput
  }

  /**
   * leave_requests findUniqueOrThrow
   */
  export type leave_requestsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_requests
     */
    select?: leave_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_requests
     */
    omit?: leave_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_requestsInclude<ExtArgs> | null
    /**
     * Filter, which leave_requests to fetch.
     */
    where: leave_requestsWhereUniqueInput
  }

  /**
   * leave_requests findFirst
   */
  export type leave_requestsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_requests
     */
    select?: leave_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_requests
     */
    omit?: leave_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_requestsInclude<ExtArgs> | null
    /**
     * Filter, which leave_requests to fetch.
     */
    where?: leave_requestsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of leave_requests to fetch.
     */
    orderBy?: leave_requestsOrderByWithRelationInput | leave_requestsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for leave_requests.
     */
    cursor?: leave_requestsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` leave_requests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` leave_requests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of leave_requests.
     */
    distinct?: Leave_requestsScalarFieldEnum | Leave_requestsScalarFieldEnum[]
  }

  /**
   * leave_requests findFirstOrThrow
   */
  export type leave_requestsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_requests
     */
    select?: leave_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_requests
     */
    omit?: leave_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_requestsInclude<ExtArgs> | null
    /**
     * Filter, which leave_requests to fetch.
     */
    where?: leave_requestsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of leave_requests to fetch.
     */
    orderBy?: leave_requestsOrderByWithRelationInput | leave_requestsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for leave_requests.
     */
    cursor?: leave_requestsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` leave_requests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` leave_requests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of leave_requests.
     */
    distinct?: Leave_requestsScalarFieldEnum | Leave_requestsScalarFieldEnum[]
  }

  /**
   * leave_requests findMany
   */
  export type leave_requestsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_requests
     */
    select?: leave_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_requests
     */
    omit?: leave_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_requestsInclude<ExtArgs> | null
    /**
     * Filter, which leave_requests to fetch.
     */
    where?: leave_requestsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of leave_requests to fetch.
     */
    orderBy?: leave_requestsOrderByWithRelationInput | leave_requestsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing leave_requests.
     */
    cursor?: leave_requestsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` leave_requests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` leave_requests.
     */
    skip?: number
    distinct?: Leave_requestsScalarFieldEnum | Leave_requestsScalarFieldEnum[]
  }

  /**
   * leave_requests create
   */
  export type leave_requestsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_requests
     */
    select?: leave_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_requests
     */
    omit?: leave_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_requestsInclude<ExtArgs> | null
    /**
     * The data needed to create a leave_requests.
     */
    data: XOR<leave_requestsCreateInput, leave_requestsUncheckedCreateInput>
  }

  /**
   * leave_requests createMany
   */
  export type leave_requestsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many leave_requests.
     */
    data: leave_requestsCreateManyInput | leave_requestsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * leave_requests createManyAndReturn
   */
  export type leave_requestsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_requests
     */
    select?: leave_requestsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the leave_requests
     */
    omit?: leave_requestsOmit<ExtArgs> | null
    /**
     * The data used to create many leave_requests.
     */
    data: leave_requestsCreateManyInput | leave_requestsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_requestsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * leave_requests update
   */
  export type leave_requestsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_requests
     */
    select?: leave_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_requests
     */
    omit?: leave_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_requestsInclude<ExtArgs> | null
    /**
     * The data needed to update a leave_requests.
     */
    data: XOR<leave_requestsUpdateInput, leave_requestsUncheckedUpdateInput>
    /**
     * Choose, which leave_requests to update.
     */
    where: leave_requestsWhereUniqueInput
  }

  /**
   * leave_requests updateMany
   */
  export type leave_requestsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update leave_requests.
     */
    data: XOR<leave_requestsUpdateManyMutationInput, leave_requestsUncheckedUpdateManyInput>
    /**
     * Filter which leave_requests to update
     */
    where?: leave_requestsWhereInput
    /**
     * Limit how many leave_requests to update.
     */
    limit?: number
  }

  /**
   * leave_requests updateManyAndReturn
   */
  export type leave_requestsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_requests
     */
    select?: leave_requestsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the leave_requests
     */
    omit?: leave_requestsOmit<ExtArgs> | null
    /**
     * The data used to update leave_requests.
     */
    data: XOR<leave_requestsUpdateManyMutationInput, leave_requestsUncheckedUpdateManyInput>
    /**
     * Filter which leave_requests to update
     */
    where?: leave_requestsWhereInput
    /**
     * Limit how many leave_requests to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_requestsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * leave_requests upsert
   */
  export type leave_requestsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_requests
     */
    select?: leave_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_requests
     */
    omit?: leave_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_requestsInclude<ExtArgs> | null
    /**
     * The filter to search for the leave_requests to update in case it exists.
     */
    where: leave_requestsWhereUniqueInput
    /**
     * In case the leave_requests found by the `where` argument doesn't exist, create a new leave_requests with this data.
     */
    create: XOR<leave_requestsCreateInput, leave_requestsUncheckedCreateInput>
    /**
     * In case the leave_requests was found with the provided `where` argument, update it with this data.
     */
    update: XOR<leave_requestsUpdateInput, leave_requestsUncheckedUpdateInput>
  }

  /**
   * leave_requests delete
   */
  export type leave_requestsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_requests
     */
    select?: leave_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_requests
     */
    omit?: leave_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_requestsInclude<ExtArgs> | null
    /**
     * Filter which leave_requests to delete.
     */
    where: leave_requestsWhereUniqueInput
  }

  /**
   * leave_requests deleteMany
   */
  export type leave_requestsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which leave_requests to delete
     */
    where?: leave_requestsWhereInput
    /**
     * Limit how many leave_requests to delete.
     */
    limit?: number
  }

  /**
   * leave_requests without action
   */
  export type leave_requestsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_requests
     */
    select?: leave_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_requests
     */
    omit?: leave_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_requestsInclude<ExtArgs> | null
  }


  /**
   * Model users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersAvgAggregateOutputType = {
    id: number | null
    experience: number | null
  }

  export type UsersSumAggregateOutputType = {
    id: number | null
    experience: number | null
  }

  export type UsersMinAggregateOutputType = {
    id: number | null
    empid: string | null
    name: string | null
    email: string | null
    contact_number: string | null
    password: string | null
    position: string | null
    date_of_joining: Date | null
    status: string | null
    experience: number | null
    profile_photo: string | null
    role: $Enums.users_role | null
    created_at: Date | null
    verified: $Enums.users_verified | null
  }

  export type UsersMaxAggregateOutputType = {
    id: number | null
    empid: string | null
    name: string | null
    email: string | null
    contact_number: string | null
    password: string | null
    position: string | null
    date_of_joining: Date | null
    status: string | null
    experience: number | null
    profile_photo: string | null
    role: $Enums.users_role | null
    created_at: Date | null
    verified: $Enums.users_verified | null
  }

  export type UsersCountAggregateOutputType = {
    id: number
    empid: number
    name: number
    email: number
    contact_number: number
    password: number
    position: number
    date_of_joining: number
    status: number
    experience: number
    profile_photo: number
    role: number
    created_at: number
    verified: number
    _all: number
  }


  export type UsersAvgAggregateInputType = {
    id?: true
    experience?: true
  }

  export type UsersSumAggregateInputType = {
    id?: true
    experience?: true
  }

  export type UsersMinAggregateInputType = {
    id?: true
    empid?: true
    name?: true
    email?: true
    contact_number?: true
    password?: true
    position?: true
    date_of_joining?: true
    status?: true
    experience?: true
    profile_photo?: true
    role?: true
    created_at?: true
    verified?: true
  }

  export type UsersMaxAggregateInputType = {
    id?: true
    empid?: true
    name?: true
    email?: true
    contact_number?: true
    password?: true
    position?: true
    date_of_joining?: true
    status?: true
    experience?: true
    profile_photo?: true
    role?: true
    created_at?: true
    verified?: true
  }

  export type UsersCountAggregateInputType = {
    id?: true
    empid?: true
    name?: true
    email?: true
    contact_number?: true
    password?: true
    position?: true
    date_of_joining?: true
    status?: true
    experience?: true
    profile_photo?: true
    role?: true
    created_at?: true
    verified?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to aggregate.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
    orderBy?: usersOrderByWithAggregationInput | usersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _avg?: UsersAvgAggregateInputType
    _sum?: UsersSumAggregateInputType
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    id: number
    empid: string
    name: string
    email: string
    contact_number: string | null
    password: string
    position: string | null
    date_of_joining: Date | null
    status: string | null
    experience: number | null
    profile_photo: string | null
    role: $Enums.users_role
    created_at: Date | null
    verified: $Enums.users_verified | null
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    empid?: boolean
    name?: boolean
    email?: boolean
    contact_number?: boolean
    password?: boolean
    position?: boolean
    date_of_joining?: boolean
    status?: boolean
    experience?: boolean
    profile_photo?: boolean
    role?: boolean
    created_at?: boolean
    verified?: boolean
    employees?: boolean | users$employeesArgs<ExtArgs>
    leave_balances?: boolean | users$leave_balancesArgs<ExtArgs>
    leave_requests?: boolean | users$leave_requestsArgs<ExtArgs>
    payroll?: boolean | users$payrollArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type usersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    empid?: boolean
    name?: boolean
    email?: boolean
    contact_number?: boolean
    password?: boolean
    position?: boolean
    date_of_joining?: boolean
    status?: boolean
    experience?: boolean
    profile_photo?: boolean
    role?: boolean
    created_at?: boolean
    verified?: boolean
  }, ExtArgs["result"]["users"]>

  export type usersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    empid?: boolean
    name?: boolean
    email?: boolean
    contact_number?: boolean
    password?: boolean
    position?: boolean
    date_of_joining?: boolean
    status?: boolean
    experience?: boolean
    profile_photo?: boolean
    role?: boolean
    created_at?: boolean
    verified?: boolean
  }, ExtArgs["result"]["users"]>

  export type usersSelectScalar = {
    id?: boolean
    empid?: boolean
    name?: boolean
    email?: boolean
    contact_number?: boolean
    password?: boolean
    position?: boolean
    date_of_joining?: boolean
    status?: boolean
    experience?: boolean
    profile_photo?: boolean
    role?: boolean
    created_at?: boolean
    verified?: boolean
  }

  export type usersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "empid" | "name" | "email" | "contact_number" | "password" | "position" | "date_of_joining" | "status" | "experience" | "profile_photo" | "role" | "created_at" | "verified", ExtArgs["result"]["users"]>
  export type usersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employees?: boolean | users$employeesArgs<ExtArgs>
    leave_balances?: boolean | users$leave_balancesArgs<ExtArgs>
    leave_requests?: boolean | users$leave_requestsArgs<ExtArgs>
    payroll?: boolean | users$payrollArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type usersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type usersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "users"
    objects: {
      employees: Prisma.$employeesPayload<ExtArgs>[]
      leave_balances: Prisma.$leave_balancesPayload<ExtArgs>[]
      leave_requests: Prisma.$leave_requestsPayload<ExtArgs>[]
      payroll: Prisma.$payrollPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      empid: string
      name: string
      email: string
      contact_number: string | null
      password: string
      position: string | null
      date_of_joining: Date | null
      status: string | null
      experience: number | null
      profile_photo: string | null
      role: $Enums.users_role
      created_at: Date | null
      verified: $Enums.users_verified | null
    }, ExtArgs["result"]["users"]>
    composites: {}
  }

  type usersGetPayload<S extends boolean | null | undefined | usersDefaultArgs> = $Result.GetResult<Prisma.$usersPayload, S>

  type usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<usersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['users'], meta: { name: 'users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {usersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usersFindUniqueArgs>(args: SelectSubset<T, usersFindUniqueArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Users that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {usersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usersFindUniqueOrThrowArgs>(args: SelectSubset<T, usersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usersFindFirstArgs>(args?: SelectSubset<T, usersFindFirstArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usersFindFirstOrThrowArgs>(args?: SelectSubset<T, usersFindFirstOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usersWithIdOnly = await prisma.users.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends usersFindManyArgs>(args?: SelectSubset<T, usersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Users.
     * @param {usersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
     */
    create<T extends usersCreateArgs>(args: SelectSubset<T, usersCreateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {usersCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usersCreateManyArgs>(args?: SelectSubset<T, usersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {usersCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const usersWithIdOnly = await prisma.users.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends usersCreateManyAndReturnArgs>(args?: SelectSubset<T, usersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Users.
     * @param {usersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
     */
    delete<T extends usersDeleteArgs>(args: SelectSubset<T, usersDeleteArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Users.
     * @param {usersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usersUpdateArgs>(args: SelectSubset<T, usersUpdateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {usersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usersDeleteManyArgs>(args?: SelectSubset<T, usersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usersUpdateManyArgs>(args: SelectSubset<T, usersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {usersUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const usersWithIdOnly = await prisma.users.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends usersUpdateManyAndReturnArgs>(args: SelectSubset<T, usersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Users.
     * @param {usersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
     */
    upsert<T extends usersUpsertArgs>(args: SelectSubset<T, usersUpsertArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends usersCountArgs>(
      args?: Subset<T, usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usersGroupByArgs['orderBy'] }
        : { orderBy?: usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the users model
   */
  readonly fields: usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    employees<T extends users$employeesArgs<ExtArgs> = {}>(args?: Subset<T, users$employeesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$employeesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    leave_balances<T extends users$leave_balancesArgs<ExtArgs> = {}>(args?: Subset<T, users$leave_balancesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$leave_balancesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    leave_requests<T extends users$leave_requestsArgs<ExtArgs> = {}>(args?: Subset<T, users$leave_requestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$leave_requestsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    payroll<T extends users$payrollArgs<ExtArgs> = {}>(args?: Subset<T, users$payrollArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$payrollPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the users model
   */
  interface usersFieldRefs {
    readonly id: FieldRef<"users", 'Int'>
    readonly empid: FieldRef<"users", 'String'>
    readonly name: FieldRef<"users", 'String'>
    readonly email: FieldRef<"users", 'String'>
    readonly contact_number: FieldRef<"users", 'String'>
    readonly password: FieldRef<"users", 'String'>
    readonly position: FieldRef<"users", 'String'>
    readonly date_of_joining: FieldRef<"users", 'DateTime'>
    readonly status: FieldRef<"users", 'String'>
    readonly experience: FieldRef<"users", 'Int'>
    readonly profile_photo: FieldRef<"users", 'String'>
    readonly role: FieldRef<"users", 'users_role'>
    readonly created_at: FieldRef<"users", 'DateTime'>
    readonly verified: FieldRef<"users", 'users_verified'>
  }
    

  // Custom InputTypes
  /**
   * users findUnique
   */
  export type usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findUniqueOrThrow
   */
  export type usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findFirst
   */
  export type usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findFirstOrThrow
   */
  export type usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findMany
   */
  export type usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users create
   */
  export type usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to create a users.
     */
    data: XOR<usersCreateInput, usersUncheckedCreateInput>
  }

  /**
   * users createMany
   */
  export type usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users createManyAndReturn
   */
  export type usersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users update
   */
  export type usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to update a users.
     */
    data: XOR<usersUpdateInput, usersUncheckedUpdateInput>
    /**
     * Choose, which users to update.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users updateMany
   */
  export type usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * users updateManyAndReturn
   */
  export type usersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * users upsert
   */
  export type usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The filter to search for the users to update in case it exists.
     */
    where: usersWhereUniqueInput
    /**
     * In case the users found by the `where` argument doesn't exist, create a new users with this data.
     */
    create: XOR<usersCreateInput, usersUncheckedCreateInput>
    /**
     * In case the users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usersUpdateInput, usersUncheckedUpdateInput>
  }

  /**
   * users delete
   */
  export type usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter which users to delete.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users deleteMany
   */
  export type usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: usersWhereInput
    /**
     * Limit how many users to delete.
     */
    limit?: number
  }

  /**
   * users.employees
   */
  export type users$employeesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employees
     */
    select?: employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employees
     */
    omit?: employeesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeesInclude<ExtArgs> | null
    where?: employeesWhereInput
    orderBy?: employeesOrderByWithRelationInput | employeesOrderByWithRelationInput[]
    cursor?: employeesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EmployeesScalarFieldEnum | EmployeesScalarFieldEnum[]
  }

  /**
   * users.leave_balances
   */
  export type users$leave_balancesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_balances
     */
    select?: leave_balancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_balances
     */
    omit?: leave_balancesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_balancesInclude<ExtArgs> | null
    where?: leave_balancesWhereInput
    orderBy?: leave_balancesOrderByWithRelationInput | leave_balancesOrderByWithRelationInput[]
    cursor?: leave_balancesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Leave_balancesScalarFieldEnum | Leave_balancesScalarFieldEnum[]
  }

  /**
   * users.leave_requests
   */
  export type users$leave_requestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leave_requests
     */
    select?: leave_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leave_requests
     */
    omit?: leave_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leave_requestsInclude<ExtArgs> | null
    where?: leave_requestsWhereInput
    orderBy?: leave_requestsOrderByWithRelationInput | leave_requestsOrderByWithRelationInput[]
    cursor?: leave_requestsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Leave_requestsScalarFieldEnum | Leave_requestsScalarFieldEnum[]
  }

  /**
   * users.payroll
   */
  export type users$payrollArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payroll
     */
    select?: payrollSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payroll
     */
    omit?: payrollOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: payrollInclude<ExtArgs> | null
    where?: payrollWhereInput
    orderBy?: payrollOrderByWithRelationInput | payrollOrderByWithRelationInput[]
    cursor?: payrollWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PayrollScalarFieldEnum | PayrollScalarFieldEnum[]
  }

  /**
   * users without action
   */
  export type usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
  }


  /**
   * Model payroll
   */

  export type AggregatePayroll = {
    _count: PayrollCountAggregateOutputType | null
    _avg: PayrollAvgAggregateOutputType | null
    _sum: PayrollSumAggregateOutputType | null
    _min: PayrollMinAggregateOutputType | null
    _max: PayrollMaxAggregateOutputType | null
  }

  export type PayrollAvgAggregateOutputType = {
    id: number | null
    year: number | null
    basic_salary: Decimal | null
    hra: Decimal | null
    bonus: Decimal | null
    da: Decimal | null
    allowances: Decimal | null
    deductions: Decimal | null
    net_pay: Decimal | null
    pf: Decimal | null
    ptax: Decimal | null
    esic: Decimal | null
  }

  export type PayrollSumAggregateOutputType = {
    id: number | null
    year: number | null
    basic_salary: Decimal | null
    hra: Decimal | null
    bonus: Decimal | null
    da: Decimal | null
    allowances: Decimal | null
    deductions: Decimal | null
    net_pay: Decimal | null
    pf: Decimal | null
    ptax: Decimal | null
    esic: Decimal | null
  }

  export type PayrollMinAggregateOutputType = {
    id: number | null
    empid: string | null
    month: string | null
    year: number | null
    basic_salary: Decimal | null
    hra: Decimal | null
    bonus: Decimal | null
    da: Decimal | null
    allowances: Decimal | null
    deductions: Decimal | null
    net_pay: Decimal | null
    generated_on: Date | null
    payslip_pdf: string | null
    pf: Decimal | null
    ptax: Decimal | null
    esic: Decimal | null
  }

  export type PayrollMaxAggregateOutputType = {
    id: number | null
    empid: string | null
    month: string | null
    year: number | null
    basic_salary: Decimal | null
    hra: Decimal | null
    bonus: Decimal | null
    da: Decimal | null
    allowances: Decimal | null
    deductions: Decimal | null
    net_pay: Decimal | null
    generated_on: Date | null
    payslip_pdf: string | null
    pf: Decimal | null
    ptax: Decimal | null
    esic: Decimal | null
  }

  export type PayrollCountAggregateOutputType = {
    id: number
    empid: number
    month: number
    year: number
    basic_salary: number
    hra: number
    bonus: number
    da: number
    allowances: number
    deductions: number
    net_pay: number
    generated_on: number
    payslip_pdf: number
    pf: number
    ptax: number
    esic: number
    _all: number
  }


  export type PayrollAvgAggregateInputType = {
    id?: true
    year?: true
    basic_salary?: true
    hra?: true
    bonus?: true
    da?: true
    allowances?: true
    deductions?: true
    net_pay?: true
    pf?: true
    ptax?: true
    esic?: true
  }

  export type PayrollSumAggregateInputType = {
    id?: true
    year?: true
    basic_salary?: true
    hra?: true
    bonus?: true
    da?: true
    allowances?: true
    deductions?: true
    net_pay?: true
    pf?: true
    ptax?: true
    esic?: true
  }

  export type PayrollMinAggregateInputType = {
    id?: true
    empid?: true
    month?: true
    year?: true
    basic_salary?: true
    hra?: true
    bonus?: true
    da?: true
    allowances?: true
    deductions?: true
    net_pay?: true
    generated_on?: true
    payslip_pdf?: true
    pf?: true
    ptax?: true
    esic?: true
  }

  export type PayrollMaxAggregateInputType = {
    id?: true
    empid?: true
    month?: true
    year?: true
    basic_salary?: true
    hra?: true
    bonus?: true
    da?: true
    allowances?: true
    deductions?: true
    net_pay?: true
    generated_on?: true
    payslip_pdf?: true
    pf?: true
    ptax?: true
    esic?: true
  }

  export type PayrollCountAggregateInputType = {
    id?: true
    empid?: true
    month?: true
    year?: true
    basic_salary?: true
    hra?: true
    bonus?: true
    da?: true
    allowances?: true
    deductions?: true
    net_pay?: true
    generated_on?: true
    payslip_pdf?: true
    pf?: true
    ptax?: true
    esic?: true
    _all?: true
  }

  export type PayrollAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which payroll to aggregate.
     */
    where?: payrollWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of payrolls to fetch.
     */
    orderBy?: payrollOrderByWithRelationInput | payrollOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: payrollWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` payrolls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` payrolls.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned payrolls
    **/
    _count?: true | PayrollCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PayrollAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PayrollSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PayrollMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PayrollMaxAggregateInputType
  }

  export type GetPayrollAggregateType<T extends PayrollAggregateArgs> = {
        [P in keyof T & keyof AggregatePayroll]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePayroll[P]>
      : GetScalarType<T[P], AggregatePayroll[P]>
  }




  export type payrollGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: payrollWhereInput
    orderBy?: payrollOrderByWithAggregationInput | payrollOrderByWithAggregationInput[]
    by: PayrollScalarFieldEnum[] | PayrollScalarFieldEnum
    having?: payrollScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PayrollCountAggregateInputType | true
    _avg?: PayrollAvgAggregateInputType
    _sum?: PayrollSumAggregateInputType
    _min?: PayrollMinAggregateInputType
    _max?: PayrollMaxAggregateInputType
  }

  export type PayrollGroupByOutputType = {
    id: number
    empid: string | null
    month: string | null
    year: number | null
    basic_salary: Decimal | null
    hra: Decimal | null
    bonus: Decimal | null
    da: Decimal | null
    allowances: Decimal | null
    deductions: Decimal | null
    net_pay: Decimal | null
    generated_on: Date | null
    payslip_pdf: string | null
    pf: Decimal | null
    ptax: Decimal | null
    esic: Decimal | null
    _count: PayrollCountAggregateOutputType | null
    _avg: PayrollAvgAggregateOutputType | null
    _sum: PayrollSumAggregateOutputType | null
    _min: PayrollMinAggregateOutputType | null
    _max: PayrollMaxAggregateOutputType | null
  }

  type GetPayrollGroupByPayload<T extends payrollGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PayrollGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PayrollGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PayrollGroupByOutputType[P]>
            : GetScalarType<T[P], PayrollGroupByOutputType[P]>
        }
      >
    >


  export type payrollSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    empid?: boolean
    month?: boolean
    year?: boolean
    basic_salary?: boolean
    hra?: boolean
    bonus?: boolean
    da?: boolean
    allowances?: boolean
    deductions?: boolean
    net_pay?: boolean
    generated_on?: boolean
    payslip_pdf?: boolean
    pf?: boolean
    ptax?: boolean
    esic?: boolean
    users?: boolean | payroll$usersArgs<ExtArgs>
  }, ExtArgs["result"]["payroll"]>

  export type payrollSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    empid?: boolean
    month?: boolean
    year?: boolean
    basic_salary?: boolean
    hra?: boolean
    bonus?: boolean
    da?: boolean
    allowances?: boolean
    deductions?: boolean
    net_pay?: boolean
    generated_on?: boolean
    payslip_pdf?: boolean
    pf?: boolean
    ptax?: boolean
    esic?: boolean
    users?: boolean | payroll$usersArgs<ExtArgs>
  }, ExtArgs["result"]["payroll"]>

  export type payrollSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    empid?: boolean
    month?: boolean
    year?: boolean
    basic_salary?: boolean
    hra?: boolean
    bonus?: boolean
    da?: boolean
    allowances?: boolean
    deductions?: boolean
    net_pay?: boolean
    generated_on?: boolean
    payslip_pdf?: boolean
    pf?: boolean
    ptax?: boolean
    esic?: boolean
    users?: boolean | payroll$usersArgs<ExtArgs>
  }, ExtArgs["result"]["payroll"]>

  export type payrollSelectScalar = {
    id?: boolean
    empid?: boolean
    month?: boolean
    year?: boolean
    basic_salary?: boolean
    hra?: boolean
    bonus?: boolean
    da?: boolean
    allowances?: boolean
    deductions?: boolean
    net_pay?: boolean
    generated_on?: boolean
    payslip_pdf?: boolean
    pf?: boolean
    ptax?: boolean
    esic?: boolean
  }

  export type payrollOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "empid" | "month" | "year" | "basic_salary" | "hra" | "bonus" | "da" | "allowances" | "deductions" | "net_pay" | "generated_on" | "payslip_pdf" | "pf" | "ptax" | "esic", ExtArgs["result"]["payroll"]>
  export type payrollInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | payroll$usersArgs<ExtArgs>
  }
  export type payrollIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | payroll$usersArgs<ExtArgs>
  }
  export type payrollIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | payroll$usersArgs<ExtArgs>
  }

  export type $payrollPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "payroll"
    objects: {
      users: Prisma.$usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      empid: string | null
      month: string | null
      year: number | null
      basic_salary: Prisma.Decimal | null
      hra: Prisma.Decimal | null
      bonus: Prisma.Decimal | null
      da: Prisma.Decimal | null
      allowances: Prisma.Decimal | null
      deductions: Prisma.Decimal | null
      net_pay: Prisma.Decimal | null
      generated_on: Date | null
      payslip_pdf: string | null
      pf: Prisma.Decimal | null
      ptax: Prisma.Decimal | null
      esic: Prisma.Decimal | null
    }, ExtArgs["result"]["payroll"]>
    composites: {}
  }

  type payrollGetPayload<S extends boolean | null | undefined | payrollDefaultArgs> = $Result.GetResult<Prisma.$payrollPayload, S>

  type payrollCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<payrollFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PayrollCountAggregateInputType | true
    }

  export interface payrollDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['payroll'], meta: { name: 'payroll' } }
    /**
     * Find zero or one Payroll that matches the filter.
     * @param {payrollFindUniqueArgs} args - Arguments to find a Payroll
     * @example
     * // Get one Payroll
     * const payroll = await prisma.payroll.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends payrollFindUniqueArgs>(args: SelectSubset<T, payrollFindUniqueArgs<ExtArgs>>): Prisma__payrollClient<$Result.GetResult<Prisma.$payrollPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Payroll that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {payrollFindUniqueOrThrowArgs} args - Arguments to find a Payroll
     * @example
     * // Get one Payroll
     * const payroll = await prisma.payroll.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends payrollFindUniqueOrThrowArgs>(args: SelectSubset<T, payrollFindUniqueOrThrowArgs<ExtArgs>>): Prisma__payrollClient<$Result.GetResult<Prisma.$payrollPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Payroll that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {payrollFindFirstArgs} args - Arguments to find a Payroll
     * @example
     * // Get one Payroll
     * const payroll = await prisma.payroll.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends payrollFindFirstArgs>(args?: SelectSubset<T, payrollFindFirstArgs<ExtArgs>>): Prisma__payrollClient<$Result.GetResult<Prisma.$payrollPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Payroll that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {payrollFindFirstOrThrowArgs} args - Arguments to find a Payroll
     * @example
     * // Get one Payroll
     * const payroll = await prisma.payroll.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends payrollFindFirstOrThrowArgs>(args?: SelectSubset<T, payrollFindFirstOrThrowArgs<ExtArgs>>): Prisma__payrollClient<$Result.GetResult<Prisma.$payrollPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Payrolls that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {payrollFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Payrolls
     * const payrolls = await prisma.payroll.findMany()
     * 
     * // Get first 10 Payrolls
     * const payrolls = await prisma.payroll.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const payrollWithIdOnly = await prisma.payroll.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends payrollFindManyArgs>(args?: SelectSubset<T, payrollFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$payrollPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Payroll.
     * @param {payrollCreateArgs} args - Arguments to create a Payroll.
     * @example
     * // Create one Payroll
     * const Payroll = await prisma.payroll.create({
     *   data: {
     *     // ... data to create a Payroll
     *   }
     * })
     * 
     */
    create<T extends payrollCreateArgs>(args: SelectSubset<T, payrollCreateArgs<ExtArgs>>): Prisma__payrollClient<$Result.GetResult<Prisma.$payrollPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Payrolls.
     * @param {payrollCreateManyArgs} args - Arguments to create many Payrolls.
     * @example
     * // Create many Payrolls
     * const payroll = await prisma.payroll.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends payrollCreateManyArgs>(args?: SelectSubset<T, payrollCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Payrolls and returns the data saved in the database.
     * @param {payrollCreateManyAndReturnArgs} args - Arguments to create many Payrolls.
     * @example
     * // Create many Payrolls
     * const payroll = await prisma.payroll.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Payrolls and only return the `id`
     * const payrollWithIdOnly = await prisma.payroll.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends payrollCreateManyAndReturnArgs>(args?: SelectSubset<T, payrollCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$payrollPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Payroll.
     * @param {payrollDeleteArgs} args - Arguments to delete one Payroll.
     * @example
     * // Delete one Payroll
     * const Payroll = await prisma.payroll.delete({
     *   where: {
     *     // ... filter to delete one Payroll
     *   }
     * })
     * 
     */
    delete<T extends payrollDeleteArgs>(args: SelectSubset<T, payrollDeleteArgs<ExtArgs>>): Prisma__payrollClient<$Result.GetResult<Prisma.$payrollPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Payroll.
     * @param {payrollUpdateArgs} args - Arguments to update one Payroll.
     * @example
     * // Update one Payroll
     * const payroll = await prisma.payroll.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends payrollUpdateArgs>(args: SelectSubset<T, payrollUpdateArgs<ExtArgs>>): Prisma__payrollClient<$Result.GetResult<Prisma.$payrollPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Payrolls.
     * @param {payrollDeleteManyArgs} args - Arguments to filter Payrolls to delete.
     * @example
     * // Delete a few Payrolls
     * const { count } = await prisma.payroll.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends payrollDeleteManyArgs>(args?: SelectSubset<T, payrollDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Payrolls.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {payrollUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Payrolls
     * const payroll = await prisma.payroll.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends payrollUpdateManyArgs>(args: SelectSubset<T, payrollUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Payrolls and returns the data updated in the database.
     * @param {payrollUpdateManyAndReturnArgs} args - Arguments to update many Payrolls.
     * @example
     * // Update many Payrolls
     * const payroll = await prisma.payroll.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Payrolls and only return the `id`
     * const payrollWithIdOnly = await prisma.payroll.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends payrollUpdateManyAndReturnArgs>(args: SelectSubset<T, payrollUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$payrollPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Payroll.
     * @param {payrollUpsertArgs} args - Arguments to update or create a Payroll.
     * @example
     * // Update or create a Payroll
     * const payroll = await prisma.payroll.upsert({
     *   create: {
     *     // ... data to create a Payroll
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Payroll we want to update
     *   }
     * })
     */
    upsert<T extends payrollUpsertArgs>(args: SelectSubset<T, payrollUpsertArgs<ExtArgs>>): Prisma__payrollClient<$Result.GetResult<Prisma.$payrollPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Payrolls.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {payrollCountArgs} args - Arguments to filter Payrolls to count.
     * @example
     * // Count the number of Payrolls
     * const count = await prisma.payroll.count({
     *   where: {
     *     // ... the filter for the Payrolls we want to count
     *   }
     * })
    **/
    count<T extends payrollCountArgs>(
      args?: Subset<T, payrollCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PayrollCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Payroll.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PayrollAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PayrollAggregateArgs>(args: Subset<T, PayrollAggregateArgs>): Prisma.PrismaPromise<GetPayrollAggregateType<T>>

    /**
     * Group by Payroll.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {payrollGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends payrollGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: payrollGroupByArgs['orderBy'] }
        : { orderBy?: payrollGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, payrollGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPayrollGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the payroll model
   */
  readonly fields: payrollFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for payroll.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__payrollClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends payroll$usersArgs<ExtArgs> = {}>(args?: Subset<T, payroll$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the payroll model
   */
  interface payrollFieldRefs {
    readonly id: FieldRef<"payroll", 'Int'>
    readonly empid: FieldRef<"payroll", 'String'>
    readonly month: FieldRef<"payroll", 'String'>
    readonly year: FieldRef<"payroll", 'Int'>
    readonly basic_salary: FieldRef<"payroll", 'Decimal'>
    readonly hra: FieldRef<"payroll", 'Decimal'>
    readonly bonus: FieldRef<"payroll", 'Decimal'>
    readonly da: FieldRef<"payroll", 'Decimal'>
    readonly allowances: FieldRef<"payroll", 'Decimal'>
    readonly deductions: FieldRef<"payroll", 'Decimal'>
    readonly net_pay: FieldRef<"payroll", 'Decimal'>
    readonly generated_on: FieldRef<"payroll", 'DateTime'>
    readonly payslip_pdf: FieldRef<"payroll", 'String'>
    readonly pf: FieldRef<"payroll", 'Decimal'>
    readonly ptax: FieldRef<"payroll", 'Decimal'>
    readonly esic: FieldRef<"payroll", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * payroll findUnique
   */
  export type payrollFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payroll
     */
    select?: payrollSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payroll
     */
    omit?: payrollOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: payrollInclude<ExtArgs> | null
    /**
     * Filter, which payroll to fetch.
     */
    where: payrollWhereUniqueInput
  }

  /**
   * payroll findUniqueOrThrow
   */
  export type payrollFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payroll
     */
    select?: payrollSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payroll
     */
    omit?: payrollOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: payrollInclude<ExtArgs> | null
    /**
     * Filter, which payroll to fetch.
     */
    where: payrollWhereUniqueInput
  }

  /**
   * payroll findFirst
   */
  export type payrollFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payroll
     */
    select?: payrollSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payroll
     */
    omit?: payrollOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: payrollInclude<ExtArgs> | null
    /**
     * Filter, which payroll to fetch.
     */
    where?: payrollWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of payrolls to fetch.
     */
    orderBy?: payrollOrderByWithRelationInput | payrollOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for payrolls.
     */
    cursor?: payrollWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` payrolls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` payrolls.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of payrolls.
     */
    distinct?: PayrollScalarFieldEnum | PayrollScalarFieldEnum[]
  }

  /**
   * payroll findFirstOrThrow
   */
  export type payrollFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payroll
     */
    select?: payrollSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payroll
     */
    omit?: payrollOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: payrollInclude<ExtArgs> | null
    /**
     * Filter, which payroll to fetch.
     */
    where?: payrollWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of payrolls to fetch.
     */
    orderBy?: payrollOrderByWithRelationInput | payrollOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for payrolls.
     */
    cursor?: payrollWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` payrolls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` payrolls.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of payrolls.
     */
    distinct?: PayrollScalarFieldEnum | PayrollScalarFieldEnum[]
  }

  /**
   * payroll findMany
   */
  export type payrollFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payroll
     */
    select?: payrollSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payroll
     */
    omit?: payrollOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: payrollInclude<ExtArgs> | null
    /**
     * Filter, which payrolls to fetch.
     */
    where?: payrollWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of payrolls to fetch.
     */
    orderBy?: payrollOrderByWithRelationInput | payrollOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing payrolls.
     */
    cursor?: payrollWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` payrolls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` payrolls.
     */
    skip?: number
    distinct?: PayrollScalarFieldEnum | PayrollScalarFieldEnum[]
  }

  /**
   * payroll create
   */
  export type payrollCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payroll
     */
    select?: payrollSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payroll
     */
    omit?: payrollOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: payrollInclude<ExtArgs> | null
    /**
     * The data needed to create a payroll.
     */
    data?: XOR<payrollCreateInput, payrollUncheckedCreateInput>
  }

  /**
   * payroll createMany
   */
  export type payrollCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many payrolls.
     */
    data: payrollCreateManyInput | payrollCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * payroll createManyAndReturn
   */
  export type payrollCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payroll
     */
    select?: payrollSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the payroll
     */
    omit?: payrollOmit<ExtArgs> | null
    /**
     * The data used to create many payrolls.
     */
    data: payrollCreateManyInput | payrollCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: payrollIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * payroll update
   */
  export type payrollUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payroll
     */
    select?: payrollSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payroll
     */
    omit?: payrollOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: payrollInclude<ExtArgs> | null
    /**
     * The data needed to update a payroll.
     */
    data: XOR<payrollUpdateInput, payrollUncheckedUpdateInput>
    /**
     * Choose, which payroll to update.
     */
    where: payrollWhereUniqueInput
  }

  /**
   * payroll updateMany
   */
  export type payrollUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update payrolls.
     */
    data: XOR<payrollUpdateManyMutationInput, payrollUncheckedUpdateManyInput>
    /**
     * Filter which payrolls to update
     */
    where?: payrollWhereInput
    /**
     * Limit how many payrolls to update.
     */
    limit?: number
  }

  /**
   * payroll updateManyAndReturn
   */
  export type payrollUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payroll
     */
    select?: payrollSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the payroll
     */
    omit?: payrollOmit<ExtArgs> | null
    /**
     * The data used to update payrolls.
     */
    data: XOR<payrollUpdateManyMutationInput, payrollUncheckedUpdateManyInput>
    /**
     * Filter which payrolls to update
     */
    where?: payrollWhereInput
    /**
     * Limit how many payrolls to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: payrollIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * payroll upsert
   */
  export type payrollUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payroll
     */
    select?: payrollSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payroll
     */
    omit?: payrollOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: payrollInclude<ExtArgs> | null
    /**
     * The filter to search for the payroll to update in case it exists.
     */
    where: payrollWhereUniqueInput
    /**
     * In case the payroll found by the `where` argument doesn't exist, create a new payroll with this data.
     */
    create: XOR<payrollCreateInput, payrollUncheckedCreateInput>
    /**
     * In case the payroll was found with the provided `where` argument, update it with this data.
     */
    update: XOR<payrollUpdateInput, payrollUncheckedUpdateInput>
  }

  /**
   * payroll delete
   */
  export type payrollDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payroll
     */
    select?: payrollSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payroll
     */
    omit?: payrollOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: payrollInclude<ExtArgs> | null
    /**
     * Filter which payroll to delete.
     */
    where: payrollWhereUniqueInput
  }

  /**
   * payroll deleteMany
   */
  export type payrollDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which payrolls to delete
     */
    where?: payrollWhereInput
    /**
     * Limit how many payrolls to delete.
     */
    limit?: number
  }

  /**
   * payroll.users
   */
  export type payroll$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * payroll without action
   */
  export type payrollDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payroll
     */
    select?: payrollSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payroll
     */
    omit?: payrollOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: payrollInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const AddressesScalarFieldEnum: {
    id: 'id',
    employee_id: 'employee_id',
    address_line1: 'address_line1',
    address_line2: 'address_line2',
    city: 'city',
    state: 'state',
    country: 'country',
    pincode: 'pincode'
  };

  export type AddressesScalarFieldEnum = (typeof AddressesScalarFieldEnum)[keyof typeof AddressesScalarFieldEnum]


  export const AttendanceScalarFieldEnum: {
    id: 'id',
    empid: 'empid',
    check_in: 'check_in',
    check_out: 'check_out',
    total_hours: 'total_hours',
    date: 'date',
    created_at: 'created_at',
    attendance_status: 'attendance_status'
  };

  export type AttendanceScalarFieldEnum = (typeof AttendanceScalarFieldEnum)[keyof typeof AttendanceScalarFieldEnum]


  export const Audit_logsScalarFieldEnum: {
    id: 'id',
    empid: 'empid',
    performed_by: 'performed_by',
    action: 'action',
    timestamp: 'timestamp'
  };

  export type Audit_logsScalarFieldEnum = (typeof Audit_logsScalarFieldEnum)[keyof typeof Audit_logsScalarFieldEnum]


  export const Bank_detailsScalarFieldEnum: {
    id: 'id',
    employee_id: 'employee_id',
    account_holder_name: 'account_holder_name',
    bank_name: 'bank_name',
    branch_name: 'branch_name',
    account_number: 'account_number',
    ifsc_code: 'ifsc_code',
    checkbook_document: 'checkbook_document'
  };

  export type Bank_detailsScalarFieldEnum = (typeof Bank_detailsScalarFieldEnum)[keyof typeof Bank_detailsScalarFieldEnum]


  export const CandidatesScalarFieldEnum: {
    id: 'id',
    candidate_id: 'candidate_id',
    name: 'name',
    email: 'email',
    contact_number: 'contact_number',
    interview_date: 'interview_date',
    resume: 'resume',
    form_link: 'form_link',
    status: 'status',
    created_at: 'created_at',
    form_token: 'form_token',
    interview_mail_status: 'interview_mail_status',
    form_status: 'form_status',
    verification: 'verification'
  };

  export type CandidatesScalarFieldEnum = (typeof CandidatesScalarFieldEnum)[keyof typeof CandidatesScalarFieldEnum]


  export const Compliance_documentsScalarFieldEnum: {
    id: 'id',
    empid: 'empid',
    doc_type: 'doc_type',
    file_path: 'file_path',
    uploaded_at: 'uploaded_at',
    expires_on: 'expires_on'
  };

  export type Compliance_documentsScalarFieldEnum = (typeof Compliance_documentsScalarFieldEnum)[keyof typeof Compliance_documentsScalarFieldEnum]


  export const Compliance_statusScalarFieldEnum: {
    empid: 'empid',
    overall_status: 'overall_status',
    last_updated: 'last_updated'
  };

  export type Compliance_statusScalarFieldEnum = (typeof Compliance_statusScalarFieldEnum)[keyof typeof Compliance_statusScalarFieldEnum]


  export const EmployeesScalarFieldEnum: {
    empid: 'empid',
    candidate_id: 'candidate_id',
    name: 'name',
    email: 'email',
    contact_no: 'contact_no',
    password: 'password',
    gender: 'gender',
    dob: 'dob',
    aadhar_card: 'aadhar_card',
    pan_card: 'pan_card',
    education_certificates: 'education_certificates',
    resume: 'resume',
    experience_certificate: 'experience_certificate',
    profile_photo: 'profile_photo',
    created_at: 'created_at',
    experience_years: 'experience_years',
    experience_months: 'experience_months',
    employee_type: 'employee_type',
    aadhar_number: 'aadhar_number',
    pan_number: 'pan_number'
  };

  export type EmployeesScalarFieldEnum = (typeof EmployeesScalarFieldEnum)[keyof typeof EmployeesScalarFieldEnum]


  export const Main_employeeScalarFieldEnum: {
    empid: 'empid',
    candidate_id: 'candidate_id',
    email: 'email',
    password: 'password',
    role: 'role',
    name: 'name',
    contact: 'contact',
    position: 'position',
    doj: 'doj',
    gender: 'gender',
    dob: 'dob',
    address: 'address',
    employee_type: 'employee_type',
    experience: 'experience',
    profile_photo: 'profile_photo',
    aadhar_card: 'aadhar_card',
    pan_card: 'pan_card',
    education_certificates: 'education_certificates',
    resume: 'resume',
    experience_certificate: 'experience_certificate',
    bank_details: 'bank_details',
    status: 'status',
    created_at: 'created_at'
  };

  export type Main_employeeScalarFieldEnum = (typeof Main_employeeScalarFieldEnum)[keyof typeof Main_employeeScalarFieldEnum]


  export const Leave_typesScalarFieldEnum: {
    id: 'id',
    type_name: 'type_name',
    max_days: 'max_days',
    paid: 'paid'
  };

  export type Leave_typesScalarFieldEnum = (typeof Leave_typesScalarFieldEnum)[keyof typeof Leave_typesScalarFieldEnum]


  export const Leave_balancesScalarFieldEnum: {
    id: 'id',
    empid: 'empid',
    type_id: 'type_id',
    total: 'total',
    used: 'used',
    remaining: 'remaining'
  };

  export type Leave_balancesScalarFieldEnum = (typeof Leave_balancesScalarFieldEnum)[keyof typeof Leave_balancesScalarFieldEnum]


  export const Leave_requestsScalarFieldEnum: {
    id: 'id',
    empid: 'empid',
    from_date: 'from_date',
    to_date: 'to_date',
    reason: 'reason',
    status: 'status',
    applied_at: 'applied_at',
    attachment: 'attachment',
    leave_type: 'leave_type',
    name: 'name'
  };

  export type Leave_requestsScalarFieldEnum = (typeof Leave_requestsScalarFieldEnum)[keyof typeof Leave_requestsScalarFieldEnum]


  export const UsersScalarFieldEnum: {
    id: 'id',
    empid: 'empid',
    name: 'name',
    email: 'email',
    contact_number: 'contact_number',
    password: 'password',
    position: 'position',
    date_of_joining: 'date_of_joining',
    status: 'status',
    experience: 'experience',
    profile_photo: 'profile_photo',
    role: 'role',
    created_at: 'created_at',
    verified: 'verified'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const PayrollScalarFieldEnum: {
    id: 'id',
    empid: 'empid',
    month: 'month',
    year: 'year',
    basic_salary: 'basic_salary',
    hra: 'hra',
    bonus: 'bonus',
    da: 'da',
    allowances: 'allowances',
    deductions: 'deductions',
    net_pay: 'net_pay',
    generated_on: 'generated_on',
    payslip_pdf: 'payslip_pdf',
    pf: 'pf',
    ptax: 'ptax',
    esic: 'esic'
  };

  export type PayrollScalarFieldEnum = (typeof PayrollScalarFieldEnum)[keyof typeof PayrollScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'attendance_attendance_status'
   */
  export type Enumattendance_attendance_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'attendance_attendance_status'>
    


  /**
   * Reference to a field of type 'attendance_attendance_status[]'
   */
  export type ListEnumattendance_attendance_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'attendance_attendance_status[]'>
    


  /**
   * Reference to a field of type 'candidates_status'
   */
  export type Enumcandidates_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'candidates_status'>
    


  /**
   * Reference to a field of type 'candidates_status[]'
   */
  export type ListEnumcandidates_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'candidates_status[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'compliance_status_overall_status'
   */
  export type Enumcompliance_status_overall_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'compliance_status_overall_status'>
    


  /**
   * Reference to a field of type 'compliance_status_overall_status[]'
   */
  export type ListEnumcompliance_status_overall_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'compliance_status_overall_status[]'>
    


  /**
   * Reference to a field of type 'employees_employee_type'
   */
  export type Enumemployees_employee_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'employees_employee_type'>
    


  /**
   * Reference to a field of type 'employees_employee_type[]'
   */
  export type ListEnumemployees_employee_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'employees_employee_type[]'>
    


  /**
   * Reference to a field of type 'leave_types_type_name'
   */
  export type Enumleave_types_type_nameFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'leave_types_type_name'>
    


  /**
   * Reference to a field of type 'leave_types_type_name[]'
   */
  export type ListEnumleave_types_type_nameFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'leave_types_type_name[]'>
    


  /**
   * Reference to a field of type 'leave_requests_status'
   */
  export type Enumleave_requests_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'leave_requests_status'>
    


  /**
   * Reference to a field of type 'leave_requests_status[]'
   */
  export type ListEnumleave_requests_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'leave_requests_status[]'>
    


  /**
   * Reference to a field of type 'users_role'
   */
  export type Enumusers_roleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'users_role'>
    


  /**
   * Reference to a field of type 'users_role[]'
   */
  export type ListEnumusers_roleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'users_role[]'>
    


  /**
   * Reference to a field of type 'users_verified'
   */
  export type Enumusers_verifiedFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'users_verified'>
    


  /**
   * Reference to a field of type 'users_verified[]'
   */
  export type ListEnumusers_verifiedFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'users_verified[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type addressesWhereInput = {
    AND?: addressesWhereInput | addressesWhereInput[]
    OR?: addressesWhereInput[]
    NOT?: addressesWhereInput | addressesWhereInput[]
    id?: IntFilter<"addresses"> | number
    employee_id?: IntFilter<"addresses"> | number
    address_line1?: StringFilter<"addresses"> | string
    address_line2?: StringNullableFilter<"addresses"> | string | null
    city?: StringFilter<"addresses"> | string
    state?: StringFilter<"addresses"> | string
    country?: StringFilter<"addresses"> | string
    pincode?: StringFilter<"addresses"> | string
    employees?: XOR<EmployeesScalarRelationFilter, employeesWhereInput>
  }

  export type addressesOrderByWithRelationInput = {
    id?: SortOrder
    employee_id?: SortOrder
    address_line1?: SortOrder
    address_line2?: SortOrderInput | SortOrder
    city?: SortOrder
    state?: SortOrder
    country?: SortOrder
    pincode?: SortOrder
    employees?: employeesOrderByWithRelationInput
  }

  export type addressesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: addressesWhereInput | addressesWhereInput[]
    OR?: addressesWhereInput[]
    NOT?: addressesWhereInput | addressesWhereInput[]
    employee_id?: IntFilter<"addresses"> | number
    address_line1?: StringFilter<"addresses"> | string
    address_line2?: StringNullableFilter<"addresses"> | string | null
    city?: StringFilter<"addresses"> | string
    state?: StringFilter<"addresses"> | string
    country?: StringFilter<"addresses"> | string
    pincode?: StringFilter<"addresses"> | string
    employees?: XOR<EmployeesScalarRelationFilter, employeesWhereInput>
  }, "id">

  export type addressesOrderByWithAggregationInput = {
    id?: SortOrder
    employee_id?: SortOrder
    address_line1?: SortOrder
    address_line2?: SortOrderInput | SortOrder
    city?: SortOrder
    state?: SortOrder
    country?: SortOrder
    pincode?: SortOrder
    _count?: addressesCountOrderByAggregateInput
    _avg?: addressesAvgOrderByAggregateInput
    _max?: addressesMaxOrderByAggregateInput
    _min?: addressesMinOrderByAggregateInput
    _sum?: addressesSumOrderByAggregateInput
  }

  export type addressesScalarWhereWithAggregatesInput = {
    AND?: addressesScalarWhereWithAggregatesInput | addressesScalarWhereWithAggregatesInput[]
    OR?: addressesScalarWhereWithAggregatesInput[]
    NOT?: addressesScalarWhereWithAggregatesInput | addressesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"addresses"> | number
    employee_id?: IntWithAggregatesFilter<"addresses"> | number
    address_line1?: StringWithAggregatesFilter<"addresses"> | string
    address_line2?: StringNullableWithAggregatesFilter<"addresses"> | string | null
    city?: StringWithAggregatesFilter<"addresses"> | string
    state?: StringWithAggregatesFilter<"addresses"> | string
    country?: StringWithAggregatesFilter<"addresses"> | string
    pincode?: StringWithAggregatesFilter<"addresses"> | string
  }

  export type attendanceWhereInput = {
    AND?: attendanceWhereInput | attendanceWhereInput[]
    OR?: attendanceWhereInput[]
    NOT?: attendanceWhereInput | attendanceWhereInput[]
    id?: IntFilter<"attendance"> | number
    empid?: StringFilter<"attendance"> | string
    check_in?: DateTimeNullableFilter<"attendance"> | Date | string | null
    check_out?: DateTimeNullableFilter<"attendance"> | Date | string | null
    total_hours?: DecimalNullableFilter<"attendance"> | Decimal | DecimalJsLike | number | string | null
    date?: DateTimeNullableFilter<"attendance"> | Date | string | null
    created_at?: DateTimeNullableFilter<"attendance"> | Date | string | null
    attendance_status?: Enumattendance_attendance_statusNullableFilter<"attendance"> | $Enums.attendance_attendance_status | null
  }

  export type attendanceOrderByWithRelationInput = {
    id?: SortOrder
    empid?: SortOrder
    check_in?: SortOrderInput | SortOrder
    check_out?: SortOrderInput | SortOrder
    total_hours?: SortOrderInput | SortOrder
    date?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    attendance_status?: SortOrderInput | SortOrder
  }

  export type attendanceWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: attendanceWhereInput | attendanceWhereInput[]
    OR?: attendanceWhereInput[]
    NOT?: attendanceWhereInput | attendanceWhereInput[]
    empid?: StringFilter<"attendance"> | string
    check_in?: DateTimeNullableFilter<"attendance"> | Date | string | null
    check_out?: DateTimeNullableFilter<"attendance"> | Date | string | null
    total_hours?: DecimalNullableFilter<"attendance"> | Decimal | DecimalJsLike | number | string | null
    date?: DateTimeNullableFilter<"attendance"> | Date | string | null
    created_at?: DateTimeNullableFilter<"attendance"> | Date | string | null
    attendance_status?: Enumattendance_attendance_statusNullableFilter<"attendance"> | $Enums.attendance_attendance_status | null
  }, "id">

  export type attendanceOrderByWithAggregationInput = {
    id?: SortOrder
    empid?: SortOrder
    check_in?: SortOrderInput | SortOrder
    check_out?: SortOrderInput | SortOrder
    total_hours?: SortOrderInput | SortOrder
    date?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    attendance_status?: SortOrderInput | SortOrder
    _count?: attendanceCountOrderByAggregateInput
    _avg?: attendanceAvgOrderByAggregateInput
    _max?: attendanceMaxOrderByAggregateInput
    _min?: attendanceMinOrderByAggregateInput
    _sum?: attendanceSumOrderByAggregateInput
  }

  export type attendanceScalarWhereWithAggregatesInput = {
    AND?: attendanceScalarWhereWithAggregatesInput | attendanceScalarWhereWithAggregatesInput[]
    OR?: attendanceScalarWhereWithAggregatesInput[]
    NOT?: attendanceScalarWhereWithAggregatesInput | attendanceScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"attendance"> | number
    empid?: StringWithAggregatesFilter<"attendance"> | string
    check_in?: DateTimeNullableWithAggregatesFilter<"attendance"> | Date | string | null
    check_out?: DateTimeNullableWithAggregatesFilter<"attendance"> | Date | string | null
    total_hours?: DecimalNullableWithAggregatesFilter<"attendance"> | Decimal | DecimalJsLike | number | string | null
    date?: DateTimeNullableWithAggregatesFilter<"attendance"> | Date | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"attendance"> | Date | string | null
    attendance_status?: Enumattendance_attendance_statusNullableWithAggregatesFilter<"attendance"> | $Enums.attendance_attendance_status | null
  }

  export type audit_logsWhereInput = {
    AND?: audit_logsWhereInput | audit_logsWhereInput[]
    OR?: audit_logsWhereInput[]
    NOT?: audit_logsWhereInput | audit_logsWhereInput[]
    id?: IntFilter<"audit_logs"> | number
    empid?: IntNullableFilter<"audit_logs"> | number | null
    performed_by?: IntNullableFilter<"audit_logs"> | number | null
    action?: StringNullableFilter<"audit_logs"> | string | null
    timestamp?: DateTimeNullableFilter<"audit_logs"> | Date | string | null
    employees_audit_logs_empidToemployees?: XOR<EmployeesNullableScalarRelationFilter, employeesWhereInput> | null
    employees_audit_logs_performed_byToemployees?: XOR<EmployeesNullableScalarRelationFilter, employeesWhereInput> | null
  }

  export type audit_logsOrderByWithRelationInput = {
    id?: SortOrder
    empid?: SortOrderInput | SortOrder
    performed_by?: SortOrderInput | SortOrder
    action?: SortOrderInput | SortOrder
    timestamp?: SortOrderInput | SortOrder
    employees_audit_logs_empidToemployees?: employeesOrderByWithRelationInput
    employees_audit_logs_performed_byToemployees?: employeesOrderByWithRelationInput
  }

  export type audit_logsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: audit_logsWhereInput | audit_logsWhereInput[]
    OR?: audit_logsWhereInput[]
    NOT?: audit_logsWhereInput | audit_logsWhereInput[]
    empid?: IntNullableFilter<"audit_logs"> | number | null
    performed_by?: IntNullableFilter<"audit_logs"> | number | null
    action?: StringNullableFilter<"audit_logs"> | string | null
    timestamp?: DateTimeNullableFilter<"audit_logs"> | Date | string | null
    employees_audit_logs_empidToemployees?: XOR<EmployeesNullableScalarRelationFilter, employeesWhereInput> | null
    employees_audit_logs_performed_byToemployees?: XOR<EmployeesNullableScalarRelationFilter, employeesWhereInput> | null
  }, "id">

  export type audit_logsOrderByWithAggregationInput = {
    id?: SortOrder
    empid?: SortOrderInput | SortOrder
    performed_by?: SortOrderInput | SortOrder
    action?: SortOrderInput | SortOrder
    timestamp?: SortOrderInput | SortOrder
    _count?: audit_logsCountOrderByAggregateInput
    _avg?: audit_logsAvgOrderByAggregateInput
    _max?: audit_logsMaxOrderByAggregateInput
    _min?: audit_logsMinOrderByAggregateInput
    _sum?: audit_logsSumOrderByAggregateInput
  }

  export type audit_logsScalarWhereWithAggregatesInput = {
    AND?: audit_logsScalarWhereWithAggregatesInput | audit_logsScalarWhereWithAggregatesInput[]
    OR?: audit_logsScalarWhereWithAggregatesInput[]
    NOT?: audit_logsScalarWhereWithAggregatesInput | audit_logsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"audit_logs"> | number
    empid?: IntNullableWithAggregatesFilter<"audit_logs"> | number | null
    performed_by?: IntNullableWithAggregatesFilter<"audit_logs"> | number | null
    action?: StringNullableWithAggregatesFilter<"audit_logs"> | string | null
    timestamp?: DateTimeNullableWithAggregatesFilter<"audit_logs"> | Date | string | null
  }

  export type bank_detailsWhereInput = {
    AND?: bank_detailsWhereInput | bank_detailsWhereInput[]
    OR?: bank_detailsWhereInput[]
    NOT?: bank_detailsWhereInput | bank_detailsWhereInput[]
    id?: IntFilter<"bank_details"> | number
    employee_id?: IntFilter<"bank_details"> | number
    account_holder_name?: StringFilter<"bank_details"> | string
    bank_name?: StringFilter<"bank_details"> | string
    branch_name?: StringNullableFilter<"bank_details"> | string | null
    account_number?: StringFilter<"bank_details"> | string
    ifsc_code?: StringFilter<"bank_details"> | string
    checkbook_document?: StringNullableFilter<"bank_details"> | string | null
    employees?: XOR<EmployeesScalarRelationFilter, employeesWhereInput>
  }

  export type bank_detailsOrderByWithRelationInput = {
    id?: SortOrder
    employee_id?: SortOrder
    account_holder_name?: SortOrder
    bank_name?: SortOrder
    branch_name?: SortOrderInput | SortOrder
    account_number?: SortOrder
    ifsc_code?: SortOrder
    checkbook_document?: SortOrderInput | SortOrder
    employees?: employeesOrderByWithRelationInput
  }

  export type bank_detailsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: bank_detailsWhereInput | bank_detailsWhereInput[]
    OR?: bank_detailsWhereInput[]
    NOT?: bank_detailsWhereInput | bank_detailsWhereInput[]
    employee_id?: IntFilter<"bank_details"> | number
    account_holder_name?: StringFilter<"bank_details"> | string
    bank_name?: StringFilter<"bank_details"> | string
    branch_name?: StringNullableFilter<"bank_details"> | string | null
    account_number?: StringFilter<"bank_details"> | string
    ifsc_code?: StringFilter<"bank_details"> | string
    checkbook_document?: StringNullableFilter<"bank_details"> | string | null
    employees?: XOR<EmployeesScalarRelationFilter, employeesWhereInput>
  }, "id">

  export type bank_detailsOrderByWithAggregationInput = {
    id?: SortOrder
    employee_id?: SortOrder
    account_holder_name?: SortOrder
    bank_name?: SortOrder
    branch_name?: SortOrderInput | SortOrder
    account_number?: SortOrder
    ifsc_code?: SortOrder
    checkbook_document?: SortOrderInput | SortOrder
    _count?: bank_detailsCountOrderByAggregateInput
    _avg?: bank_detailsAvgOrderByAggregateInput
    _max?: bank_detailsMaxOrderByAggregateInput
    _min?: bank_detailsMinOrderByAggregateInput
    _sum?: bank_detailsSumOrderByAggregateInput
  }

  export type bank_detailsScalarWhereWithAggregatesInput = {
    AND?: bank_detailsScalarWhereWithAggregatesInput | bank_detailsScalarWhereWithAggregatesInput[]
    OR?: bank_detailsScalarWhereWithAggregatesInput[]
    NOT?: bank_detailsScalarWhereWithAggregatesInput | bank_detailsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"bank_details"> | number
    employee_id?: IntWithAggregatesFilter<"bank_details"> | number
    account_holder_name?: StringWithAggregatesFilter<"bank_details"> | string
    bank_name?: StringWithAggregatesFilter<"bank_details"> | string
    branch_name?: StringNullableWithAggregatesFilter<"bank_details"> | string | null
    account_number?: StringWithAggregatesFilter<"bank_details"> | string
    ifsc_code?: StringWithAggregatesFilter<"bank_details"> | string
    checkbook_document?: StringNullableWithAggregatesFilter<"bank_details"> | string | null
  }

  export type candidatesWhereInput = {
    AND?: candidatesWhereInput | candidatesWhereInput[]
    OR?: candidatesWhereInput[]
    NOT?: candidatesWhereInput | candidatesWhereInput[]
    id?: IntFilter<"candidates"> | number
    candidate_id?: StringNullableFilter<"candidates"> | string | null
    name?: StringFilter<"candidates"> | string
    email?: StringFilter<"candidates"> | string
    contact_number?: StringNullableFilter<"candidates"> | string | null
    interview_date?: DateTimeNullableFilter<"candidates"> | Date | string | null
    resume?: StringNullableFilter<"candidates"> | string | null
    form_link?: StringNullableFilter<"candidates"> | string | null
    status?: Enumcandidates_statusNullableFilter<"candidates"> | $Enums.candidates_status | null
    created_at?: DateTimeNullableFilter<"candidates"> | Date | string | null
    form_token?: StringNullableFilter<"candidates"> | string | null
    interview_mail_status?: StringNullableFilter<"candidates"> | string | null
    form_status?: StringNullableFilter<"candidates"> | string | null
    verification?: BoolNullableFilter<"candidates"> | boolean | null
  }

  export type candidatesOrderByWithRelationInput = {
    id?: SortOrder
    candidate_id?: SortOrderInput | SortOrder
    name?: SortOrder
    email?: SortOrder
    contact_number?: SortOrderInput | SortOrder
    interview_date?: SortOrderInput | SortOrder
    resume?: SortOrderInput | SortOrder
    form_link?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    form_token?: SortOrderInput | SortOrder
    interview_mail_status?: SortOrderInput | SortOrder
    form_status?: SortOrderInput | SortOrder
    verification?: SortOrderInput | SortOrder
  }

  export type candidatesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    candidate_id?: string
    AND?: candidatesWhereInput | candidatesWhereInput[]
    OR?: candidatesWhereInput[]
    NOT?: candidatesWhereInput | candidatesWhereInput[]
    name?: StringFilter<"candidates"> | string
    email?: StringFilter<"candidates"> | string
    contact_number?: StringNullableFilter<"candidates"> | string | null
    interview_date?: DateTimeNullableFilter<"candidates"> | Date | string | null
    resume?: StringNullableFilter<"candidates"> | string | null
    form_link?: StringNullableFilter<"candidates"> | string | null
    status?: Enumcandidates_statusNullableFilter<"candidates"> | $Enums.candidates_status | null
    created_at?: DateTimeNullableFilter<"candidates"> | Date | string | null
    form_token?: StringNullableFilter<"candidates"> | string | null
    interview_mail_status?: StringNullableFilter<"candidates"> | string | null
    form_status?: StringNullableFilter<"candidates"> | string | null
    verification?: BoolNullableFilter<"candidates"> | boolean | null
  }, "id" | "candidate_id">

  export type candidatesOrderByWithAggregationInput = {
    id?: SortOrder
    candidate_id?: SortOrderInput | SortOrder
    name?: SortOrder
    email?: SortOrder
    contact_number?: SortOrderInput | SortOrder
    interview_date?: SortOrderInput | SortOrder
    resume?: SortOrderInput | SortOrder
    form_link?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    form_token?: SortOrderInput | SortOrder
    interview_mail_status?: SortOrderInput | SortOrder
    form_status?: SortOrderInput | SortOrder
    verification?: SortOrderInput | SortOrder
    _count?: candidatesCountOrderByAggregateInput
    _avg?: candidatesAvgOrderByAggregateInput
    _max?: candidatesMaxOrderByAggregateInput
    _min?: candidatesMinOrderByAggregateInput
    _sum?: candidatesSumOrderByAggregateInput
  }

  export type candidatesScalarWhereWithAggregatesInput = {
    AND?: candidatesScalarWhereWithAggregatesInput | candidatesScalarWhereWithAggregatesInput[]
    OR?: candidatesScalarWhereWithAggregatesInput[]
    NOT?: candidatesScalarWhereWithAggregatesInput | candidatesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"candidates"> | number
    candidate_id?: StringNullableWithAggregatesFilter<"candidates"> | string | null
    name?: StringWithAggregatesFilter<"candidates"> | string
    email?: StringWithAggregatesFilter<"candidates"> | string
    contact_number?: StringNullableWithAggregatesFilter<"candidates"> | string | null
    interview_date?: DateTimeNullableWithAggregatesFilter<"candidates"> | Date | string | null
    resume?: StringNullableWithAggregatesFilter<"candidates"> | string | null
    form_link?: StringNullableWithAggregatesFilter<"candidates"> | string | null
    status?: Enumcandidates_statusNullableWithAggregatesFilter<"candidates"> | $Enums.candidates_status | null
    created_at?: DateTimeNullableWithAggregatesFilter<"candidates"> | Date | string | null
    form_token?: StringNullableWithAggregatesFilter<"candidates"> | string | null
    interview_mail_status?: StringNullableWithAggregatesFilter<"candidates"> | string | null
    form_status?: StringNullableWithAggregatesFilter<"candidates"> | string | null
    verification?: BoolNullableWithAggregatesFilter<"candidates"> | boolean | null
  }

  export type compliance_documentsWhereInput = {
    AND?: compliance_documentsWhereInput | compliance_documentsWhereInput[]
    OR?: compliance_documentsWhereInput[]
    NOT?: compliance_documentsWhereInput | compliance_documentsWhereInput[]
    id?: IntFilter<"compliance_documents"> | number
    empid?: IntNullableFilter<"compliance_documents"> | number | null
    doc_type?: StringNullableFilter<"compliance_documents"> | string | null
    file_path?: StringNullableFilter<"compliance_documents"> | string | null
    uploaded_at?: DateTimeNullableFilter<"compliance_documents"> | Date | string | null
    expires_on?: DateTimeNullableFilter<"compliance_documents"> | Date | string | null
    employees?: XOR<EmployeesNullableScalarRelationFilter, employeesWhereInput> | null
  }

  export type compliance_documentsOrderByWithRelationInput = {
    id?: SortOrder
    empid?: SortOrderInput | SortOrder
    doc_type?: SortOrderInput | SortOrder
    file_path?: SortOrderInput | SortOrder
    uploaded_at?: SortOrderInput | SortOrder
    expires_on?: SortOrderInput | SortOrder
    employees?: employeesOrderByWithRelationInput
  }

  export type compliance_documentsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: compliance_documentsWhereInput | compliance_documentsWhereInput[]
    OR?: compliance_documentsWhereInput[]
    NOT?: compliance_documentsWhereInput | compliance_documentsWhereInput[]
    empid?: IntNullableFilter<"compliance_documents"> | number | null
    doc_type?: StringNullableFilter<"compliance_documents"> | string | null
    file_path?: StringNullableFilter<"compliance_documents"> | string | null
    uploaded_at?: DateTimeNullableFilter<"compliance_documents"> | Date | string | null
    expires_on?: DateTimeNullableFilter<"compliance_documents"> | Date | string | null
    employees?: XOR<EmployeesNullableScalarRelationFilter, employeesWhereInput> | null
  }, "id">

  export type compliance_documentsOrderByWithAggregationInput = {
    id?: SortOrder
    empid?: SortOrderInput | SortOrder
    doc_type?: SortOrderInput | SortOrder
    file_path?: SortOrderInput | SortOrder
    uploaded_at?: SortOrderInput | SortOrder
    expires_on?: SortOrderInput | SortOrder
    _count?: compliance_documentsCountOrderByAggregateInput
    _avg?: compliance_documentsAvgOrderByAggregateInput
    _max?: compliance_documentsMaxOrderByAggregateInput
    _min?: compliance_documentsMinOrderByAggregateInput
    _sum?: compliance_documentsSumOrderByAggregateInput
  }

  export type compliance_documentsScalarWhereWithAggregatesInput = {
    AND?: compliance_documentsScalarWhereWithAggregatesInput | compliance_documentsScalarWhereWithAggregatesInput[]
    OR?: compliance_documentsScalarWhereWithAggregatesInput[]
    NOT?: compliance_documentsScalarWhereWithAggregatesInput | compliance_documentsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"compliance_documents"> | number
    empid?: IntNullableWithAggregatesFilter<"compliance_documents"> | number | null
    doc_type?: StringNullableWithAggregatesFilter<"compliance_documents"> | string | null
    file_path?: StringNullableWithAggregatesFilter<"compliance_documents"> | string | null
    uploaded_at?: DateTimeNullableWithAggregatesFilter<"compliance_documents"> | Date | string | null
    expires_on?: DateTimeNullableWithAggregatesFilter<"compliance_documents"> | Date | string | null
  }

  export type compliance_statusWhereInput = {
    AND?: compliance_statusWhereInput | compliance_statusWhereInput[]
    OR?: compliance_statusWhereInput[]
    NOT?: compliance_statusWhereInput | compliance_statusWhereInput[]
    empid?: IntFilter<"compliance_status"> | number
    overall_status?: Enumcompliance_status_overall_statusNullableFilter<"compliance_status"> | $Enums.compliance_status_overall_status | null
    last_updated?: DateTimeNullableFilter<"compliance_status"> | Date | string | null
    employees?: XOR<EmployeesScalarRelationFilter, employeesWhereInput>
  }

  export type compliance_statusOrderByWithRelationInput = {
    empid?: SortOrder
    overall_status?: SortOrderInput | SortOrder
    last_updated?: SortOrderInput | SortOrder
    employees?: employeesOrderByWithRelationInput
  }

  export type compliance_statusWhereUniqueInput = Prisma.AtLeast<{
    empid?: number
    AND?: compliance_statusWhereInput | compliance_statusWhereInput[]
    OR?: compliance_statusWhereInput[]
    NOT?: compliance_statusWhereInput | compliance_statusWhereInput[]
    overall_status?: Enumcompliance_status_overall_statusNullableFilter<"compliance_status"> | $Enums.compliance_status_overall_status | null
    last_updated?: DateTimeNullableFilter<"compliance_status"> | Date | string | null
    employees?: XOR<EmployeesScalarRelationFilter, employeesWhereInput>
  }, "empid">

  export type compliance_statusOrderByWithAggregationInput = {
    empid?: SortOrder
    overall_status?: SortOrderInput | SortOrder
    last_updated?: SortOrderInput | SortOrder
    _count?: compliance_statusCountOrderByAggregateInput
    _avg?: compliance_statusAvgOrderByAggregateInput
    _max?: compliance_statusMaxOrderByAggregateInput
    _min?: compliance_statusMinOrderByAggregateInput
    _sum?: compliance_statusSumOrderByAggregateInput
  }

  export type compliance_statusScalarWhereWithAggregatesInput = {
    AND?: compliance_statusScalarWhereWithAggregatesInput | compliance_statusScalarWhereWithAggregatesInput[]
    OR?: compliance_statusScalarWhereWithAggregatesInput[]
    NOT?: compliance_statusScalarWhereWithAggregatesInput | compliance_statusScalarWhereWithAggregatesInput[]
    empid?: IntWithAggregatesFilter<"compliance_status"> | number
    overall_status?: Enumcompliance_status_overall_statusNullableWithAggregatesFilter<"compliance_status"> | $Enums.compliance_status_overall_status | null
    last_updated?: DateTimeNullableWithAggregatesFilter<"compliance_status"> | Date | string | null
  }

  export type employeesWhereInput = {
    AND?: employeesWhereInput | employeesWhereInput[]
    OR?: employeesWhereInput[]
    NOT?: employeesWhereInput | employeesWhereInput[]
    empid?: IntFilter<"employees"> | number
    candidate_id?: StringNullableFilter<"employees"> | string | null
    name?: StringNullableFilter<"employees"> | string | null
    email?: StringNullableFilter<"employees"> | string | null
    contact_no?: StringNullableFilter<"employees"> | string | null
    password?: StringNullableFilter<"employees"> | string | null
    gender?: StringNullableFilter<"employees"> | string | null
    dob?: DateTimeNullableFilter<"employees"> | Date | string | null
    aadhar_card?: StringNullableFilter<"employees"> | string | null
    pan_card?: StringNullableFilter<"employees"> | string | null
    education_certificates?: StringNullableFilter<"employees"> | string | null
    resume?: StringNullableFilter<"employees"> | string | null
    experience_certificate?: StringNullableFilter<"employees"> | string | null
    profile_photo?: StringNullableFilter<"employees"> | string | null
    created_at?: DateTimeNullableFilter<"employees"> | Date | string | null
    experience_years?: IntNullableFilter<"employees"> | number | null
    experience_months?: IntNullableFilter<"employees"> | number | null
    employee_type?: Enumemployees_employee_typeNullableFilter<"employees"> | $Enums.employees_employee_type | null
    aadhar_number?: StringNullableFilter<"employees"> | string | null
    pan_number?: StringNullableFilter<"employees"> | string | null
    addresses?: AddressesListRelationFilter
    audit_logs_audit_logs_empidToemployees?: Audit_logsListRelationFilter
    audit_logs_audit_logs_performed_byToemployees?: Audit_logsListRelationFilter
    bank_details?: Bank_detailsListRelationFilter
    compliance_documents?: Compliance_documentsListRelationFilter
    compliance_status?: XOR<Compliance_statusNullableScalarRelationFilter, compliance_statusWhereInput> | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }

  export type employeesOrderByWithRelationInput = {
    empid?: SortOrder
    candidate_id?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    contact_no?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    dob?: SortOrderInput | SortOrder
    aadhar_card?: SortOrderInput | SortOrder
    pan_card?: SortOrderInput | SortOrder
    education_certificates?: SortOrderInput | SortOrder
    resume?: SortOrderInput | SortOrder
    experience_certificate?: SortOrderInput | SortOrder
    profile_photo?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    experience_years?: SortOrderInput | SortOrder
    experience_months?: SortOrderInput | SortOrder
    employee_type?: SortOrderInput | SortOrder
    aadhar_number?: SortOrderInput | SortOrder
    pan_number?: SortOrderInput | SortOrder
    addresses?: addressesOrderByRelationAggregateInput
    audit_logs_audit_logs_empidToemployees?: audit_logsOrderByRelationAggregateInput
    audit_logs_audit_logs_performed_byToemployees?: audit_logsOrderByRelationAggregateInput
    bank_details?: bank_detailsOrderByRelationAggregateInput
    compliance_documents?: compliance_documentsOrderByRelationAggregateInput
    compliance_status?: compliance_statusOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type employeesWhereUniqueInput = Prisma.AtLeast<{
    empid?: number
    AND?: employeesWhereInput | employeesWhereInput[]
    OR?: employeesWhereInput[]
    NOT?: employeesWhereInput | employeesWhereInput[]
    candidate_id?: StringNullableFilter<"employees"> | string | null
    name?: StringNullableFilter<"employees"> | string | null
    email?: StringNullableFilter<"employees"> | string | null
    contact_no?: StringNullableFilter<"employees"> | string | null
    password?: StringNullableFilter<"employees"> | string | null
    gender?: StringNullableFilter<"employees"> | string | null
    dob?: DateTimeNullableFilter<"employees"> | Date | string | null
    aadhar_card?: StringNullableFilter<"employees"> | string | null
    pan_card?: StringNullableFilter<"employees"> | string | null
    education_certificates?: StringNullableFilter<"employees"> | string | null
    resume?: StringNullableFilter<"employees"> | string | null
    experience_certificate?: StringNullableFilter<"employees"> | string | null
    profile_photo?: StringNullableFilter<"employees"> | string | null
    created_at?: DateTimeNullableFilter<"employees"> | Date | string | null
    experience_years?: IntNullableFilter<"employees"> | number | null
    experience_months?: IntNullableFilter<"employees"> | number | null
    employee_type?: Enumemployees_employee_typeNullableFilter<"employees"> | $Enums.employees_employee_type | null
    aadhar_number?: StringNullableFilter<"employees"> | string | null
    pan_number?: StringNullableFilter<"employees"> | string | null
    addresses?: AddressesListRelationFilter
    audit_logs_audit_logs_empidToemployees?: Audit_logsListRelationFilter
    audit_logs_audit_logs_performed_byToemployees?: Audit_logsListRelationFilter
    bank_details?: Bank_detailsListRelationFilter
    compliance_documents?: Compliance_documentsListRelationFilter
    compliance_status?: XOR<Compliance_statusNullableScalarRelationFilter, compliance_statusWhereInput> | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }, "empid">

  export type employeesOrderByWithAggregationInput = {
    empid?: SortOrder
    candidate_id?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    contact_no?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    dob?: SortOrderInput | SortOrder
    aadhar_card?: SortOrderInput | SortOrder
    pan_card?: SortOrderInput | SortOrder
    education_certificates?: SortOrderInput | SortOrder
    resume?: SortOrderInput | SortOrder
    experience_certificate?: SortOrderInput | SortOrder
    profile_photo?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    experience_years?: SortOrderInput | SortOrder
    experience_months?: SortOrderInput | SortOrder
    employee_type?: SortOrderInput | SortOrder
    aadhar_number?: SortOrderInput | SortOrder
    pan_number?: SortOrderInput | SortOrder
    _count?: employeesCountOrderByAggregateInput
    _avg?: employeesAvgOrderByAggregateInput
    _max?: employeesMaxOrderByAggregateInput
    _min?: employeesMinOrderByAggregateInput
    _sum?: employeesSumOrderByAggregateInput
  }

  export type employeesScalarWhereWithAggregatesInput = {
    AND?: employeesScalarWhereWithAggregatesInput | employeesScalarWhereWithAggregatesInput[]
    OR?: employeesScalarWhereWithAggregatesInput[]
    NOT?: employeesScalarWhereWithAggregatesInput | employeesScalarWhereWithAggregatesInput[]
    empid?: IntWithAggregatesFilter<"employees"> | number
    candidate_id?: StringNullableWithAggregatesFilter<"employees"> | string | null
    name?: StringNullableWithAggregatesFilter<"employees"> | string | null
    email?: StringNullableWithAggregatesFilter<"employees"> | string | null
    contact_no?: StringNullableWithAggregatesFilter<"employees"> | string | null
    password?: StringNullableWithAggregatesFilter<"employees"> | string | null
    gender?: StringNullableWithAggregatesFilter<"employees"> | string | null
    dob?: DateTimeNullableWithAggregatesFilter<"employees"> | Date | string | null
    aadhar_card?: StringNullableWithAggregatesFilter<"employees"> | string | null
    pan_card?: StringNullableWithAggregatesFilter<"employees"> | string | null
    education_certificates?: StringNullableWithAggregatesFilter<"employees"> | string | null
    resume?: StringNullableWithAggregatesFilter<"employees"> | string | null
    experience_certificate?: StringNullableWithAggregatesFilter<"employees"> | string | null
    profile_photo?: StringNullableWithAggregatesFilter<"employees"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"employees"> | Date | string | null
    experience_years?: IntNullableWithAggregatesFilter<"employees"> | number | null
    experience_months?: IntNullableWithAggregatesFilter<"employees"> | number | null
    employee_type?: Enumemployees_employee_typeNullableWithAggregatesFilter<"employees"> | $Enums.employees_employee_type | null
    aadhar_number?: StringNullableWithAggregatesFilter<"employees"> | string | null
    pan_number?: StringNullableWithAggregatesFilter<"employees"> | string | null
  }

  export type main_employeeWhereInput = {
    AND?: main_employeeWhereInput | main_employeeWhereInput[]
    OR?: main_employeeWhereInput[]
    NOT?: main_employeeWhereInput | main_employeeWhereInput[]
    empid?: StringFilter<"main_employee"> | string
    candidate_id?: IntNullableFilter<"main_employee"> | number | null
    email?: StringFilter<"main_employee"> | string
    password?: StringFilter<"main_employee"> | string
    role?: StringNullableFilter<"main_employee"> | string | null
    name?: StringNullableFilter<"main_employee"> | string | null
    contact?: StringNullableFilter<"main_employee"> | string | null
    position?: StringNullableFilter<"main_employee"> | string | null
    doj?: DateTimeNullableFilter<"main_employee"> | Date | string | null
    gender?: StringNullableFilter<"main_employee"> | string | null
    dob?: DateTimeNullableFilter<"main_employee"> | Date | string | null
    address?: StringNullableFilter<"main_employee"> | string | null
    employee_type?: StringNullableFilter<"main_employee"> | string | null
    experience?: StringNullableFilter<"main_employee"> | string | null
    profile_photo?: StringNullableFilter<"main_employee"> | string | null
    aadhar_card?: StringNullableFilter<"main_employee"> | string | null
    pan_card?: StringNullableFilter<"main_employee"> | string | null
    education_certificates?: StringNullableFilter<"main_employee"> | string | null
    resume?: StringNullableFilter<"main_employee"> | string | null
    experience_certificate?: StringNullableFilter<"main_employee"> | string | null
    bank_details?: StringNullableFilter<"main_employee"> | string | null
    status?: StringNullableFilter<"main_employee"> | string | null
    created_at?: DateTimeNullableFilter<"main_employee"> | Date | string | null
  }

  export type main_employeeOrderByWithRelationInput = {
    empid?: SortOrder
    candidate_id?: SortOrderInput | SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    contact?: SortOrderInput | SortOrder
    position?: SortOrderInput | SortOrder
    doj?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    dob?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    employee_type?: SortOrderInput | SortOrder
    experience?: SortOrderInput | SortOrder
    profile_photo?: SortOrderInput | SortOrder
    aadhar_card?: SortOrderInput | SortOrder
    pan_card?: SortOrderInput | SortOrder
    education_certificates?: SortOrderInput | SortOrder
    resume?: SortOrderInput | SortOrder
    experience_certificate?: SortOrderInput | SortOrder
    bank_details?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
  }

  export type main_employeeWhereUniqueInput = Prisma.AtLeast<{
    empid?: string
    AND?: main_employeeWhereInput | main_employeeWhereInput[]
    OR?: main_employeeWhereInput[]
    NOT?: main_employeeWhereInput | main_employeeWhereInput[]
    candidate_id?: IntNullableFilter<"main_employee"> | number | null
    email?: StringFilter<"main_employee"> | string
    password?: StringFilter<"main_employee"> | string
    role?: StringNullableFilter<"main_employee"> | string | null
    name?: StringNullableFilter<"main_employee"> | string | null
    contact?: StringNullableFilter<"main_employee"> | string | null
    position?: StringNullableFilter<"main_employee"> | string | null
    doj?: DateTimeNullableFilter<"main_employee"> | Date | string | null
    gender?: StringNullableFilter<"main_employee"> | string | null
    dob?: DateTimeNullableFilter<"main_employee"> | Date | string | null
    address?: StringNullableFilter<"main_employee"> | string | null
    employee_type?: StringNullableFilter<"main_employee"> | string | null
    experience?: StringNullableFilter<"main_employee"> | string | null
    profile_photo?: StringNullableFilter<"main_employee"> | string | null
    aadhar_card?: StringNullableFilter<"main_employee"> | string | null
    pan_card?: StringNullableFilter<"main_employee"> | string | null
    education_certificates?: StringNullableFilter<"main_employee"> | string | null
    resume?: StringNullableFilter<"main_employee"> | string | null
    experience_certificate?: StringNullableFilter<"main_employee"> | string | null
    bank_details?: StringNullableFilter<"main_employee"> | string | null
    status?: StringNullableFilter<"main_employee"> | string | null
    created_at?: DateTimeNullableFilter<"main_employee"> | Date | string | null
  }, "empid">

  export type main_employeeOrderByWithAggregationInput = {
    empid?: SortOrder
    candidate_id?: SortOrderInput | SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    contact?: SortOrderInput | SortOrder
    position?: SortOrderInput | SortOrder
    doj?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    dob?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    employee_type?: SortOrderInput | SortOrder
    experience?: SortOrderInput | SortOrder
    profile_photo?: SortOrderInput | SortOrder
    aadhar_card?: SortOrderInput | SortOrder
    pan_card?: SortOrderInput | SortOrder
    education_certificates?: SortOrderInput | SortOrder
    resume?: SortOrderInput | SortOrder
    experience_certificate?: SortOrderInput | SortOrder
    bank_details?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: main_employeeCountOrderByAggregateInput
    _avg?: main_employeeAvgOrderByAggregateInput
    _max?: main_employeeMaxOrderByAggregateInput
    _min?: main_employeeMinOrderByAggregateInput
    _sum?: main_employeeSumOrderByAggregateInput
  }

  export type main_employeeScalarWhereWithAggregatesInput = {
    AND?: main_employeeScalarWhereWithAggregatesInput | main_employeeScalarWhereWithAggregatesInput[]
    OR?: main_employeeScalarWhereWithAggregatesInput[]
    NOT?: main_employeeScalarWhereWithAggregatesInput | main_employeeScalarWhereWithAggregatesInput[]
    empid?: StringWithAggregatesFilter<"main_employee"> | string
    candidate_id?: IntNullableWithAggregatesFilter<"main_employee"> | number | null
    email?: StringWithAggregatesFilter<"main_employee"> | string
    password?: StringWithAggregatesFilter<"main_employee"> | string
    role?: StringNullableWithAggregatesFilter<"main_employee"> | string | null
    name?: StringNullableWithAggregatesFilter<"main_employee"> | string | null
    contact?: StringNullableWithAggregatesFilter<"main_employee"> | string | null
    position?: StringNullableWithAggregatesFilter<"main_employee"> | string | null
    doj?: DateTimeNullableWithAggregatesFilter<"main_employee"> | Date | string | null
    gender?: StringNullableWithAggregatesFilter<"main_employee"> | string | null
    dob?: DateTimeNullableWithAggregatesFilter<"main_employee"> | Date | string | null
    address?: StringNullableWithAggregatesFilter<"main_employee"> | string | null
    employee_type?: StringNullableWithAggregatesFilter<"main_employee"> | string | null
    experience?: StringNullableWithAggregatesFilter<"main_employee"> | string | null
    profile_photo?: StringNullableWithAggregatesFilter<"main_employee"> | string | null
    aadhar_card?: StringNullableWithAggregatesFilter<"main_employee"> | string | null
    pan_card?: StringNullableWithAggregatesFilter<"main_employee"> | string | null
    education_certificates?: StringNullableWithAggregatesFilter<"main_employee"> | string | null
    resume?: StringNullableWithAggregatesFilter<"main_employee"> | string | null
    experience_certificate?: StringNullableWithAggregatesFilter<"main_employee"> | string | null
    bank_details?: StringNullableWithAggregatesFilter<"main_employee"> | string | null
    status?: StringNullableWithAggregatesFilter<"main_employee"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"main_employee"> | Date | string | null
  }

  export type leave_typesWhereInput = {
    AND?: leave_typesWhereInput | leave_typesWhereInput[]
    OR?: leave_typesWhereInput[]
    NOT?: leave_typesWhereInput | leave_typesWhereInput[]
    id?: IntFilter<"leave_types"> | number
    type_name?: Enumleave_types_type_nameFilter<"leave_types"> | $Enums.leave_types_type_name
    max_days?: IntFilter<"leave_types"> | number
    paid?: BoolNullableFilter<"leave_types"> | boolean | null
    leave_balances?: Leave_balancesListRelationFilter
  }

  export type leave_typesOrderByWithRelationInput = {
    id?: SortOrder
    type_name?: SortOrder
    max_days?: SortOrder
    paid?: SortOrderInput | SortOrder
    leave_balances?: leave_balancesOrderByRelationAggregateInput
  }

  export type leave_typesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: leave_typesWhereInput | leave_typesWhereInput[]
    OR?: leave_typesWhereInput[]
    NOT?: leave_typesWhereInput | leave_typesWhereInput[]
    type_name?: Enumleave_types_type_nameFilter<"leave_types"> | $Enums.leave_types_type_name
    max_days?: IntFilter<"leave_types"> | number
    paid?: BoolNullableFilter<"leave_types"> | boolean | null
    leave_balances?: Leave_balancesListRelationFilter
  }, "id">

  export type leave_typesOrderByWithAggregationInput = {
    id?: SortOrder
    type_name?: SortOrder
    max_days?: SortOrder
    paid?: SortOrderInput | SortOrder
    _count?: leave_typesCountOrderByAggregateInput
    _avg?: leave_typesAvgOrderByAggregateInput
    _max?: leave_typesMaxOrderByAggregateInput
    _min?: leave_typesMinOrderByAggregateInput
    _sum?: leave_typesSumOrderByAggregateInput
  }

  export type leave_typesScalarWhereWithAggregatesInput = {
    AND?: leave_typesScalarWhereWithAggregatesInput | leave_typesScalarWhereWithAggregatesInput[]
    OR?: leave_typesScalarWhereWithAggregatesInput[]
    NOT?: leave_typesScalarWhereWithAggregatesInput | leave_typesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"leave_types"> | number
    type_name?: Enumleave_types_type_nameWithAggregatesFilter<"leave_types"> | $Enums.leave_types_type_name
    max_days?: IntWithAggregatesFilter<"leave_types"> | number
    paid?: BoolNullableWithAggregatesFilter<"leave_types"> | boolean | null
  }

  export type leave_balancesWhereInput = {
    AND?: leave_balancesWhereInput | leave_balancesWhereInput[]
    OR?: leave_balancesWhereInput[]
    NOT?: leave_balancesWhereInput | leave_balancesWhereInput[]
    id?: IntFilter<"leave_balances"> | number
    empid?: StringFilter<"leave_balances"> | string
    type_id?: IntFilter<"leave_balances"> | number
    total?: IntFilter<"leave_balances"> | number
    used?: IntNullableFilter<"leave_balances"> | number | null
    remaining?: IntNullableFilter<"leave_balances"> | number | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
    leave_types?: XOR<Leave_typesScalarRelationFilter, leave_typesWhereInput>
  }

  export type leave_balancesOrderByWithRelationInput = {
    id?: SortOrder
    empid?: SortOrder
    type_id?: SortOrder
    total?: SortOrder
    used?: SortOrderInput | SortOrder
    remaining?: SortOrderInput | SortOrder
    users?: usersOrderByWithRelationInput
    leave_types?: leave_typesOrderByWithRelationInput
  }

  export type leave_balancesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: leave_balancesWhereInput | leave_balancesWhereInput[]
    OR?: leave_balancesWhereInput[]
    NOT?: leave_balancesWhereInput | leave_balancesWhereInput[]
    empid?: StringFilter<"leave_balances"> | string
    type_id?: IntFilter<"leave_balances"> | number
    total?: IntFilter<"leave_balances"> | number
    used?: IntNullableFilter<"leave_balances"> | number | null
    remaining?: IntNullableFilter<"leave_balances"> | number | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
    leave_types?: XOR<Leave_typesScalarRelationFilter, leave_typesWhereInput>
  }, "id">

  export type leave_balancesOrderByWithAggregationInput = {
    id?: SortOrder
    empid?: SortOrder
    type_id?: SortOrder
    total?: SortOrder
    used?: SortOrderInput | SortOrder
    remaining?: SortOrderInput | SortOrder
    _count?: leave_balancesCountOrderByAggregateInput
    _avg?: leave_balancesAvgOrderByAggregateInput
    _max?: leave_balancesMaxOrderByAggregateInput
    _min?: leave_balancesMinOrderByAggregateInput
    _sum?: leave_balancesSumOrderByAggregateInput
  }

  export type leave_balancesScalarWhereWithAggregatesInput = {
    AND?: leave_balancesScalarWhereWithAggregatesInput | leave_balancesScalarWhereWithAggregatesInput[]
    OR?: leave_balancesScalarWhereWithAggregatesInput[]
    NOT?: leave_balancesScalarWhereWithAggregatesInput | leave_balancesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"leave_balances"> | number
    empid?: StringWithAggregatesFilter<"leave_balances"> | string
    type_id?: IntWithAggregatesFilter<"leave_balances"> | number
    total?: IntWithAggregatesFilter<"leave_balances"> | number
    used?: IntNullableWithAggregatesFilter<"leave_balances"> | number | null
    remaining?: IntNullableWithAggregatesFilter<"leave_balances"> | number | null
  }

  export type leave_requestsWhereInput = {
    AND?: leave_requestsWhereInput | leave_requestsWhereInput[]
    OR?: leave_requestsWhereInput[]
    NOT?: leave_requestsWhereInput | leave_requestsWhereInput[]
    id?: IntFilter<"leave_requests"> | number
    empid?: StringFilter<"leave_requests"> | string
    from_date?: DateTimeFilter<"leave_requests"> | Date | string
    to_date?: DateTimeFilter<"leave_requests"> | Date | string
    reason?: StringNullableFilter<"leave_requests"> | string | null
    status?: Enumleave_requests_statusNullableFilter<"leave_requests"> | $Enums.leave_requests_status | null
    applied_at?: DateTimeNullableFilter<"leave_requests"> | Date | string | null
    attachment?: StringNullableFilter<"leave_requests"> | string | null
    leave_type?: StringFilter<"leave_requests"> | string
    name?: StringFilter<"leave_requests"> | string
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type leave_requestsOrderByWithRelationInput = {
    id?: SortOrder
    empid?: SortOrder
    from_date?: SortOrder
    to_date?: SortOrder
    reason?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    applied_at?: SortOrderInput | SortOrder
    attachment?: SortOrderInput | SortOrder
    leave_type?: SortOrder
    name?: SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type leave_requestsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: leave_requestsWhereInput | leave_requestsWhereInput[]
    OR?: leave_requestsWhereInput[]
    NOT?: leave_requestsWhereInput | leave_requestsWhereInput[]
    empid?: StringFilter<"leave_requests"> | string
    from_date?: DateTimeFilter<"leave_requests"> | Date | string
    to_date?: DateTimeFilter<"leave_requests"> | Date | string
    reason?: StringNullableFilter<"leave_requests"> | string | null
    status?: Enumleave_requests_statusNullableFilter<"leave_requests"> | $Enums.leave_requests_status | null
    applied_at?: DateTimeNullableFilter<"leave_requests"> | Date | string | null
    attachment?: StringNullableFilter<"leave_requests"> | string | null
    leave_type?: StringFilter<"leave_requests"> | string
    name?: StringFilter<"leave_requests"> | string
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id">

  export type leave_requestsOrderByWithAggregationInput = {
    id?: SortOrder
    empid?: SortOrder
    from_date?: SortOrder
    to_date?: SortOrder
    reason?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    applied_at?: SortOrderInput | SortOrder
    attachment?: SortOrderInput | SortOrder
    leave_type?: SortOrder
    name?: SortOrder
    _count?: leave_requestsCountOrderByAggregateInput
    _avg?: leave_requestsAvgOrderByAggregateInput
    _max?: leave_requestsMaxOrderByAggregateInput
    _min?: leave_requestsMinOrderByAggregateInput
    _sum?: leave_requestsSumOrderByAggregateInput
  }

  export type leave_requestsScalarWhereWithAggregatesInput = {
    AND?: leave_requestsScalarWhereWithAggregatesInput | leave_requestsScalarWhereWithAggregatesInput[]
    OR?: leave_requestsScalarWhereWithAggregatesInput[]
    NOT?: leave_requestsScalarWhereWithAggregatesInput | leave_requestsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"leave_requests"> | number
    empid?: StringWithAggregatesFilter<"leave_requests"> | string
    from_date?: DateTimeWithAggregatesFilter<"leave_requests"> | Date | string
    to_date?: DateTimeWithAggregatesFilter<"leave_requests"> | Date | string
    reason?: StringNullableWithAggregatesFilter<"leave_requests"> | string | null
    status?: Enumleave_requests_statusNullableWithAggregatesFilter<"leave_requests"> | $Enums.leave_requests_status | null
    applied_at?: DateTimeNullableWithAggregatesFilter<"leave_requests"> | Date | string | null
    attachment?: StringNullableWithAggregatesFilter<"leave_requests"> | string | null
    leave_type?: StringWithAggregatesFilter<"leave_requests"> | string
    name?: StringWithAggregatesFilter<"leave_requests"> | string
  }

  export type usersWhereInput = {
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    id?: IntFilter<"users"> | number
    empid?: StringFilter<"users"> | string
    name?: StringFilter<"users"> | string
    email?: StringFilter<"users"> | string
    contact_number?: StringNullableFilter<"users"> | string | null
    password?: StringFilter<"users"> | string
    position?: StringNullableFilter<"users"> | string | null
    date_of_joining?: DateTimeNullableFilter<"users"> | Date | string | null
    status?: StringNullableFilter<"users"> | string | null
    experience?: IntNullableFilter<"users"> | number | null
    profile_photo?: StringNullableFilter<"users"> | string | null
    role?: Enumusers_roleFilter<"users"> | $Enums.users_role
    created_at?: DateTimeNullableFilter<"users"> | Date | string | null
    verified?: Enumusers_verifiedNullableFilter<"users"> | $Enums.users_verified | null
    employees?: EmployeesListRelationFilter
    leave_balances?: Leave_balancesListRelationFilter
    leave_requests?: Leave_requestsListRelationFilter
    payroll?: PayrollListRelationFilter
  }

  export type usersOrderByWithRelationInput = {
    id?: SortOrder
    empid?: SortOrder
    name?: SortOrder
    email?: SortOrder
    contact_number?: SortOrderInput | SortOrder
    password?: SortOrder
    position?: SortOrderInput | SortOrder
    date_of_joining?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    experience?: SortOrderInput | SortOrder
    profile_photo?: SortOrderInput | SortOrder
    role?: SortOrder
    created_at?: SortOrderInput | SortOrder
    verified?: SortOrderInput | SortOrder
    employees?: employeesOrderByRelationAggregateInput
    leave_balances?: leave_balancesOrderByRelationAggregateInput
    leave_requests?: leave_requestsOrderByRelationAggregateInput
    payroll?: payrollOrderByRelationAggregateInput
  }

  export type usersWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    empid?: string
    email?: string
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    name?: StringFilter<"users"> | string
    contact_number?: StringNullableFilter<"users"> | string | null
    password?: StringFilter<"users"> | string
    position?: StringNullableFilter<"users"> | string | null
    date_of_joining?: DateTimeNullableFilter<"users"> | Date | string | null
    status?: StringNullableFilter<"users"> | string | null
    experience?: IntNullableFilter<"users"> | number | null
    profile_photo?: StringNullableFilter<"users"> | string | null
    role?: Enumusers_roleFilter<"users"> | $Enums.users_role
    created_at?: DateTimeNullableFilter<"users"> | Date | string | null
    verified?: Enumusers_verifiedNullableFilter<"users"> | $Enums.users_verified | null
    employees?: EmployeesListRelationFilter
    leave_balances?: Leave_balancesListRelationFilter
    leave_requests?: Leave_requestsListRelationFilter
    payroll?: PayrollListRelationFilter
  }, "id" | "empid" | "email">

  export type usersOrderByWithAggregationInput = {
    id?: SortOrder
    empid?: SortOrder
    name?: SortOrder
    email?: SortOrder
    contact_number?: SortOrderInput | SortOrder
    password?: SortOrder
    position?: SortOrderInput | SortOrder
    date_of_joining?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    experience?: SortOrderInput | SortOrder
    profile_photo?: SortOrderInput | SortOrder
    role?: SortOrder
    created_at?: SortOrderInput | SortOrder
    verified?: SortOrderInput | SortOrder
    _count?: usersCountOrderByAggregateInput
    _avg?: usersAvgOrderByAggregateInput
    _max?: usersMaxOrderByAggregateInput
    _min?: usersMinOrderByAggregateInput
    _sum?: usersSumOrderByAggregateInput
  }

  export type usersScalarWhereWithAggregatesInput = {
    AND?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    OR?: usersScalarWhereWithAggregatesInput[]
    NOT?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"users"> | number
    empid?: StringWithAggregatesFilter<"users"> | string
    name?: StringWithAggregatesFilter<"users"> | string
    email?: StringWithAggregatesFilter<"users"> | string
    contact_number?: StringNullableWithAggregatesFilter<"users"> | string | null
    password?: StringWithAggregatesFilter<"users"> | string
    position?: StringNullableWithAggregatesFilter<"users"> | string | null
    date_of_joining?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    status?: StringNullableWithAggregatesFilter<"users"> | string | null
    experience?: IntNullableWithAggregatesFilter<"users"> | number | null
    profile_photo?: StringNullableWithAggregatesFilter<"users"> | string | null
    role?: Enumusers_roleWithAggregatesFilter<"users"> | $Enums.users_role
    created_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    verified?: Enumusers_verifiedNullableWithAggregatesFilter<"users"> | $Enums.users_verified | null
  }

  export type payrollWhereInput = {
    AND?: payrollWhereInput | payrollWhereInput[]
    OR?: payrollWhereInput[]
    NOT?: payrollWhereInput | payrollWhereInput[]
    id?: IntFilter<"payroll"> | number
    empid?: StringNullableFilter<"payroll"> | string | null
    month?: StringNullableFilter<"payroll"> | string | null
    year?: IntNullableFilter<"payroll"> | number | null
    basic_salary?: DecimalNullableFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    hra?: DecimalNullableFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    bonus?: DecimalNullableFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    da?: DecimalNullableFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    allowances?: DecimalNullableFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    deductions?: DecimalNullableFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    net_pay?: DecimalNullableFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    generated_on?: DateTimeNullableFilter<"payroll"> | Date | string | null
    payslip_pdf?: StringNullableFilter<"payroll"> | string | null
    pf?: DecimalNullableFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    ptax?: DecimalNullableFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    esic?: DecimalNullableFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }

  export type payrollOrderByWithRelationInput = {
    id?: SortOrder
    empid?: SortOrderInput | SortOrder
    month?: SortOrderInput | SortOrder
    year?: SortOrderInput | SortOrder
    basic_salary?: SortOrderInput | SortOrder
    hra?: SortOrderInput | SortOrder
    bonus?: SortOrderInput | SortOrder
    da?: SortOrderInput | SortOrder
    allowances?: SortOrderInput | SortOrder
    deductions?: SortOrderInput | SortOrder
    net_pay?: SortOrderInput | SortOrder
    generated_on?: SortOrderInput | SortOrder
    payslip_pdf?: SortOrderInput | SortOrder
    pf?: SortOrderInput | SortOrder
    ptax?: SortOrderInput | SortOrder
    esic?: SortOrderInput | SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type payrollWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: payrollWhereInput | payrollWhereInput[]
    OR?: payrollWhereInput[]
    NOT?: payrollWhereInput | payrollWhereInput[]
    empid?: StringNullableFilter<"payroll"> | string | null
    month?: StringNullableFilter<"payroll"> | string | null
    year?: IntNullableFilter<"payroll"> | number | null
    basic_salary?: DecimalNullableFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    hra?: DecimalNullableFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    bonus?: DecimalNullableFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    da?: DecimalNullableFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    allowances?: DecimalNullableFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    deductions?: DecimalNullableFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    net_pay?: DecimalNullableFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    generated_on?: DateTimeNullableFilter<"payroll"> | Date | string | null
    payslip_pdf?: StringNullableFilter<"payroll"> | string | null
    pf?: DecimalNullableFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    ptax?: DecimalNullableFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    esic?: DecimalNullableFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }, "id">

  export type payrollOrderByWithAggregationInput = {
    id?: SortOrder
    empid?: SortOrderInput | SortOrder
    month?: SortOrderInput | SortOrder
    year?: SortOrderInput | SortOrder
    basic_salary?: SortOrderInput | SortOrder
    hra?: SortOrderInput | SortOrder
    bonus?: SortOrderInput | SortOrder
    da?: SortOrderInput | SortOrder
    allowances?: SortOrderInput | SortOrder
    deductions?: SortOrderInput | SortOrder
    net_pay?: SortOrderInput | SortOrder
    generated_on?: SortOrderInput | SortOrder
    payslip_pdf?: SortOrderInput | SortOrder
    pf?: SortOrderInput | SortOrder
    ptax?: SortOrderInput | SortOrder
    esic?: SortOrderInput | SortOrder
    _count?: payrollCountOrderByAggregateInput
    _avg?: payrollAvgOrderByAggregateInput
    _max?: payrollMaxOrderByAggregateInput
    _min?: payrollMinOrderByAggregateInput
    _sum?: payrollSumOrderByAggregateInput
  }

  export type payrollScalarWhereWithAggregatesInput = {
    AND?: payrollScalarWhereWithAggregatesInput | payrollScalarWhereWithAggregatesInput[]
    OR?: payrollScalarWhereWithAggregatesInput[]
    NOT?: payrollScalarWhereWithAggregatesInput | payrollScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"payroll"> | number
    empid?: StringNullableWithAggregatesFilter<"payroll"> | string | null
    month?: StringNullableWithAggregatesFilter<"payroll"> | string | null
    year?: IntNullableWithAggregatesFilter<"payroll"> | number | null
    basic_salary?: DecimalNullableWithAggregatesFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    hra?: DecimalNullableWithAggregatesFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    bonus?: DecimalNullableWithAggregatesFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    da?: DecimalNullableWithAggregatesFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    allowances?: DecimalNullableWithAggregatesFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    deductions?: DecimalNullableWithAggregatesFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    net_pay?: DecimalNullableWithAggregatesFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    generated_on?: DateTimeNullableWithAggregatesFilter<"payroll"> | Date | string | null
    payslip_pdf?: StringNullableWithAggregatesFilter<"payroll"> | string | null
    pf?: DecimalNullableWithAggregatesFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    ptax?: DecimalNullableWithAggregatesFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    esic?: DecimalNullableWithAggregatesFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
  }

  export type addressesCreateInput = {
    address_line1: string
    address_line2?: string | null
    city: string
    state: string
    country: string
    pincode: string
    employees: employeesCreateNestedOneWithoutAddressesInput
  }

  export type addressesUncheckedCreateInput = {
    id?: number
    employee_id: number
    address_line1: string
    address_line2?: string | null
    city: string
    state: string
    country: string
    pincode: string
  }

  export type addressesUpdateInput = {
    address_line1?: StringFieldUpdateOperationsInput | string
    address_line2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    pincode?: StringFieldUpdateOperationsInput | string
    employees?: employeesUpdateOneRequiredWithoutAddressesNestedInput
  }

  export type addressesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    employee_id?: IntFieldUpdateOperationsInput | number
    address_line1?: StringFieldUpdateOperationsInput | string
    address_line2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    pincode?: StringFieldUpdateOperationsInput | string
  }

  export type addressesCreateManyInput = {
    id?: number
    employee_id: number
    address_line1: string
    address_line2?: string | null
    city: string
    state: string
    country: string
    pincode: string
  }

  export type addressesUpdateManyMutationInput = {
    address_line1?: StringFieldUpdateOperationsInput | string
    address_line2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    pincode?: StringFieldUpdateOperationsInput | string
  }

  export type addressesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    employee_id?: IntFieldUpdateOperationsInput | number
    address_line1?: StringFieldUpdateOperationsInput | string
    address_line2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    pincode?: StringFieldUpdateOperationsInput | string
  }

  export type attendanceCreateInput = {
    empid: string
    check_in?: Date | string | null
    check_out?: Date | string | null
    total_hours?: Decimal | DecimalJsLike | number | string | null
    date?: Date | string | null
    created_at?: Date | string | null
    attendance_status?: $Enums.attendance_attendance_status | null
  }

  export type attendanceUncheckedCreateInput = {
    id?: number
    empid: string
    check_in?: Date | string | null
    check_out?: Date | string | null
    total_hours?: Decimal | DecimalJsLike | number | string | null
    date?: Date | string | null
    created_at?: Date | string | null
    attendance_status?: $Enums.attendance_attendance_status | null
  }

  export type attendanceUpdateInput = {
    empid?: StringFieldUpdateOperationsInput | string
    check_in?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_hours?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attendance_status?: NullableEnumattendance_attendance_statusFieldUpdateOperationsInput | $Enums.attendance_attendance_status | null
  }

  export type attendanceUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    empid?: StringFieldUpdateOperationsInput | string
    check_in?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_hours?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attendance_status?: NullableEnumattendance_attendance_statusFieldUpdateOperationsInput | $Enums.attendance_attendance_status | null
  }

  export type attendanceCreateManyInput = {
    id?: number
    empid: string
    check_in?: Date | string | null
    check_out?: Date | string | null
    total_hours?: Decimal | DecimalJsLike | number | string | null
    date?: Date | string | null
    created_at?: Date | string | null
    attendance_status?: $Enums.attendance_attendance_status | null
  }

  export type attendanceUpdateManyMutationInput = {
    empid?: StringFieldUpdateOperationsInput | string
    check_in?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_hours?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attendance_status?: NullableEnumattendance_attendance_statusFieldUpdateOperationsInput | $Enums.attendance_attendance_status | null
  }

  export type attendanceUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    empid?: StringFieldUpdateOperationsInput | string
    check_in?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_hours?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attendance_status?: NullableEnumattendance_attendance_statusFieldUpdateOperationsInput | $Enums.attendance_attendance_status | null
  }

  export type audit_logsCreateInput = {
    action?: string | null
    timestamp?: Date | string | null
    employees_audit_logs_empidToemployees?: employeesCreateNestedOneWithoutAudit_logs_audit_logs_empidToemployeesInput
    employees_audit_logs_performed_byToemployees?: employeesCreateNestedOneWithoutAudit_logs_audit_logs_performed_byToemployeesInput
  }

  export type audit_logsUncheckedCreateInput = {
    id?: number
    empid?: number | null
    performed_by?: number | null
    action?: string | null
    timestamp?: Date | string | null
  }

  export type audit_logsUpdateInput = {
    action?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    employees_audit_logs_empidToemployees?: employeesUpdateOneWithoutAudit_logs_audit_logs_empidToemployeesNestedInput
    employees_audit_logs_performed_byToemployees?: employeesUpdateOneWithoutAudit_logs_audit_logs_performed_byToemployeesNestedInput
  }

  export type audit_logsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    empid?: NullableIntFieldUpdateOperationsInput | number | null
    performed_by?: NullableIntFieldUpdateOperationsInput | number | null
    action?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type audit_logsCreateManyInput = {
    id?: number
    empid?: number | null
    performed_by?: number | null
    action?: string | null
    timestamp?: Date | string | null
  }

  export type audit_logsUpdateManyMutationInput = {
    action?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type audit_logsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    empid?: NullableIntFieldUpdateOperationsInput | number | null
    performed_by?: NullableIntFieldUpdateOperationsInput | number | null
    action?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type bank_detailsCreateInput = {
    account_holder_name: string
    bank_name: string
    branch_name?: string | null
    account_number: string
    ifsc_code: string
    checkbook_document?: string | null
    employees: employeesCreateNestedOneWithoutBank_detailsInput
  }

  export type bank_detailsUncheckedCreateInput = {
    id?: number
    employee_id: number
    account_holder_name: string
    bank_name: string
    branch_name?: string | null
    account_number: string
    ifsc_code: string
    checkbook_document?: string | null
  }

  export type bank_detailsUpdateInput = {
    account_holder_name?: StringFieldUpdateOperationsInput | string
    bank_name?: StringFieldUpdateOperationsInput | string
    branch_name?: NullableStringFieldUpdateOperationsInput | string | null
    account_number?: StringFieldUpdateOperationsInput | string
    ifsc_code?: StringFieldUpdateOperationsInput | string
    checkbook_document?: NullableStringFieldUpdateOperationsInput | string | null
    employees?: employeesUpdateOneRequiredWithoutBank_detailsNestedInput
  }

  export type bank_detailsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    employee_id?: IntFieldUpdateOperationsInput | number
    account_holder_name?: StringFieldUpdateOperationsInput | string
    bank_name?: StringFieldUpdateOperationsInput | string
    branch_name?: NullableStringFieldUpdateOperationsInput | string | null
    account_number?: StringFieldUpdateOperationsInput | string
    ifsc_code?: StringFieldUpdateOperationsInput | string
    checkbook_document?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type bank_detailsCreateManyInput = {
    id?: number
    employee_id: number
    account_holder_name: string
    bank_name: string
    branch_name?: string | null
    account_number: string
    ifsc_code: string
    checkbook_document?: string | null
  }

  export type bank_detailsUpdateManyMutationInput = {
    account_holder_name?: StringFieldUpdateOperationsInput | string
    bank_name?: StringFieldUpdateOperationsInput | string
    branch_name?: NullableStringFieldUpdateOperationsInput | string | null
    account_number?: StringFieldUpdateOperationsInput | string
    ifsc_code?: StringFieldUpdateOperationsInput | string
    checkbook_document?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type bank_detailsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    employee_id?: IntFieldUpdateOperationsInput | number
    account_holder_name?: StringFieldUpdateOperationsInput | string
    bank_name?: StringFieldUpdateOperationsInput | string
    branch_name?: NullableStringFieldUpdateOperationsInput | string | null
    account_number?: StringFieldUpdateOperationsInput | string
    ifsc_code?: StringFieldUpdateOperationsInput | string
    checkbook_document?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type candidatesCreateInput = {
    candidate_id?: string | null
    name: string
    email: string
    contact_number?: string | null
    interview_date?: Date | string | null
    resume?: string | null
    form_link?: string | null
    status?: $Enums.candidates_status | null
    created_at?: Date | string | null
    form_token?: string | null
    interview_mail_status?: string | null
    form_status?: string | null
    verification?: boolean | null
  }

  export type candidatesUncheckedCreateInput = {
    id?: number
    candidate_id?: string | null
    name: string
    email: string
    contact_number?: string | null
    interview_date?: Date | string | null
    resume?: string | null
    form_link?: string | null
    status?: $Enums.candidates_status | null
    created_at?: Date | string | null
    form_token?: string | null
    interview_mail_status?: string | null
    form_status?: string | null
    verification?: boolean | null
  }

  export type candidatesUpdateInput = {
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    contact_number?: NullableStringFieldUpdateOperationsInput | string | null
    interview_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resume?: NullableStringFieldUpdateOperationsInput | string | null
    form_link?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumcandidates_statusFieldUpdateOperationsInput | $Enums.candidates_status | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    form_token?: NullableStringFieldUpdateOperationsInput | string | null
    interview_mail_status?: NullableStringFieldUpdateOperationsInput | string | null
    form_status?: NullableStringFieldUpdateOperationsInput | string | null
    verification?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type candidatesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    contact_number?: NullableStringFieldUpdateOperationsInput | string | null
    interview_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resume?: NullableStringFieldUpdateOperationsInput | string | null
    form_link?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumcandidates_statusFieldUpdateOperationsInput | $Enums.candidates_status | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    form_token?: NullableStringFieldUpdateOperationsInput | string | null
    interview_mail_status?: NullableStringFieldUpdateOperationsInput | string | null
    form_status?: NullableStringFieldUpdateOperationsInput | string | null
    verification?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type candidatesCreateManyInput = {
    id?: number
    candidate_id?: string | null
    name: string
    email: string
    contact_number?: string | null
    interview_date?: Date | string | null
    resume?: string | null
    form_link?: string | null
    status?: $Enums.candidates_status | null
    created_at?: Date | string | null
    form_token?: string | null
    interview_mail_status?: string | null
    form_status?: string | null
    verification?: boolean | null
  }

  export type candidatesUpdateManyMutationInput = {
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    contact_number?: NullableStringFieldUpdateOperationsInput | string | null
    interview_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resume?: NullableStringFieldUpdateOperationsInput | string | null
    form_link?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumcandidates_statusFieldUpdateOperationsInput | $Enums.candidates_status | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    form_token?: NullableStringFieldUpdateOperationsInput | string | null
    interview_mail_status?: NullableStringFieldUpdateOperationsInput | string | null
    form_status?: NullableStringFieldUpdateOperationsInput | string | null
    verification?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type candidatesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    contact_number?: NullableStringFieldUpdateOperationsInput | string | null
    interview_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resume?: NullableStringFieldUpdateOperationsInput | string | null
    form_link?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumcandidates_statusFieldUpdateOperationsInput | $Enums.candidates_status | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    form_token?: NullableStringFieldUpdateOperationsInput | string | null
    interview_mail_status?: NullableStringFieldUpdateOperationsInput | string | null
    form_status?: NullableStringFieldUpdateOperationsInput | string | null
    verification?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type compliance_documentsCreateInput = {
    doc_type?: string | null
    file_path?: string | null
    uploaded_at?: Date | string | null
    expires_on?: Date | string | null
    employees?: employeesCreateNestedOneWithoutCompliance_documentsInput
  }

  export type compliance_documentsUncheckedCreateInput = {
    id?: number
    empid?: number | null
    doc_type?: string | null
    file_path?: string | null
    uploaded_at?: Date | string | null
    expires_on?: Date | string | null
  }

  export type compliance_documentsUpdateInput = {
    doc_type?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    uploaded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expires_on?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    employees?: employeesUpdateOneWithoutCompliance_documentsNestedInput
  }

  export type compliance_documentsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    empid?: NullableIntFieldUpdateOperationsInput | number | null
    doc_type?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    uploaded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expires_on?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type compliance_documentsCreateManyInput = {
    id?: number
    empid?: number | null
    doc_type?: string | null
    file_path?: string | null
    uploaded_at?: Date | string | null
    expires_on?: Date | string | null
  }

  export type compliance_documentsUpdateManyMutationInput = {
    doc_type?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    uploaded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expires_on?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type compliance_documentsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    empid?: NullableIntFieldUpdateOperationsInput | number | null
    doc_type?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    uploaded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expires_on?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type compliance_statusCreateInput = {
    overall_status?: $Enums.compliance_status_overall_status | null
    last_updated?: Date | string | null
    employees: employeesCreateNestedOneWithoutCompliance_statusInput
  }

  export type compliance_statusUncheckedCreateInput = {
    empid: number
    overall_status?: $Enums.compliance_status_overall_status | null
    last_updated?: Date | string | null
  }

  export type compliance_statusUpdateInput = {
    overall_status?: NullableEnumcompliance_status_overall_statusFieldUpdateOperationsInput | $Enums.compliance_status_overall_status | null
    last_updated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    employees?: employeesUpdateOneRequiredWithoutCompliance_statusNestedInput
  }

  export type compliance_statusUncheckedUpdateInput = {
    empid?: IntFieldUpdateOperationsInput | number
    overall_status?: NullableEnumcompliance_status_overall_statusFieldUpdateOperationsInput | $Enums.compliance_status_overall_status | null
    last_updated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type compliance_statusCreateManyInput = {
    empid: number
    overall_status?: $Enums.compliance_status_overall_status | null
    last_updated?: Date | string | null
  }

  export type compliance_statusUpdateManyMutationInput = {
    overall_status?: NullableEnumcompliance_status_overall_statusFieldUpdateOperationsInput | $Enums.compliance_status_overall_status | null
    last_updated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type compliance_statusUncheckedUpdateManyInput = {
    empid?: IntFieldUpdateOperationsInput | number
    overall_status?: NullableEnumcompliance_status_overall_statusFieldUpdateOperationsInput | $Enums.compliance_status_overall_status | null
    last_updated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type employeesCreateInput = {
    candidate_id?: string | null
    name?: string | null
    contact_no?: string | null
    password?: string | null
    gender?: string | null
    dob?: Date | string | null
    aadhar_card?: string | null
    pan_card?: string | null
    education_certificates?: string | null
    resume?: string | null
    experience_certificate?: string | null
    profile_photo?: string | null
    created_at?: Date | string | null
    experience_years?: number | null
    experience_months?: number | null
    employee_type?: $Enums.employees_employee_type | null
    aadhar_number?: string | null
    pan_number?: string | null
    addresses?: addressesCreateNestedManyWithoutEmployeesInput
    audit_logs_audit_logs_empidToemployees?: audit_logsCreateNestedManyWithoutEmployees_audit_logs_empidToemployeesInput
    audit_logs_audit_logs_performed_byToemployees?: audit_logsCreateNestedManyWithoutEmployees_audit_logs_performed_byToemployeesInput
    bank_details?: bank_detailsCreateNestedManyWithoutEmployeesInput
    compliance_documents?: compliance_documentsCreateNestedManyWithoutEmployeesInput
    compliance_status?: compliance_statusCreateNestedOneWithoutEmployeesInput
    users?: usersCreateNestedOneWithoutEmployeesInput
  }

  export type employeesUncheckedCreateInput = {
    empid?: number
    candidate_id?: string | null
    name?: string | null
    email?: string | null
    contact_no?: string | null
    password?: string | null
    gender?: string | null
    dob?: Date | string | null
    aadhar_card?: string | null
    pan_card?: string | null
    education_certificates?: string | null
    resume?: string | null
    experience_certificate?: string | null
    profile_photo?: string | null
    created_at?: Date | string | null
    experience_years?: number | null
    experience_months?: number | null
    employee_type?: $Enums.employees_employee_type | null
    aadhar_number?: string | null
    pan_number?: string | null
    addresses?: addressesUncheckedCreateNestedManyWithoutEmployeesInput
    audit_logs_audit_logs_empidToemployees?: audit_logsUncheckedCreateNestedManyWithoutEmployees_audit_logs_empidToemployeesInput
    audit_logs_audit_logs_performed_byToemployees?: audit_logsUncheckedCreateNestedManyWithoutEmployees_audit_logs_performed_byToemployeesInput
    bank_details?: bank_detailsUncheckedCreateNestedManyWithoutEmployeesInput
    compliance_documents?: compliance_documentsUncheckedCreateNestedManyWithoutEmployeesInput
    compliance_status?: compliance_statusUncheckedCreateNestedOneWithoutEmployeesInput
  }

  export type employeesUpdateInput = {
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_no?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    dob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aadhar_card?: NullableStringFieldUpdateOperationsInput | string | null
    pan_card?: NullableStringFieldUpdateOperationsInput | string | null
    education_certificates?: NullableStringFieldUpdateOperationsInput | string | null
    resume?: NullableStringFieldUpdateOperationsInput | string | null
    experience_certificate?: NullableStringFieldUpdateOperationsInput | string | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    experience_years?: NullableIntFieldUpdateOperationsInput | number | null
    experience_months?: NullableIntFieldUpdateOperationsInput | number | null
    employee_type?: NullableEnumemployees_employee_typeFieldUpdateOperationsInput | $Enums.employees_employee_type | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    pan_number?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: addressesUpdateManyWithoutEmployeesNestedInput
    audit_logs_audit_logs_empidToemployees?: audit_logsUpdateManyWithoutEmployees_audit_logs_empidToemployeesNestedInput
    audit_logs_audit_logs_performed_byToemployees?: audit_logsUpdateManyWithoutEmployees_audit_logs_performed_byToemployeesNestedInput
    bank_details?: bank_detailsUpdateManyWithoutEmployeesNestedInput
    compliance_documents?: compliance_documentsUpdateManyWithoutEmployeesNestedInput
    compliance_status?: compliance_statusUpdateOneWithoutEmployeesNestedInput
    users?: usersUpdateOneWithoutEmployeesNestedInput
  }

  export type employeesUncheckedUpdateInput = {
    empid?: IntFieldUpdateOperationsInput | number
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contact_no?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    dob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aadhar_card?: NullableStringFieldUpdateOperationsInput | string | null
    pan_card?: NullableStringFieldUpdateOperationsInput | string | null
    education_certificates?: NullableStringFieldUpdateOperationsInput | string | null
    resume?: NullableStringFieldUpdateOperationsInput | string | null
    experience_certificate?: NullableStringFieldUpdateOperationsInput | string | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    experience_years?: NullableIntFieldUpdateOperationsInput | number | null
    experience_months?: NullableIntFieldUpdateOperationsInput | number | null
    employee_type?: NullableEnumemployees_employee_typeFieldUpdateOperationsInput | $Enums.employees_employee_type | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    pan_number?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: addressesUncheckedUpdateManyWithoutEmployeesNestedInput
    audit_logs_audit_logs_empidToemployees?: audit_logsUncheckedUpdateManyWithoutEmployees_audit_logs_empidToemployeesNestedInput
    audit_logs_audit_logs_performed_byToemployees?: audit_logsUncheckedUpdateManyWithoutEmployees_audit_logs_performed_byToemployeesNestedInput
    bank_details?: bank_detailsUncheckedUpdateManyWithoutEmployeesNestedInput
    compliance_documents?: compliance_documentsUncheckedUpdateManyWithoutEmployeesNestedInput
    compliance_status?: compliance_statusUncheckedUpdateOneWithoutEmployeesNestedInput
  }

  export type employeesCreateManyInput = {
    empid?: number
    candidate_id?: string | null
    name?: string | null
    email?: string | null
    contact_no?: string | null
    password?: string | null
    gender?: string | null
    dob?: Date | string | null
    aadhar_card?: string | null
    pan_card?: string | null
    education_certificates?: string | null
    resume?: string | null
    experience_certificate?: string | null
    profile_photo?: string | null
    created_at?: Date | string | null
    experience_years?: number | null
    experience_months?: number | null
    employee_type?: $Enums.employees_employee_type | null
    aadhar_number?: string | null
    pan_number?: string | null
  }

  export type employeesUpdateManyMutationInput = {
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_no?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    dob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aadhar_card?: NullableStringFieldUpdateOperationsInput | string | null
    pan_card?: NullableStringFieldUpdateOperationsInput | string | null
    education_certificates?: NullableStringFieldUpdateOperationsInput | string | null
    resume?: NullableStringFieldUpdateOperationsInput | string | null
    experience_certificate?: NullableStringFieldUpdateOperationsInput | string | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    experience_years?: NullableIntFieldUpdateOperationsInput | number | null
    experience_months?: NullableIntFieldUpdateOperationsInput | number | null
    employee_type?: NullableEnumemployees_employee_typeFieldUpdateOperationsInput | $Enums.employees_employee_type | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    pan_number?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type employeesUncheckedUpdateManyInput = {
    empid?: IntFieldUpdateOperationsInput | number
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contact_no?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    dob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aadhar_card?: NullableStringFieldUpdateOperationsInput | string | null
    pan_card?: NullableStringFieldUpdateOperationsInput | string | null
    education_certificates?: NullableStringFieldUpdateOperationsInput | string | null
    resume?: NullableStringFieldUpdateOperationsInput | string | null
    experience_certificate?: NullableStringFieldUpdateOperationsInput | string | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    experience_years?: NullableIntFieldUpdateOperationsInput | number | null
    experience_months?: NullableIntFieldUpdateOperationsInput | number | null
    employee_type?: NullableEnumemployees_employee_typeFieldUpdateOperationsInput | $Enums.employees_employee_type | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    pan_number?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type main_employeeCreateInput = {
    empid: string
    candidate_id?: number | null
    email: string
    password: string
    role?: string | null
    name?: string | null
    contact?: string | null
    position?: string | null
    doj?: Date | string | null
    gender?: string | null
    dob?: Date | string | null
    address?: string | null
    employee_type?: string | null
    experience?: string | null
    profile_photo?: string | null
    aadhar_card?: string | null
    pan_card?: string | null
    education_certificates?: string | null
    resume?: string | null
    experience_certificate?: string | null
    bank_details?: string | null
    status?: string | null
    created_at?: Date | string | null
  }

  export type main_employeeUncheckedCreateInput = {
    empid: string
    candidate_id?: number | null
    email: string
    password: string
    role?: string | null
    name?: string | null
    contact?: string | null
    position?: string | null
    doj?: Date | string | null
    gender?: string | null
    dob?: Date | string | null
    address?: string | null
    employee_type?: string | null
    experience?: string | null
    profile_photo?: string | null
    aadhar_card?: string | null
    pan_card?: string | null
    education_certificates?: string | null
    resume?: string | null
    experience_certificate?: string | null
    bank_details?: string | null
    status?: string | null
    created_at?: Date | string | null
  }

  export type main_employeeUpdateInput = {
    empid?: StringFieldUpdateOperationsInput | string
    candidate_id?: NullableIntFieldUpdateOperationsInput | number | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    contact?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    doj?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    dob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    employee_type?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    aadhar_card?: NullableStringFieldUpdateOperationsInput | string | null
    pan_card?: NullableStringFieldUpdateOperationsInput | string | null
    education_certificates?: NullableStringFieldUpdateOperationsInput | string | null
    resume?: NullableStringFieldUpdateOperationsInput | string | null
    experience_certificate?: NullableStringFieldUpdateOperationsInput | string | null
    bank_details?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type main_employeeUncheckedUpdateInput = {
    empid?: StringFieldUpdateOperationsInput | string
    candidate_id?: NullableIntFieldUpdateOperationsInput | number | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    contact?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    doj?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    dob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    employee_type?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    aadhar_card?: NullableStringFieldUpdateOperationsInput | string | null
    pan_card?: NullableStringFieldUpdateOperationsInput | string | null
    education_certificates?: NullableStringFieldUpdateOperationsInput | string | null
    resume?: NullableStringFieldUpdateOperationsInput | string | null
    experience_certificate?: NullableStringFieldUpdateOperationsInput | string | null
    bank_details?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type main_employeeCreateManyInput = {
    empid: string
    candidate_id?: number | null
    email: string
    password: string
    role?: string | null
    name?: string | null
    contact?: string | null
    position?: string | null
    doj?: Date | string | null
    gender?: string | null
    dob?: Date | string | null
    address?: string | null
    employee_type?: string | null
    experience?: string | null
    profile_photo?: string | null
    aadhar_card?: string | null
    pan_card?: string | null
    education_certificates?: string | null
    resume?: string | null
    experience_certificate?: string | null
    bank_details?: string | null
    status?: string | null
    created_at?: Date | string | null
  }

  export type main_employeeUpdateManyMutationInput = {
    empid?: StringFieldUpdateOperationsInput | string
    candidate_id?: NullableIntFieldUpdateOperationsInput | number | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    contact?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    doj?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    dob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    employee_type?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    aadhar_card?: NullableStringFieldUpdateOperationsInput | string | null
    pan_card?: NullableStringFieldUpdateOperationsInput | string | null
    education_certificates?: NullableStringFieldUpdateOperationsInput | string | null
    resume?: NullableStringFieldUpdateOperationsInput | string | null
    experience_certificate?: NullableStringFieldUpdateOperationsInput | string | null
    bank_details?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type main_employeeUncheckedUpdateManyInput = {
    empid?: StringFieldUpdateOperationsInput | string
    candidate_id?: NullableIntFieldUpdateOperationsInput | number | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    contact?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    doj?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    dob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    employee_type?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    aadhar_card?: NullableStringFieldUpdateOperationsInput | string | null
    pan_card?: NullableStringFieldUpdateOperationsInput | string | null
    education_certificates?: NullableStringFieldUpdateOperationsInput | string | null
    resume?: NullableStringFieldUpdateOperationsInput | string | null
    experience_certificate?: NullableStringFieldUpdateOperationsInput | string | null
    bank_details?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type leave_typesCreateInput = {
    type_name: $Enums.leave_types_type_name
    max_days: number
    paid?: boolean | null
    leave_balances?: leave_balancesCreateNestedManyWithoutLeave_typesInput
  }

  export type leave_typesUncheckedCreateInput = {
    id?: number
    type_name: $Enums.leave_types_type_name
    max_days: number
    paid?: boolean | null
    leave_balances?: leave_balancesUncheckedCreateNestedManyWithoutLeave_typesInput
  }

  export type leave_typesUpdateInput = {
    type_name?: Enumleave_types_type_nameFieldUpdateOperationsInput | $Enums.leave_types_type_name
    max_days?: IntFieldUpdateOperationsInput | number
    paid?: NullableBoolFieldUpdateOperationsInput | boolean | null
    leave_balances?: leave_balancesUpdateManyWithoutLeave_typesNestedInput
  }

  export type leave_typesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    type_name?: Enumleave_types_type_nameFieldUpdateOperationsInput | $Enums.leave_types_type_name
    max_days?: IntFieldUpdateOperationsInput | number
    paid?: NullableBoolFieldUpdateOperationsInput | boolean | null
    leave_balances?: leave_balancesUncheckedUpdateManyWithoutLeave_typesNestedInput
  }

  export type leave_typesCreateManyInput = {
    id?: number
    type_name: $Enums.leave_types_type_name
    max_days: number
    paid?: boolean | null
  }

  export type leave_typesUpdateManyMutationInput = {
    type_name?: Enumleave_types_type_nameFieldUpdateOperationsInput | $Enums.leave_types_type_name
    max_days?: IntFieldUpdateOperationsInput | number
    paid?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type leave_typesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    type_name?: Enumleave_types_type_nameFieldUpdateOperationsInput | $Enums.leave_types_type_name
    max_days?: IntFieldUpdateOperationsInput | number
    paid?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type leave_balancesCreateInput = {
    total: number
    used?: number | null
    remaining?: number | null
    users: usersCreateNestedOneWithoutLeave_balancesInput
    leave_types: leave_typesCreateNestedOneWithoutLeave_balancesInput
  }

  export type leave_balancesUncheckedCreateInput = {
    id?: number
    empid: string
    type_id: number
    total: number
    used?: number | null
    remaining?: number | null
  }

  export type leave_balancesUpdateInput = {
    total?: IntFieldUpdateOperationsInput | number
    used?: NullableIntFieldUpdateOperationsInput | number | null
    remaining?: NullableIntFieldUpdateOperationsInput | number | null
    users?: usersUpdateOneRequiredWithoutLeave_balancesNestedInput
    leave_types?: leave_typesUpdateOneRequiredWithoutLeave_balancesNestedInput
  }

  export type leave_balancesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    empid?: StringFieldUpdateOperationsInput | string
    type_id?: IntFieldUpdateOperationsInput | number
    total?: IntFieldUpdateOperationsInput | number
    used?: NullableIntFieldUpdateOperationsInput | number | null
    remaining?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type leave_balancesCreateManyInput = {
    id?: number
    empid: string
    type_id: number
    total: number
    used?: number | null
    remaining?: number | null
  }

  export type leave_balancesUpdateManyMutationInput = {
    total?: IntFieldUpdateOperationsInput | number
    used?: NullableIntFieldUpdateOperationsInput | number | null
    remaining?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type leave_balancesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    empid?: StringFieldUpdateOperationsInput | string
    type_id?: IntFieldUpdateOperationsInput | number
    total?: IntFieldUpdateOperationsInput | number
    used?: NullableIntFieldUpdateOperationsInput | number | null
    remaining?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type leave_requestsCreateInput = {
    from_date: Date | string
    to_date: Date | string
    reason?: string | null
    status?: $Enums.leave_requests_status | null
    applied_at?: Date | string | null
    attachment?: string | null
    leave_type: string
    name: string
    users: usersCreateNestedOneWithoutLeave_requestsInput
  }

  export type leave_requestsUncheckedCreateInput = {
    id?: number
    empid: string
    from_date: Date | string
    to_date: Date | string
    reason?: string | null
    status?: $Enums.leave_requests_status | null
    applied_at?: Date | string | null
    attachment?: string | null
    leave_type: string
    name: string
  }

  export type leave_requestsUpdateInput = {
    from_date?: DateTimeFieldUpdateOperationsInput | Date | string
    to_date?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumleave_requests_statusFieldUpdateOperationsInput | $Enums.leave_requests_status | null
    applied_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attachment?: NullableStringFieldUpdateOperationsInput | string | null
    leave_type?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    users?: usersUpdateOneRequiredWithoutLeave_requestsNestedInput
  }

  export type leave_requestsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    empid?: StringFieldUpdateOperationsInput | string
    from_date?: DateTimeFieldUpdateOperationsInput | Date | string
    to_date?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumleave_requests_statusFieldUpdateOperationsInput | $Enums.leave_requests_status | null
    applied_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attachment?: NullableStringFieldUpdateOperationsInput | string | null
    leave_type?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type leave_requestsCreateManyInput = {
    id?: number
    empid: string
    from_date: Date | string
    to_date: Date | string
    reason?: string | null
    status?: $Enums.leave_requests_status | null
    applied_at?: Date | string | null
    attachment?: string | null
    leave_type: string
    name: string
  }

  export type leave_requestsUpdateManyMutationInput = {
    from_date?: DateTimeFieldUpdateOperationsInput | Date | string
    to_date?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumleave_requests_statusFieldUpdateOperationsInput | $Enums.leave_requests_status | null
    applied_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attachment?: NullableStringFieldUpdateOperationsInput | string | null
    leave_type?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type leave_requestsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    empid?: StringFieldUpdateOperationsInput | string
    from_date?: DateTimeFieldUpdateOperationsInput | Date | string
    to_date?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumleave_requests_statusFieldUpdateOperationsInput | $Enums.leave_requests_status | null
    applied_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attachment?: NullableStringFieldUpdateOperationsInput | string | null
    leave_type?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type usersCreateInput = {
    empid: string
    name: string
    email: string
    contact_number?: string | null
    password: string
    position?: string | null
    date_of_joining?: Date | string | null
    status?: string | null
    experience?: number | null
    profile_photo?: string | null
    role?: $Enums.users_role
    created_at?: Date | string | null
    verified?: $Enums.users_verified | null
    employees?: employeesCreateNestedManyWithoutUsersInput
    leave_balances?: leave_balancesCreateNestedManyWithoutUsersInput
    leave_requests?: leave_requestsCreateNestedManyWithoutUsersInput
    payroll?: payrollCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateInput = {
    id?: number
    empid: string
    name: string
    email: string
    contact_number?: string | null
    password: string
    position?: string | null
    date_of_joining?: Date | string | null
    status?: string | null
    experience?: number | null
    profile_photo?: string | null
    role?: $Enums.users_role
    created_at?: Date | string | null
    verified?: $Enums.users_verified | null
    employees?: employeesUncheckedCreateNestedManyWithoutUsersInput
    leave_balances?: leave_balancesUncheckedCreateNestedManyWithoutUsersInput
    leave_requests?: leave_requestsUncheckedCreateNestedManyWithoutUsersInput
    payroll?: payrollUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersUpdateInput = {
    empid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    contact_number?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    position?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_joining?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableIntFieldUpdateOperationsInput | number | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verified?: NullableEnumusers_verifiedFieldUpdateOperationsInput | $Enums.users_verified | null
    employees?: employeesUpdateManyWithoutUsersNestedInput
    leave_balances?: leave_balancesUpdateManyWithoutUsersNestedInput
    leave_requests?: leave_requestsUpdateManyWithoutUsersNestedInput
    payroll?: payrollUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    empid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    contact_number?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    position?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_joining?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableIntFieldUpdateOperationsInput | number | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verified?: NullableEnumusers_verifiedFieldUpdateOperationsInput | $Enums.users_verified | null
    employees?: employeesUncheckedUpdateManyWithoutUsersNestedInput
    leave_balances?: leave_balancesUncheckedUpdateManyWithoutUsersNestedInput
    leave_requests?: leave_requestsUncheckedUpdateManyWithoutUsersNestedInput
    payroll?: payrollUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateManyInput = {
    id?: number
    empid: string
    name: string
    email: string
    contact_number?: string | null
    password: string
    position?: string | null
    date_of_joining?: Date | string | null
    status?: string | null
    experience?: number | null
    profile_photo?: string | null
    role?: $Enums.users_role
    created_at?: Date | string | null
    verified?: $Enums.users_verified | null
  }

  export type usersUpdateManyMutationInput = {
    empid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    contact_number?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    position?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_joining?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableIntFieldUpdateOperationsInput | number | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verified?: NullableEnumusers_verifiedFieldUpdateOperationsInput | $Enums.users_verified | null
  }

  export type usersUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    empid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    contact_number?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    position?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_joining?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableIntFieldUpdateOperationsInput | number | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verified?: NullableEnumusers_verifiedFieldUpdateOperationsInput | $Enums.users_verified | null
  }

  export type payrollCreateInput = {
    month?: string | null
    year?: number | null
    basic_salary?: Decimal | DecimalJsLike | number | string | null
    hra?: Decimal | DecimalJsLike | number | string | null
    bonus?: Decimal | DecimalJsLike | number | string | null
    da?: Decimal | DecimalJsLike | number | string | null
    allowances?: Decimal | DecimalJsLike | number | string | null
    deductions?: Decimal | DecimalJsLike | number | string | null
    net_pay?: Decimal | DecimalJsLike | number | string | null
    generated_on?: Date | string | null
    payslip_pdf?: string | null
    pf?: Decimal | DecimalJsLike | number | string | null
    ptax?: Decimal | DecimalJsLike | number | string | null
    esic?: Decimal | DecimalJsLike | number | string | null
    users?: usersCreateNestedOneWithoutPayrollInput
  }

  export type payrollUncheckedCreateInput = {
    id?: number
    empid?: string | null
    month?: string | null
    year?: number | null
    basic_salary?: Decimal | DecimalJsLike | number | string | null
    hra?: Decimal | DecimalJsLike | number | string | null
    bonus?: Decimal | DecimalJsLike | number | string | null
    da?: Decimal | DecimalJsLike | number | string | null
    allowances?: Decimal | DecimalJsLike | number | string | null
    deductions?: Decimal | DecimalJsLike | number | string | null
    net_pay?: Decimal | DecimalJsLike | number | string | null
    generated_on?: Date | string | null
    payslip_pdf?: string | null
    pf?: Decimal | DecimalJsLike | number | string | null
    ptax?: Decimal | DecimalJsLike | number | string | null
    esic?: Decimal | DecimalJsLike | number | string | null
  }

  export type payrollUpdateInput = {
    month?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    basic_salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    hra?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    da?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    allowances?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deductions?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    net_pay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    generated_on?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payslip_pdf?: NullableStringFieldUpdateOperationsInput | string | null
    pf?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ptax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    esic?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    users?: usersUpdateOneWithoutPayrollNestedInput
  }

  export type payrollUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    empid?: NullableStringFieldUpdateOperationsInput | string | null
    month?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    basic_salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    hra?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    da?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    allowances?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deductions?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    net_pay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    generated_on?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payslip_pdf?: NullableStringFieldUpdateOperationsInput | string | null
    pf?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ptax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    esic?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type payrollCreateManyInput = {
    id?: number
    empid?: string | null
    month?: string | null
    year?: number | null
    basic_salary?: Decimal | DecimalJsLike | number | string | null
    hra?: Decimal | DecimalJsLike | number | string | null
    bonus?: Decimal | DecimalJsLike | number | string | null
    da?: Decimal | DecimalJsLike | number | string | null
    allowances?: Decimal | DecimalJsLike | number | string | null
    deductions?: Decimal | DecimalJsLike | number | string | null
    net_pay?: Decimal | DecimalJsLike | number | string | null
    generated_on?: Date | string | null
    payslip_pdf?: string | null
    pf?: Decimal | DecimalJsLike | number | string | null
    ptax?: Decimal | DecimalJsLike | number | string | null
    esic?: Decimal | DecimalJsLike | number | string | null
  }

  export type payrollUpdateManyMutationInput = {
    month?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    basic_salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    hra?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    da?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    allowances?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deductions?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    net_pay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    generated_on?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payslip_pdf?: NullableStringFieldUpdateOperationsInput | string | null
    pf?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ptax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    esic?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type payrollUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    empid?: NullableStringFieldUpdateOperationsInput | string | null
    month?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    basic_salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    hra?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    da?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    allowances?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deductions?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    net_pay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    generated_on?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payslip_pdf?: NullableStringFieldUpdateOperationsInput | string | null
    pf?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ptax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    esic?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type EmployeesScalarRelationFilter = {
    is?: employeesWhereInput
    isNot?: employeesWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type addressesCountOrderByAggregateInput = {
    id?: SortOrder
    employee_id?: SortOrder
    address_line1?: SortOrder
    address_line2?: SortOrder
    city?: SortOrder
    state?: SortOrder
    country?: SortOrder
    pincode?: SortOrder
  }

  export type addressesAvgOrderByAggregateInput = {
    id?: SortOrder
    employee_id?: SortOrder
  }

  export type addressesMaxOrderByAggregateInput = {
    id?: SortOrder
    employee_id?: SortOrder
    address_line1?: SortOrder
    address_line2?: SortOrder
    city?: SortOrder
    state?: SortOrder
    country?: SortOrder
    pincode?: SortOrder
  }

  export type addressesMinOrderByAggregateInput = {
    id?: SortOrder
    employee_id?: SortOrder
    address_line1?: SortOrder
    address_line2?: SortOrder
    city?: SortOrder
    state?: SortOrder
    country?: SortOrder
    pincode?: SortOrder
  }

  export type addressesSumOrderByAggregateInput = {
    id?: SortOrder
    employee_id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type Enumattendance_attendance_statusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.attendance_attendance_status | Enumattendance_attendance_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.attendance_attendance_status[] | ListEnumattendance_attendance_statusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.attendance_attendance_status[] | ListEnumattendance_attendance_statusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumattendance_attendance_statusNullableFilter<$PrismaModel> | $Enums.attendance_attendance_status | null
  }

  export type attendanceCountOrderByAggregateInput = {
    id?: SortOrder
    empid?: SortOrder
    check_in?: SortOrder
    check_out?: SortOrder
    total_hours?: SortOrder
    date?: SortOrder
    created_at?: SortOrder
    attendance_status?: SortOrder
  }

  export type attendanceAvgOrderByAggregateInput = {
    id?: SortOrder
    total_hours?: SortOrder
  }

  export type attendanceMaxOrderByAggregateInput = {
    id?: SortOrder
    empid?: SortOrder
    check_in?: SortOrder
    check_out?: SortOrder
    total_hours?: SortOrder
    date?: SortOrder
    created_at?: SortOrder
    attendance_status?: SortOrder
  }

  export type attendanceMinOrderByAggregateInput = {
    id?: SortOrder
    empid?: SortOrder
    check_in?: SortOrder
    check_out?: SortOrder
    total_hours?: SortOrder
    date?: SortOrder
    created_at?: SortOrder
    attendance_status?: SortOrder
  }

  export type attendanceSumOrderByAggregateInput = {
    id?: SortOrder
    total_hours?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type Enumattendance_attendance_statusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.attendance_attendance_status | Enumattendance_attendance_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.attendance_attendance_status[] | ListEnumattendance_attendance_statusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.attendance_attendance_status[] | ListEnumattendance_attendance_statusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumattendance_attendance_statusNullableWithAggregatesFilter<$PrismaModel> | $Enums.attendance_attendance_status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumattendance_attendance_statusNullableFilter<$PrismaModel>
    _max?: NestedEnumattendance_attendance_statusNullableFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type EmployeesNullableScalarRelationFilter = {
    is?: employeesWhereInput | null
    isNot?: employeesWhereInput | null
  }

  export type audit_logsCountOrderByAggregateInput = {
    id?: SortOrder
    empid?: SortOrder
    performed_by?: SortOrder
    action?: SortOrder
    timestamp?: SortOrder
  }

  export type audit_logsAvgOrderByAggregateInput = {
    id?: SortOrder
    empid?: SortOrder
    performed_by?: SortOrder
  }

  export type audit_logsMaxOrderByAggregateInput = {
    id?: SortOrder
    empid?: SortOrder
    performed_by?: SortOrder
    action?: SortOrder
    timestamp?: SortOrder
  }

  export type audit_logsMinOrderByAggregateInput = {
    id?: SortOrder
    empid?: SortOrder
    performed_by?: SortOrder
    action?: SortOrder
    timestamp?: SortOrder
  }

  export type audit_logsSumOrderByAggregateInput = {
    id?: SortOrder
    empid?: SortOrder
    performed_by?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type bank_detailsCountOrderByAggregateInput = {
    id?: SortOrder
    employee_id?: SortOrder
    account_holder_name?: SortOrder
    bank_name?: SortOrder
    branch_name?: SortOrder
    account_number?: SortOrder
    ifsc_code?: SortOrder
    checkbook_document?: SortOrder
  }

  export type bank_detailsAvgOrderByAggregateInput = {
    id?: SortOrder
    employee_id?: SortOrder
  }

  export type bank_detailsMaxOrderByAggregateInput = {
    id?: SortOrder
    employee_id?: SortOrder
    account_holder_name?: SortOrder
    bank_name?: SortOrder
    branch_name?: SortOrder
    account_number?: SortOrder
    ifsc_code?: SortOrder
    checkbook_document?: SortOrder
  }

  export type bank_detailsMinOrderByAggregateInput = {
    id?: SortOrder
    employee_id?: SortOrder
    account_holder_name?: SortOrder
    bank_name?: SortOrder
    branch_name?: SortOrder
    account_number?: SortOrder
    ifsc_code?: SortOrder
    checkbook_document?: SortOrder
  }

  export type bank_detailsSumOrderByAggregateInput = {
    id?: SortOrder
    employee_id?: SortOrder
  }

  export type Enumcandidates_statusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.candidates_status | Enumcandidates_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.candidates_status[] | ListEnumcandidates_statusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.candidates_status[] | ListEnumcandidates_statusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumcandidates_statusNullableFilter<$PrismaModel> | $Enums.candidates_status | null
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type candidatesCountOrderByAggregateInput = {
    id?: SortOrder
    candidate_id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    contact_number?: SortOrder
    interview_date?: SortOrder
    resume?: SortOrder
    form_link?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    form_token?: SortOrder
    interview_mail_status?: SortOrder
    form_status?: SortOrder
    verification?: SortOrder
  }

  export type candidatesAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type candidatesMaxOrderByAggregateInput = {
    id?: SortOrder
    candidate_id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    contact_number?: SortOrder
    interview_date?: SortOrder
    resume?: SortOrder
    form_link?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    form_token?: SortOrder
    interview_mail_status?: SortOrder
    form_status?: SortOrder
    verification?: SortOrder
  }

  export type candidatesMinOrderByAggregateInput = {
    id?: SortOrder
    candidate_id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    contact_number?: SortOrder
    interview_date?: SortOrder
    resume?: SortOrder
    form_link?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    form_token?: SortOrder
    interview_mail_status?: SortOrder
    form_status?: SortOrder
    verification?: SortOrder
  }

  export type candidatesSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Enumcandidates_statusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.candidates_status | Enumcandidates_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.candidates_status[] | ListEnumcandidates_statusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.candidates_status[] | ListEnumcandidates_statusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumcandidates_statusNullableWithAggregatesFilter<$PrismaModel> | $Enums.candidates_status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumcandidates_statusNullableFilter<$PrismaModel>
    _max?: NestedEnumcandidates_statusNullableFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type compliance_documentsCountOrderByAggregateInput = {
    id?: SortOrder
    empid?: SortOrder
    doc_type?: SortOrder
    file_path?: SortOrder
    uploaded_at?: SortOrder
    expires_on?: SortOrder
  }

  export type compliance_documentsAvgOrderByAggregateInput = {
    id?: SortOrder
    empid?: SortOrder
  }

  export type compliance_documentsMaxOrderByAggregateInput = {
    id?: SortOrder
    empid?: SortOrder
    doc_type?: SortOrder
    file_path?: SortOrder
    uploaded_at?: SortOrder
    expires_on?: SortOrder
  }

  export type compliance_documentsMinOrderByAggregateInput = {
    id?: SortOrder
    empid?: SortOrder
    doc_type?: SortOrder
    file_path?: SortOrder
    uploaded_at?: SortOrder
    expires_on?: SortOrder
  }

  export type compliance_documentsSumOrderByAggregateInput = {
    id?: SortOrder
    empid?: SortOrder
  }

  export type Enumcompliance_status_overall_statusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.compliance_status_overall_status | Enumcompliance_status_overall_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.compliance_status_overall_status[] | ListEnumcompliance_status_overall_statusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.compliance_status_overall_status[] | ListEnumcompliance_status_overall_statusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumcompliance_status_overall_statusNullableFilter<$PrismaModel> | $Enums.compliance_status_overall_status | null
  }

  export type compliance_statusCountOrderByAggregateInput = {
    empid?: SortOrder
    overall_status?: SortOrder
    last_updated?: SortOrder
  }

  export type compliance_statusAvgOrderByAggregateInput = {
    empid?: SortOrder
  }

  export type compliance_statusMaxOrderByAggregateInput = {
    empid?: SortOrder
    overall_status?: SortOrder
    last_updated?: SortOrder
  }

  export type compliance_statusMinOrderByAggregateInput = {
    empid?: SortOrder
    overall_status?: SortOrder
    last_updated?: SortOrder
  }

  export type compliance_statusSumOrderByAggregateInput = {
    empid?: SortOrder
  }

  export type Enumcompliance_status_overall_statusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.compliance_status_overall_status | Enumcompliance_status_overall_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.compliance_status_overall_status[] | ListEnumcompliance_status_overall_statusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.compliance_status_overall_status[] | ListEnumcompliance_status_overall_statusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumcompliance_status_overall_statusNullableWithAggregatesFilter<$PrismaModel> | $Enums.compliance_status_overall_status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumcompliance_status_overall_statusNullableFilter<$PrismaModel>
    _max?: NestedEnumcompliance_status_overall_statusNullableFilter<$PrismaModel>
  }

  export type Enumemployees_employee_typeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.employees_employee_type | Enumemployees_employee_typeFieldRefInput<$PrismaModel> | null
    in?: $Enums.employees_employee_type[] | ListEnumemployees_employee_typeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.employees_employee_type[] | ListEnumemployees_employee_typeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumemployees_employee_typeNullableFilter<$PrismaModel> | $Enums.employees_employee_type | null
  }

  export type AddressesListRelationFilter = {
    every?: addressesWhereInput
    some?: addressesWhereInput
    none?: addressesWhereInput
  }

  export type Audit_logsListRelationFilter = {
    every?: audit_logsWhereInput
    some?: audit_logsWhereInput
    none?: audit_logsWhereInput
  }

  export type Bank_detailsListRelationFilter = {
    every?: bank_detailsWhereInput
    some?: bank_detailsWhereInput
    none?: bank_detailsWhereInput
  }

  export type Compliance_documentsListRelationFilter = {
    every?: compliance_documentsWhereInput
    some?: compliance_documentsWhereInput
    none?: compliance_documentsWhereInput
  }

  export type Compliance_statusNullableScalarRelationFilter = {
    is?: compliance_statusWhereInput | null
    isNot?: compliance_statusWhereInput | null
  }

  export type UsersNullableScalarRelationFilter = {
    is?: usersWhereInput | null
    isNot?: usersWhereInput | null
  }

  export type addressesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type audit_logsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type bank_detailsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type compliance_documentsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type employeesCountOrderByAggregateInput = {
    empid?: SortOrder
    candidate_id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    contact_no?: SortOrder
    password?: SortOrder
    gender?: SortOrder
    dob?: SortOrder
    aadhar_card?: SortOrder
    pan_card?: SortOrder
    education_certificates?: SortOrder
    resume?: SortOrder
    experience_certificate?: SortOrder
    profile_photo?: SortOrder
    created_at?: SortOrder
    experience_years?: SortOrder
    experience_months?: SortOrder
    employee_type?: SortOrder
    aadhar_number?: SortOrder
    pan_number?: SortOrder
  }

  export type employeesAvgOrderByAggregateInput = {
    empid?: SortOrder
    experience_years?: SortOrder
    experience_months?: SortOrder
  }

  export type employeesMaxOrderByAggregateInput = {
    empid?: SortOrder
    candidate_id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    contact_no?: SortOrder
    password?: SortOrder
    gender?: SortOrder
    dob?: SortOrder
    aadhar_card?: SortOrder
    pan_card?: SortOrder
    education_certificates?: SortOrder
    resume?: SortOrder
    experience_certificate?: SortOrder
    profile_photo?: SortOrder
    created_at?: SortOrder
    experience_years?: SortOrder
    experience_months?: SortOrder
    employee_type?: SortOrder
    aadhar_number?: SortOrder
    pan_number?: SortOrder
  }

  export type employeesMinOrderByAggregateInput = {
    empid?: SortOrder
    candidate_id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    contact_no?: SortOrder
    password?: SortOrder
    gender?: SortOrder
    dob?: SortOrder
    aadhar_card?: SortOrder
    pan_card?: SortOrder
    education_certificates?: SortOrder
    resume?: SortOrder
    experience_certificate?: SortOrder
    profile_photo?: SortOrder
    created_at?: SortOrder
    experience_years?: SortOrder
    experience_months?: SortOrder
    employee_type?: SortOrder
    aadhar_number?: SortOrder
    pan_number?: SortOrder
  }

  export type employeesSumOrderByAggregateInput = {
    empid?: SortOrder
    experience_years?: SortOrder
    experience_months?: SortOrder
  }

  export type Enumemployees_employee_typeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.employees_employee_type | Enumemployees_employee_typeFieldRefInput<$PrismaModel> | null
    in?: $Enums.employees_employee_type[] | ListEnumemployees_employee_typeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.employees_employee_type[] | ListEnumemployees_employee_typeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumemployees_employee_typeNullableWithAggregatesFilter<$PrismaModel> | $Enums.employees_employee_type | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumemployees_employee_typeNullableFilter<$PrismaModel>
    _max?: NestedEnumemployees_employee_typeNullableFilter<$PrismaModel>
  }

  export type main_employeeCountOrderByAggregateInput = {
    empid?: SortOrder
    candidate_id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    name?: SortOrder
    contact?: SortOrder
    position?: SortOrder
    doj?: SortOrder
    gender?: SortOrder
    dob?: SortOrder
    address?: SortOrder
    employee_type?: SortOrder
    experience?: SortOrder
    profile_photo?: SortOrder
    aadhar_card?: SortOrder
    pan_card?: SortOrder
    education_certificates?: SortOrder
    resume?: SortOrder
    experience_certificate?: SortOrder
    bank_details?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
  }

  export type main_employeeAvgOrderByAggregateInput = {
    candidate_id?: SortOrder
  }

  export type main_employeeMaxOrderByAggregateInput = {
    empid?: SortOrder
    candidate_id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    name?: SortOrder
    contact?: SortOrder
    position?: SortOrder
    doj?: SortOrder
    gender?: SortOrder
    dob?: SortOrder
    address?: SortOrder
    employee_type?: SortOrder
    experience?: SortOrder
    profile_photo?: SortOrder
    aadhar_card?: SortOrder
    pan_card?: SortOrder
    education_certificates?: SortOrder
    resume?: SortOrder
    experience_certificate?: SortOrder
    bank_details?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
  }

  export type main_employeeMinOrderByAggregateInput = {
    empid?: SortOrder
    candidate_id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    name?: SortOrder
    contact?: SortOrder
    position?: SortOrder
    doj?: SortOrder
    gender?: SortOrder
    dob?: SortOrder
    address?: SortOrder
    employee_type?: SortOrder
    experience?: SortOrder
    profile_photo?: SortOrder
    aadhar_card?: SortOrder
    pan_card?: SortOrder
    education_certificates?: SortOrder
    resume?: SortOrder
    experience_certificate?: SortOrder
    bank_details?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
  }

  export type main_employeeSumOrderByAggregateInput = {
    candidate_id?: SortOrder
  }

  export type Enumleave_types_type_nameFilter<$PrismaModel = never> = {
    equals?: $Enums.leave_types_type_name | Enumleave_types_type_nameFieldRefInput<$PrismaModel>
    in?: $Enums.leave_types_type_name[] | ListEnumleave_types_type_nameFieldRefInput<$PrismaModel>
    notIn?: $Enums.leave_types_type_name[] | ListEnumleave_types_type_nameFieldRefInput<$PrismaModel>
    not?: NestedEnumleave_types_type_nameFilter<$PrismaModel> | $Enums.leave_types_type_name
  }

  export type Leave_balancesListRelationFilter = {
    every?: leave_balancesWhereInput
    some?: leave_balancesWhereInput
    none?: leave_balancesWhereInput
  }

  export type leave_balancesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type leave_typesCountOrderByAggregateInput = {
    id?: SortOrder
    type_name?: SortOrder
    max_days?: SortOrder
    paid?: SortOrder
  }

  export type leave_typesAvgOrderByAggregateInput = {
    id?: SortOrder
    max_days?: SortOrder
  }

  export type leave_typesMaxOrderByAggregateInput = {
    id?: SortOrder
    type_name?: SortOrder
    max_days?: SortOrder
    paid?: SortOrder
  }

  export type leave_typesMinOrderByAggregateInput = {
    id?: SortOrder
    type_name?: SortOrder
    max_days?: SortOrder
    paid?: SortOrder
  }

  export type leave_typesSumOrderByAggregateInput = {
    id?: SortOrder
    max_days?: SortOrder
  }

  export type Enumleave_types_type_nameWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.leave_types_type_name | Enumleave_types_type_nameFieldRefInput<$PrismaModel>
    in?: $Enums.leave_types_type_name[] | ListEnumleave_types_type_nameFieldRefInput<$PrismaModel>
    notIn?: $Enums.leave_types_type_name[] | ListEnumleave_types_type_nameFieldRefInput<$PrismaModel>
    not?: NestedEnumleave_types_type_nameWithAggregatesFilter<$PrismaModel> | $Enums.leave_types_type_name
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumleave_types_type_nameFilter<$PrismaModel>
    _max?: NestedEnumleave_types_type_nameFilter<$PrismaModel>
  }

  export type UsersScalarRelationFilter = {
    is?: usersWhereInput
    isNot?: usersWhereInput
  }

  export type Leave_typesScalarRelationFilter = {
    is?: leave_typesWhereInput
    isNot?: leave_typesWhereInput
  }

  export type leave_balancesCountOrderByAggregateInput = {
    id?: SortOrder
    empid?: SortOrder
    type_id?: SortOrder
    total?: SortOrder
    used?: SortOrder
    remaining?: SortOrder
  }

  export type leave_balancesAvgOrderByAggregateInput = {
    id?: SortOrder
    type_id?: SortOrder
    total?: SortOrder
    used?: SortOrder
    remaining?: SortOrder
  }

  export type leave_balancesMaxOrderByAggregateInput = {
    id?: SortOrder
    empid?: SortOrder
    type_id?: SortOrder
    total?: SortOrder
    used?: SortOrder
    remaining?: SortOrder
  }

  export type leave_balancesMinOrderByAggregateInput = {
    id?: SortOrder
    empid?: SortOrder
    type_id?: SortOrder
    total?: SortOrder
    used?: SortOrder
    remaining?: SortOrder
  }

  export type leave_balancesSumOrderByAggregateInput = {
    id?: SortOrder
    type_id?: SortOrder
    total?: SortOrder
    used?: SortOrder
    remaining?: SortOrder
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type Enumleave_requests_statusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.leave_requests_status | Enumleave_requests_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.leave_requests_status[] | ListEnumleave_requests_statusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.leave_requests_status[] | ListEnumleave_requests_statusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumleave_requests_statusNullableFilter<$PrismaModel> | $Enums.leave_requests_status | null
  }

  export type leave_requestsCountOrderByAggregateInput = {
    id?: SortOrder
    empid?: SortOrder
    from_date?: SortOrder
    to_date?: SortOrder
    reason?: SortOrder
    status?: SortOrder
    applied_at?: SortOrder
    attachment?: SortOrder
    leave_type?: SortOrder
    name?: SortOrder
  }

  export type leave_requestsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type leave_requestsMaxOrderByAggregateInput = {
    id?: SortOrder
    empid?: SortOrder
    from_date?: SortOrder
    to_date?: SortOrder
    reason?: SortOrder
    status?: SortOrder
    applied_at?: SortOrder
    attachment?: SortOrder
    leave_type?: SortOrder
    name?: SortOrder
  }

  export type leave_requestsMinOrderByAggregateInput = {
    id?: SortOrder
    empid?: SortOrder
    from_date?: SortOrder
    to_date?: SortOrder
    reason?: SortOrder
    status?: SortOrder
    applied_at?: SortOrder
    attachment?: SortOrder
    leave_type?: SortOrder
    name?: SortOrder
  }

  export type leave_requestsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type Enumleave_requests_statusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.leave_requests_status | Enumleave_requests_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.leave_requests_status[] | ListEnumleave_requests_statusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.leave_requests_status[] | ListEnumleave_requests_statusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumleave_requests_statusNullableWithAggregatesFilter<$PrismaModel> | $Enums.leave_requests_status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumleave_requests_statusNullableFilter<$PrismaModel>
    _max?: NestedEnumleave_requests_statusNullableFilter<$PrismaModel>
  }

  export type Enumusers_roleFilter<$PrismaModel = never> = {
    equals?: $Enums.users_role | Enumusers_roleFieldRefInput<$PrismaModel>
    in?: $Enums.users_role[] | ListEnumusers_roleFieldRefInput<$PrismaModel>
    notIn?: $Enums.users_role[] | ListEnumusers_roleFieldRefInput<$PrismaModel>
    not?: NestedEnumusers_roleFilter<$PrismaModel> | $Enums.users_role
  }

  export type Enumusers_verifiedNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.users_verified | Enumusers_verifiedFieldRefInput<$PrismaModel> | null
    in?: $Enums.users_verified[] | ListEnumusers_verifiedFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.users_verified[] | ListEnumusers_verifiedFieldRefInput<$PrismaModel> | null
    not?: NestedEnumusers_verifiedNullableFilter<$PrismaModel> | $Enums.users_verified | null
  }

  export type EmployeesListRelationFilter = {
    every?: employeesWhereInput
    some?: employeesWhereInput
    none?: employeesWhereInput
  }

  export type Leave_requestsListRelationFilter = {
    every?: leave_requestsWhereInput
    some?: leave_requestsWhereInput
    none?: leave_requestsWhereInput
  }

  export type PayrollListRelationFilter = {
    every?: payrollWhereInput
    some?: payrollWhereInput
    none?: payrollWhereInput
  }

  export type employeesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type leave_requestsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type payrollOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usersCountOrderByAggregateInput = {
    id?: SortOrder
    empid?: SortOrder
    name?: SortOrder
    email?: SortOrder
    contact_number?: SortOrder
    password?: SortOrder
    position?: SortOrder
    date_of_joining?: SortOrder
    status?: SortOrder
    experience?: SortOrder
    profile_photo?: SortOrder
    role?: SortOrder
    created_at?: SortOrder
    verified?: SortOrder
  }

  export type usersAvgOrderByAggregateInput = {
    id?: SortOrder
    experience?: SortOrder
  }

  export type usersMaxOrderByAggregateInput = {
    id?: SortOrder
    empid?: SortOrder
    name?: SortOrder
    email?: SortOrder
    contact_number?: SortOrder
    password?: SortOrder
    position?: SortOrder
    date_of_joining?: SortOrder
    status?: SortOrder
    experience?: SortOrder
    profile_photo?: SortOrder
    role?: SortOrder
    created_at?: SortOrder
    verified?: SortOrder
  }

  export type usersMinOrderByAggregateInput = {
    id?: SortOrder
    empid?: SortOrder
    name?: SortOrder
    email?: SortOrder
    contact_number?: SortOrder
    password?: SortOrder
    position?: SortOrder
    date_of_joining?: SortOrder
    status?: SortOrder
    experience?: SortOrder
    profile_photo?: SortOrder
    role?: SortOrder
    created_at?: SortOrder
    verified?: SortOrder
  }

  export type usersSumOrderByAggregateInput = {
    id?: SortOrder
    experience?: SortOrder
  }

  export type Enumusers_roleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.users_role | Enumusers_roleFieldRefInput<$PrismaModel>
    in?: $Enums.users_role[] | ListEnumusers_roleFieldRefInput<$PrismaModel>
    notIn?: $Enums.users_role[] | ListEnumusers_roleFieldRefInput<$PrismaModel>
    not?: NestedEnumusers_roleWithAggregatesFilter<$PrismaModel> | $Enums.users_role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumusers_roleFilter<$PrismaModel>
    _max?: NestedEnumusers_roleFilter<$PrismaModel>
  }

  export type Enumusers_verifiedNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.users_verified | Enumusers_verifiedFieldRefInput<$PrismaModel> | null
    in?: $Enums.users_verified[] | ListEnumusers_verifiedFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.users_verified[] | ListEnumusers_verifiedFieldRefInput<$PrismaModel> | null
    not?: NestedEnumusers_verifiedNullableWithAggregatesFilter<$PrismaModel> | $Enums.users_verified | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumusers_verifiedNullableFilter<$PrismaModel>
    _max?: NestedEnumusers_verifiedNullableFilter<$PrismaModel>
  }

  export type payrollCountOrderByAggregateInput = {
    id?: SortOrder
    empid?: SortOrder
    month?: SortOrder
    year?: SortOrder
    basic_salary?: SortOrder
    hra?: SortOrder
    bonus?: SortOrder
    da?: SortOrder
    allowances?: SortOrder
    deductions?: SortOrder
    net_pay?: SortOrder
    generated_on?: SortOrder
    payslip_pdf?: SortOrder
    pf?: SortOrder
    ptax?: SortOrder
    esic?: SortOrder
  }

  export type payrollAvgOrderByAggregateInput = {
    id?: SortOrder
    year?: SortOrder
    basic_salary?: SortOrder
    hra?: SortOrder
    bonus?: SortOrder
    da?: SortOrder
    allowances?: SortOrder
    deductions?: SortOrder
    net_pay?: SortOrder
    pf?: SortOrder
    ptax?: SortOrder
    esic?: SortOrder
  }

  export type payrollMaxOrderByAggregateInput = {
    id?: SortOrder
    empid?: SortOrder
    month?: SortOrder
    year?: SortOrder
    basic_salary?: SortOrder
    hra?: SortOrder
    bonus?: SortOrder
    da?: SortOrder
    allowances?: SortOrder
    deductions?: SortOrder
    net_pay?: SortOrder
    generated_on?: SortOrder
    payslip_pdf?: SortOrder
    pf?: SortOrder
    ptax?: SortOrder
    esic?: SortOrder
  }

  export type payrollMinOrderByAggregateInput = {
    id?: SortOrder
    empid?: SortOrder
    month?: SortOrder
    year?: SortOrder
    basic_salary?: SortOrder
    hra?: SortOrder
    bonus?: SortOrder
    da?: SortOrder
    allowances?: SortOrder
    deductions?: SortOrder
    net_pay?: SortOrder
    generated_on?: SortOrder
    payslip_pdf?: SortOrder
    pf?: SortOrder
    ptax?: SortOrder
    esic?: SortOrder
  }

  export type payrollSumOrderByAggregateInput = {
    id?: SortOrder
    year?: SortOrder
    basic_salary?: SortOrder
    hra?: SortOrder
    bonus?: SortOrder
    da?: SortOrder
    allowances?: SortOrder
    deductions?: SortOrder
    net_pay?: SortOrder
    pf?: SortOrder
    ptax?: SortOrder
    esic?: SortOrder
  }

  export type employeesCreateNestedOneWithoutAddressesInput = {
    create?: XOR<employeesCreateWithoutAddressesInput, employeesUncheckedCreateWithoutAddressesInput>
    connectOrCreate?: employeesCreateOrConnectWithoutAddressesInput
    connect?: employeesWhereUniqueInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type employeesUpdateOneRequiredWithoutAddressesNestedInput = {
    create?: XOR<employeesCreateWithoutAddressesInput, employeesUncheckedCreateWithoutAddressesInput>
    connectOrCreate?: employeesCreateOrConnectWithoutAddressesInput
    upsert?: employeesUpsertWithoutAddressesInput
    connect?: employeesWhereUniqueInput
    update?: XOR<XOR<employeesUpdateToOneWithWhereWithoutAddressesInput, employeesUpdateWithoutAddressesInput>, employeesUncheckedUpdateWithoutAddressesInput>
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableEnumattendance_attendance_statusFieldUpdateOperationsInput = {
    set?: $Enums.attendance_attendance_status | null
  }

  export type employeesCreateNestedOneWithoutAudit_logs_audit_logs_empidToemployeesInput = {
    create?: XOR<employeesCreateWithoutAudit_logs_audit_logs_empidToemployeesInput, employeesUncheckedCreateWithoutAudit_logs_audit_logs_empidToemployeesInput>
    connectOrCreate?: employeesCreateOrConnectWithoutAudit_logs_audit_logs_empidToemployeesInput
    connect?: employeesWhereUniqueInput
  }

  export type employeesCreateNestedOneWithoutAudit_logs_audit_logs_performed_byToemployeesInput = {
    create?: XOR<employeesCreateWithoutAudit_logs_audit_logs_performed_byToemployeesInput, employeesUncheckedCreateWithoutAudit_logs_audit_logs_performed_byToemployeesInput>
    connectOrCreate?: employeesCreateOrConnectWithoutAudit_logs_audit_logs_performed_byToemployeesInput
    connect?: employeesWhereUniqueInput
  }

  export type employeesUpdateOneWithoutAudit_logs_audit_logs_empidToemployeesNestedInput = {
    create?: XOR<employeesCreateWithoutAudit_logs_audit_logs_empidToemployeesInput, employeesUncheckedCreateWithoutAudit_logs_audit_logs_empidToemployeesInput>
    connectOrCreate?: employeesCreateOrConnectWithoutAudit_logs_audit_logs_empidToemployeesInput
    upsert?: employeesUpsertWithoutAudit_logs_audit_logs_empidToemployeesInput
    disconnect?: employeesWhereInput | boolean
    delete?: employeesWhereInput | boolean
    connect?: employeesWhereUniqueInput
    update?: XOR<XOR<employeesUpdateToOneWithWhereWithoutAudit_logs_audit_logs_empidToemployeesInput, employeesUpdateWithoutAudit_logs_audit_logs_empidToemployeesInput>, employeesUncheckedUpdateWithoutAudit_logs_audit_logs_empidToemployeesInput>
  }

  export type employeesUpdateOneWithoutAudit_logs_audit_logs_performed_byToemployeesNestedInput = {
    create?: XOR<employeesCreateWithoutAudit_logs_audit_logs_performed_byToemployeesInput, employeesUncheckedCreateWithoutAudit_logs_audit_logs_performed_byToemployeesInput>
    connectOrCreate?: employeesCreateOrConnectWithoutAudit_logs_audit_logs_performed_byToemployeesInput
    upsert?: employeesUpsertWithoutAudit_logs_audit_logs_performed_byToemployeesInput
    disconnect?: employeesWhereInput | boolean
    delete?: employeesWhereInput | boolean
    connect?: employeesWhereUniqueInput
    update?: XOR<XOR<employeesUpdateToOneWithWhereWithoutAudit_logs_audit_logs_performed_byToemployeesInput, employeesUpdateWithoutAudit_logs_audit_logs_performed_byToemployeesInput>, employeesUncheckedUpdateWithoutAudit_logs_audit_logs_performed_byToemployeesInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type employeesCreateNestedOneWithoutBank_detailsInput = {
    create?: XOR<employeesCreateWithoutBank_detailsInput, employeesUncheckedCreateWithoutBank_detailsInput>
    connectOrCreate?: employeesCreateOrConnectWithoutBank_detailsInput
    connect?: employeesWhereUniqueInput
  }

  export type employeesUpdateOneRequiredWithoutBank_detailsNestedInput = {
    create?: XOR<employeesCreateWithoutBank_detailsInput, employeesUncheckedCreateWithoutBank_detailsInput>
    connectOrCreate?: employeesCreateOrConnectWithoutBank_detailsInput
    upsert?: employeesUpsertWithoutBank_detailsInput
    connect?: employeesWhereUniqueInput
    update?: XOR<XOR<employeesUpdateToOneWithWhereWithoutBank_detailsInput, employeesUpdateWithoutBank_detailsInput>, employeesUncheckedUpdateWithoutBank_detailsInput>
  }

  export type NullableEnumcandidates_statusFieldUpdateOperationsInput = {
    set?: $Enums.candidates_status | null
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type employeesCreateNestedOneWithoutCompliance_documentsInput = {
    create?: XOR<employeesCreateWithoutCompliance_documentsInput, employeesUncheckedCreateWithoutCompliance_documentsInput>
    connectOrCreate?: employeesCreateOrConnectWithoutCompliance_documentsInput
    connect?: employeesWhereUniqueInput
  }

  export type employeesUpdateOneWithoutCompliance_documentsNestedInput = {
    create?: XOR<employeesCreateWithoutCompliance_documentsInput, employeesUncheckedCreateWithoutCompliance_documentsInput>
    connectOrCreate?: employeesCreateOrConnectWithoutCompliance_documentsInput
    upsert?: employeesUpsertWithoutCompliance_documentsInput
    disconnect?: employeesWhereInput | boolean
    delete?: employeesWhereInput | boolean
    connect?: employeesWhereUniqueInput
    update?: XOR<XOR<employeesUpdateToOneWithWhereWithoutCompliance_documentsInput, employeesUpdateWithoutCompliance_documentsInput>, employeesUncheckedUpdateWithoutCompliance_documentsInput>
  }

  export type employeesCreateNestedOneWithoutCompliance_statusInput = {
    create?: XOR<employeesCreateWithoutCompliance_statusInput, employeesUncheckedCreateWithoutCompliance_statusInput>
    connectOrCreate?: employeesCreateOrConnectWithoutCompliance_statusInput
    connect?: employeesWhereUniqueInput
  }

  export type NullableEnumcompliance_status_overall_statusFieldUpdateOperationsInput = {
    set?: $Enums.compliance_status_overall_status | null
  }

  export type employeesUpdateOneRequiredWithoutCompliance_statusNestedInput = {
    create?: XOR<employeesCreateWithoutCompliance_statusInput, employeesUncheckedCreateWithoutCompliance_statusInput>
    connectOrCreate?: employeesCreateOrConnectWithoutCompliance_statusInput
    upsert?: employeesUpsertWithoutCompliance_statusInput
    connect?: employeesWhereUniqueInput
    update?: XOR<XOR<employeesUpdateToOneWithWhereWithoutCompliance_statusInput, employeesUpdateWithoutCompliance_statusInput>, employeesUncheckedUpdateWithoutCompliance_statusInput>
  }

  export type addressesCreateNestedManyWithoutEmployeesInput = {
    create?: XOR<addressesCreateWithoutEmployeesInput, addressesUncheckedCreateWithoutEmployeesInput> | addressesCreateWithoutEmployeesInput[] | addressesUncheckedCreateWithoutEmployeesInput[]
    connectOrCreate?: addressesCreateOrConnectWithoutEmployeesInput | addressesCreateOrConnectWithoutEmployeesInput[]
    createMany?: addressesCreateManyEmployeesInputEnvelope
    connect?: addressesWhereUniqueInput | addressesWhereUniqueInput[]
  }

  export type audit_logsCreateNestedManyWithoutEmployees_audit_logs_empidToemployeesInput = {
    create?: XOR<audit_logsCreateWithoutEmployees_audit_logs_empidToemployeesInput, audit_logsUncheckedCreateWithoutEmployees_audit_logs_empidToemployeesInput> | audit_logsCreateWithoutEmployees_audit_logs_empidToemployeesInput[] | audit_logsUncheckedCreateWithoutEmployees_audit_logs_empidToemployeesInput[]
    connectOrCreate?: audit_logsCreateOrConnectWithoutEmployees_audit_logs_empidToemployeesInput | audit_logsCreateOrConnectWithoutEmployees_audit_logs_empidToemployeesInput[]
    createMany?: audit_logsCreateManyEmployees_audit_logs_empidToemployeesInputEnvelope
    connect?: audit_logsWhereUniqueInput | audit_logsWhereUniqueInput[]
  }

  export type audit_logsCreateNestedManyWithoutEmployees_audit_logs_performed_byToemployeesInput = {
    create?: XOR<audit_logsCreateWithoutEmployees_audit_logs_performed_byToemployeesInput, audit_logsUncheckedCreateWithoutEmployees_audit_logs_performed_byToemployeesInput> | audit_logsCreateWithoutEmployees_audit_logs_performed_byToemployeesInput[] | audit_logsUncheckedCreateWithoutEmployees_audit_logs_performed_byToemployeesInput[]
    connectOrCreate?: audit_logsCreateOrConnectWithoutEmployees_audit_logs_performed_byToemployeesInput | audit_logsCreateOrConnectWithoutEmployees_audit_logs_performed_byToemployeesInput[]
    createMany?: audit_logsCreateManyEmployees_audit_logs_performed_byToemployeesInputEnvelope
    connect?: audit_logsWhereUniqueInput | audit_logsWhereUniqueInput[]
  }

  export type bank_detailsCreateNestedManyWithoutEmployeesInput = {
    create?: XOR<bank_detailsCreateWithoutEmployeesInput, bank_detailsUncheckedCreateWithoutEmployeesInput> | bank_detailsCreateWithoutEmployeesInput[] | bank_detailsUncheckedCreateWithoutEmployeesInput[]
    connectOrCreate?: bank_detailsCreateOrConnectWithoutEmployeesInput | bank_detailsCreateOrConnectWithoutEmployeesInput[]
    createMany?: bank_detailsCreateManyEmployeesInputEnvelope
    connect?: bank_detailsWhereUniqueInput | bank_detailsWhereUniqueInput[]
  }

  export type compliance_documentsCreateNestedManyWithoutEmployeesInput = {
    create?: XOR<compliance_documentsCreateWithoutEmployeesInput, compliance_documentsUncheckedCreateWithoutEmployeesInput> | compliance_documentsCreateWithoutEmployeesInput[] | compliance_documentsUncheckedCreateWithoutEmployeesInput[]
    connectOrCreate?: compliance_documentsCreateOrConnectWithoutEmployeesInput | compliance_documentsCreateOrConnectWithoutEmployeesInput[]
    createMany?: compliance_documentsCreateManyEmployeesInputEnvelope
    connect?: compliance_documentsWhereUniqueInput | compliance_documentsWhereUniqueInput[]
  }

  export type compliance_statusCreateNestedOneWithoutEmployeesInput = {
    create?: XOR<compliance_statusCreateWithoutEmployeesInput, compliance_statusUncheckedCreateWithoutEmployeesInput>
    connectOrCreate?: compliance_statusCreateOrConnectWithoutEmployeesInput
    connect?: compliance_statusWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutEmployeesInput = {
    create?: XOR<usersCreateWithoutEmployeesInput, usersUncheckedCreateWithoutEmployeesInput>
    connectOrCreate?: usersCreateOrConnectWithoutEmployeesInput
    connect?: usersWhereUniqueInput
  }

  export type addressesUncheckedCreateNestedManyWithoutEmployeesInput = {
    create?: XOR<addressesCreateWithoutEmployeesInput, addressesUncheckedCreateWithoutEmployeesInput> | addressesCreateWithoutEmployeesInput[] | addressesUncheckedCreateWithoutEmployeesInput[]
    connectOrCreate?: addressesCreateOrConnectWithoutEmployeesInput | addressesCreateOrConnectWithoutEmployeesInput[]
    createMany?: addressesCreateManyEmployeesInputEnvelope
    connect?: addressesWhereUniqueInput | addressesWhereUniqueInput[]
  }

  export type audit_logsUncheckedCreateNestedManyWithoutEmployees_audit_logs_empidToemployeesInput = {
    create?: XOR<audit_logsCreateWithoutEmployees_audit_logs_empidToemployeesInput, audit_logsUncheckedCreateWithoutEmployees_audit_logs_empidToemployeesInput> | audit_logsCreateWithoutEmployees_audit_logs_empidToemployeesInput[] | audit_logsUncheckedCreateWithoutEmployees_audit_logs_empidToemployeesInput[]
    connectOrCreate?: audit_logsCreateOrConnectWithoutEmployees_audit_logs_empidToemployeesInput | audit_logsCreateOrConnectWithoutEmployees_audit_logs_empidToemployeesInput[]
    createMany?: audit_logsCreateManyEmployees_audit_logs_empidToemployeesInputEnvelope
    connect?: audit_logsWhereUniqueInput | audit_logsWhereUniqueInput[]
  }

  export type audit_logsUncheckedCreateNestedManyWithoutEmployees_audit_logs_performed_byToemployeesInput = {
    create?: XOR<audit_logsCreateWithoutEmployees_audit_logs_performed_byToemployeesInput, audit_logsUncheckedCreateWithoutEmployees_audit_logs_performed_byToemployeesInput> | audit_logsCreateWithoutEmployees_audit_logs_performed_byToemployeesInput[] | audit_logsUncheckedCreateWithoutEmployees_audit_logs_performed_byToemployeesInput[]
    connectOrCreate?: audit_logsCreateOrConnectWithoutEmployees_audit_logs_performed_byToemployeesInput | audit_logsCreateOrConnectWithoutEmployees_audit_logs_performed_byToemployeesInput[]
    createMany?: audit_logsCreateManyEmployees_audit_logs_performed_byToemployeesInputEnvelope
    connect?: audit_logsWhereUniqueInput | audit_logsWhereUniqueInput[]
  }

  export type bank_detailsUncheckedCreateNestedManyWithoutEmployeesInput = {
    create?: XOR<bank_detailsCreateWithoutEmployeesInput, bank_detailsUncheckedCreateWithoutEmployeesInput> | bank_detailsCreateWithoutEmployeesInput[] | bank_detailsUncheckedCreateWithoutEmployeesInput[]
    connectOrCreate?: bank_detailsCreateOrConnectWithoutEmployeesInput | bank_detailsCreateOrConnectWithoutEmployeesInput[]
    createMany?: bank_detailsCreateManyEmployeesInputEnvelope
    connect?: bank_detailsWhereUniqueInput | bank_detailsWhereUniqueInput[]
  }

  export type compliance_documentsUncheckedCreateNestedManyWithoutEmployeesInput = {
    create?: XOR<compliance_documentsCreateWithoutEmployeesInput, compliance_documentsUncheckedCreateWithoutEmployeesInput> | compliance_documentsCreateWithoutEmployeesInput[] | compliance_documentsUncheckedCreateWithoutEmployeesInput[]
    connectOrCreate?: compliance_documentsCreateOrConnectWithoutEmployeesInput | compliance_documentsCreateOrConnectWithoutEmployeesInput[]
    createMany?: compliance_documentsCreateManyEmployeesInputEnvelope
    connect?: compliance_documentsWhereUniqueInput | compliance_documentsWhereUniqueInput[]
  }

  export type compliance_statusUncheckedCreateNestedOneWithoutEmployeesInput = {
    create?: XOR<compliance_statusCreateWithoutEmployeesInput, compliance_statusUncheckedCreateWithoutEmployeesInput>
    connectOrCreate?: compliance_statusCreateOrConnectWithoutEmployeesInput
    connect?: compliance_statusWhereUniqueInput
  }

  export type NullableEnumemployees_employee_typeFieldUpdateOperationsInput = {
    set?: $Enums.employees_employee_type | null
  }

  export type addressesUpdateManyWithoutEmployeesNestedInput = {
    create?: XOR<addressesCreateWithoutEmployeesInput, addressesUncheckedCreateWithoutEmployeesInput> | addressesCreateWithoutEmployeesInput[] | addressesUncheckedCreateWithoutEmployeesInput[]
    connectOrCreate?: addressesCreateOrConnectWithoutEmployeesInput | addressesCreateOrConnectWithoutEmployeesInput[]
    upsert?: addressesUpsertWithWhereUniqueWithoutEmployeesInput | addressesUpsertWithWhereUniqueWithoutEmployeesInput[]
    createMany?: addressesCreateManyEmployeesInputEnvelope
    set?: addressesWhereUniqueInput | addressesWhereUniqueInput[]
    disconnect?: addressesWhereUniqueInput | addressesWhereUniqueInput[]
    delete?: addressesWhereUniqueInput | addressesWhereUniqueInput[]
    connect?: addressesWhereUniqueInput | addressesWhereUniqueInput[]
    update?: addressesUpdateWithWhereUniqueWithoutEmployeesInput | addressesUpdateWithWhereUniqueWithoutEmployeesInput[]
    updateMany?: addressesUpdateManyWithWhereWithoutEmployeesInput | addressesUpdateManyWithWhereWithoutEmployeesInput[]
    deleteMany?: addressesScalarWhereInput | addressesScalarWhereInput[]
  }

  export type audit_logsUpdateManyWithoutEmployees_audit_logs_empidToemployeesNestedInput = {
    create?: XOR<audit_logsCreateWithoutEmployees_audit_logs_empidToemployeesInput, audit_logsUncheckedCreateWithoutEmployees_audit_logs_empidToemployeesInput> | audit_logsCreateWithoutEmployees_audit_logs_empidToemployeesInput[] | audit_logsUncheckedCreateWithoutEmployees_audit_logs_empidToemployeesInput[]
    connectOrCreate?: audit_logsCreateOrConnectWithoutEmployees_audit_logs_empidToemployeesInput | audit_logsCreateOrConnectWithoutEmployees_audit_logs_empidToemployeesInput[]
    upsert?: audit_logsUpsertWithWhereUniqueWithoutEmployees_audit_logs_empidToemployeesInput | audit_logsUpsertWithWhereUniqueWithoutEmployees_audit_logs_empidToemployeesInput[]
    createMany?: audit_logsCreateManyEmployees_audit_logs_empidToemployeesInputEnvelope
    set?: audit_logsWhereUniqueInput | audit_logsWhereUniqueInput[]
    disconnect?: audit_logsWhereUniqueInput | audit_logsWhereUniqueInput[]
    delete?: audit_logsWhereUniqueInput | audit_logsWhereUniqueInput[]
    connect?: audit_logsWhereUniqueInput | audit_logsWhereUniqueInput[]
    update?: audit_logsUpdateWithWhereUniqueWithoutEmployees_audit_logs_empidToemployeesInput | audit_logsUpdateWithWhereUniqueWithoutEmployees_audit_logs_empidToemployeesInput[]
    updateMany?: audit_logsUpdateManyWithWhereWithoutEmployees_audit_logs_empidToemployeesInput | audit_logsUpdateManyWithWhereWithoutEmployees_audit_logs_empidToemployeesInput[]
    deleteMany?: audit_logsScalarWhereInput | audit_logsScalarWhereInput[]
  }

  export type audit_logsUpdateManyWithoutEmployees_audit_logs_performed_byToemployeesNestedInput = {
    create?: XOR<audit_logsCreateWithoutEmployees_audit_logs_performed_byToemployeesInput, audit_logsUncheckedCreateWithoutEmployees_audit_logs_performed_byToemployeesInput> | audit_logsCreateWithoutEmployees_audit_logs_performed_byToemployeesInput[] | audit_logsUncheckedCreateWithoutEmployees_audit_logs_performed_byToemployeesInput[]
    connectOrCreate?: audit_logsCreateOrConnectWithoutEmployees_audit_logs_performed_byToemployeesInput | audit_logsCreateOrConnectWithoutEmployees_audit_logs_performed_byToemployeesInput[]
    upsert?: audit_logsUpsertWithWhereUniqueWithoutEmployees_audit_logs_performed_byToemployeesInput | audit_logsUpsertWithWhereUniqueWithoutEmployees_audit_logs_performed_byToemployeesInput[]
    createMany?: audit_logsCreateManyEmployees_audit_logs_performed_byToemployeesInputEnvelope
    set?: audit_logsWhereUniqueInput | audit_logsWhereUniqueInput[]
    disconnect?: audit_logsWhereUniqueInput | audit_logsWhereUniqueInput[]
    delete?: audit_logsWhereUniqueInput | audit_logsWhereUniqueInput[]
    connect?: audit_logsWhereUniqueInput | audit_logsWhereUniqueInput[]
    update?: audit_logsUpdateWithWhereUniqueWithoutEmployees_audit_logs_performed_byToemployeesInput | audit_logsUpdateWithWhereUniqueWithoutEmployees_audit_logs_performed_byToemployeesInput[]
    updateMany?: audit_logsUpdateManyWithWhereWithoutEmployees_audit_logs_performed_byToemployeesInput | audit_logsUpdateManyWithWhereWithoutEmployees_audit_logs_performed_byToemployeesInput[]
    deleteMany?: audit_logsScalarWhereInput | audit_logsScalarWhereInput[]
  }

  export type bank_detailsUpdateManyWithoutEmployeesNestedInput = {
    create?: XOR<bank_detailsCreateWithoutEmployeesInput, bank_detailsUncheckedCreateWithoutEmployeesInput> | bank_detailsCreateWithoutEmployeesInput[] | bank_detailsUncheckedCreateWithoutEmployeesInput[]
    connectOrCreate?: bank_detailsCreateOrConnectWithoutEmployeesInput | bank_detailsCreateOrConnectWithoutEmployeesInput[]
    upsert?: bank_detailsUpsertWithWhereUniqueWithoutEmployeesInput | bank_detailsUpsertWithWhereUniqueWithoutEmployeesInput[]
    createMany?: bank_detailsCreateManyEmployeesInputEnvelope
    set?: bank_detailsWhereUniqueInput | bank_detailsWhereUniqueInput[]
    disconnect?: bank_detailsWhereUniqueInput | bank_detailsWhereUniqueInput[]
    delete?: bank_detailsWhereUniqueInput | bank_detailsWhereUniqueInput[]
    connect?: bank_detailsWhereUniqueInput | bank_detailsWhereUniqueInput[]
    update?: bank_detailsUpdateWithWhereUniqueWithoutEmployeesInput | bank_detailsUpdateWithWhereUniqueWithoutEmployeesInput[]
    updateMany?: bank_detailsUpdateManyWithWhereWithoutEmployeesInput | bank_detailsUpdateManyWithWhereWithoutEmployeesInput[]
    deleteMany?: bank_detailsScalarWhereInput | bank_detailsScalarWhereInput[]
  }

  export type compliance_documentsUpdateManyWithoutEmployeesNestedInput = {
    create?: XOR<compliance_documentsCreateWithoutEmployeesInput, compliance_documentsUncheckedCreateWithoutEmployeesInput> | compliance_documentsCreateWithoutEmployeesInput[] | compliance_documentsUncheckedCreateWithoutEmployeesInput[]
    connectOrCreate?: compliance_documentsCreateOrConnectWithoutEmployeesInput | compliance_documentsCreateOrConnectWithoutEmployeesInput[]
    upsert?: compliance_documentsUpsertWithWhereUniqueWithoutEmployeesInput | compliance_documentsUpsertWithWhereUniqueWithoutEmployeesInput[]
    createMany?: compliance_documentsCreateManyEmployeesInputEnvelope
    set?: compliance_documentsWhereUniqueInput | compliance_documentsWhereUniqueInput[]
    disconnect?: compliance_documentsWhereUniqueInput | compliance_documentsWhereUniqueInput[]
    delete?: compliance_documentsWhereUniqueInput | compliance_documentsWhereUniqueInput[]
    connect?: compliance_documentsWhereUniqueInput | compliance_documentsWhereUniqueInput[]
    update?: compliance_documentsUpdateWithWhereUniqueWithoutEmployeesInput | compliance_documentsUpdateWithWhereUniqueWithoutEmployeesInput[]
    updateMany?: compliance_documentsUpdateManyWithWhereWithoutEmployeesInput | compliance_documentsUpdateManyWithWhereWithoutEmployeesInput[]
    deleteMany?: compliance_documentsScalarWhereInput | compliance_documentsScalarWhereInput[]
  }

  export type compliance_statusUpdateOneWithoutEmployeesNestedInput = {
    create?: XOR<compliance_statusCreateWithoutEmployeesInput, compliance_statusUncheckedCreateWithoutEmployeesInput>
    connectOrCreate?: compliance_statusCreateOrConnectWithoutEmployeesInput
    upsert?: compliance_statusUpsertWithoutEmployeesInput
    disconnect?: compliance_statusWhereInput | boolean
    delete?: compliance_statusWhereInput | boolean
    connect?: compliance_statusWhereUniqueInput
    update?: XOR<XOR<compliance_statusUpdateToOneWithWhereWithoutEmployeesInput, compliance_statusUpdateWithoutEmployeesInput>, compliance_statusUncheckedUpdateWithoutEmployeesInput>
  }

  export type usersUpdateOneWithoutEmployeesNestedInput = {
    create?: XOR<usersCreateWithoutEmployeesInput, usersUncheckedCreateWithoutEmployeesInput>
    connectOrCreate?: usersCreateOrConnectWithoutEmployeesInput
    upsert?: usersUpsertWithoutEmployeesInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutEmployeesInput, usersUpdateWithoutEmployeesInput>, usersUncheckedUpdateWithoutEmployeesInput>
  }

  export type addressesUncheckedUpdateManyWithoutEmployeesNestedInput = {
    create?: XOR<addressesCreateWithoutEmployeesInput, addressesUncheckedCreateWithoutEmployeesInput> | addressesCreateWithoutEmployeesInput[] | addressesUncheckedCreateWithoutEmployeesInput[]
    connectOrCreate?: addressesCreateOrConnectWithoutEmployeesInput | addressesCreateOrConnectWithoutEmployeesInput[]
    upsert?: addressesUpsertWithWhereUniqueWithoutEmployeesInput | addressesUpsertWithWhereUniqueWithoutEmployeesInput[]
    createMany?: addressesCreateManyEmployeesInputEnvelope
    set?: addressesWhereUniqueInput | addressesWhereUniqueInput[]
    disconnect?: addressesWhereUniqueInput | addressesWhereUniqueInput[]
    delete?: addressesWhereUniqueInput | addressesWhereUniqueInput[]
    connect?: addressesWhereUniqueInput | addressesWhereUniqueInput[]
    update?: addressesUpdateWithWhereUniqueWithoutEmployeesInput | addressesUpdateWithWhereUniqueWithoutEmployeesInput[]
    updateMany?: addressesUpdateManyWithWhereWithoutEmployeesInput | addressesUpdateManyWithWhereWithoutEmployeesInput[]
    deleteMany?: addressesScalarWhereInput | addressesScalarWhereInput[]
  }

  export type audit_logsUncheckedUpdateManyWithoutEmployees_audit_logs_empidToemployeesNestedInput = {
    create?: XOR<audit_logsCreateWithoutEmployees_audit_logs_empidToemployeesInput, audit_logsUncheckedCreateWithoutEmployees_audit_logs_empidToemployeesInput> | audit_logsCreateWithoutEmployees_audit_logs_empidToemployeesInput[] | audit_logsUncheckedCreateWithoutEmployees_audit_logs_empidToemployeesInput[]
    connectOrCreate?: audit_logsCreateOrConnectWithoutEmployees_audit_logs_empidToemployeesInput | audit_logsCreateOrConnectWithoutEmployees_audit_logs_empidToemployeesInput[]
    upsert?: audit_logsUpsertWithWhereUniqueWithoutEmployees_audit_logs_empidToemployeesInput | audit_logsUpsertWithWhereUniqueWithoutEmployees_audit_logs_empidToemployeesInput[]
    createMany?: audit_logsCreateManyEmployees_audit_logs_empidToemployeesInputEnvelope
    set?: audit_logsWhereUniqueInput | audit_logsWhereUniqueInput[]
    disconnect?: audit_logsWhereUniqueInput | audit_logsWhereUniqueInput[]
    delete?: audit_logsWhereUniqueInput | audit_logsWhereUniqueInput[]
    connect?: audit_logsWhereUniqueInput | audit_logsWhereUniqueInput[]
    update?: audit_logsUpdateWithWhereUniqueWithoutEmployees_audit_logs_empidToemployeesInput | audit_logsUpdateWithWhereUniqueWithoutEmployees_audit_logs_empidToemployeesInput[]
    updateMany?: audit_logsUpdateManyWithWhereWithoutEmployees_audit_logs_empidToemployeesInput | audit_logsUpdateManyWithWhereWithoutEmployees_audit_logs_empidToemployeesInput[]
    deleteMany?: audit_logsScalarWhereInput | audit_logsScalarWhereInput[]
  }

  export type audit_logsUncheckedUpdateManyWithoutEmployees_audit_logs_performed_byToemployeesNestedInput = {
    create?: XOR<audit_logsCreateWithoutEmployees_audit_logs_performed_byToemployeesInput, audit_logsUncheckedCreateWithoutEmployees_audit_logs_performed_byToemployeesInput> | audit_logsCreateWithoutEmployees_audit_logs_performed_byToemployeesInput[] | audit_logsUncheckedCreateWithoutEmployees_audit_logs_performed_byToemployeesInput[]
    connectOrCreate?: audit_logsCreateOrConnectWithoutEmployees_audit_logs_performed_byToemployeesInput | audit_logsCreateOrConnectWithoutEmployees_audit_logs_performed_byToemployeesInput[]
    upsert?: audit_logsUpsertWithWhereUniqueWithoutEmployees_audit_logs_performed_byToemployeesInput | audit_logsUpsertWithWhereUniqueWithoutEmployees_audit_logs_performed_byToemployeesInput[]
    createMany?: audit_logsCreateManyEmployees_audit_logs_performed_byToemployeesInputEnvelope
    set?: audit_logsWhereUniqueInput | audit_logsWhereUniqueInput[]
    disconnect?: audit_logsWhereUniqueInput | audit_logsWhereUniqueInput[]
    delete?: audit_logsWhereUniqueInput | audit_logsWhereUniqueInput[]
    connect?: audit_logsWhereUniqueInput | audit_logsWhereUniqueInput[]
    update?: audit_logsUpdateWithWhereUniqueWithoutEmployees_audit_logs_performed_byToemployeesInput | audit_logsUpdateWithWhereUniqueWithoutEmployees_audit_logs_performed_byToemployeesInput[]
    updateMany?: audit_logsUpdateManyWithWhereWithoutEmployees_audit_logs_performed_byToemployeesInput | audit_logsUpdateManyWithWhereWithoutEmployees_audit_logs_performed_byToemployeesInput[]
    deleteMany?: audit_logsScalarWhereInput | audit_logsScalarWhereInput[]
  }

  export type bank_detailsUncheckedUpdateManyWithoutEmployeesNestedInput = {
    create?: XOR<bank_detailsCreateWithoutEmployeesInput, bank_detailsUncheckedCreateWithoutEmployeesInput> | bank_detailsCreateWithoutEmployeesInput[] | bank_detailsUncheckedCreateWithoutEmployeesInput[]
    connectOrCreate?: bank_detailsCreateOrConnectWithoutEmployeesInput | bank_detailsCreateOrConnectWithoutEmployeesInput[]
    upsert?: bank_detailsUpsertWithWhereUniqueWithoutEmployeesInput | bank_detailsUpsertWithWhereUniqueWithoutEmployeesInput[]
    createMany?: bank_detailsCreateManyEmployeesInputEnvelope
    set?: bank_detailsWhereUniqueInput | bank_detailsWhereUniqueInput[]
    disconnect?: bank_detailsWhereUniqueInput | bank_detailsWhereUniqueInput[]
    delete?: bank_detailsWhereUniqueInput | bank_detailsWhereUniqueInput[]
    connect?: bank_detailsWhereUniqueInput | bank_detailsWhereUniqueInput[]
    update?: bank_detailsUpdateWithWhereUniqueWithoutEmployeesInput | bank_detailsUpdateWithWhereUniqueWithoutEmployeesInput[]
    updateMany?: bank_detailsUpdateManyWithWhereWithoutEmployeesInput | bank_detailsUpdateManyWithWhereWithoutEmployeesInput[]
    deleteMany?: bank_detailsScalarWhereInput | bank_detailsScalarWhereInput[]
  }

  export type compliance_documentsUncheckedUpdateManyWithoutEmployeesNestedInput = {
    create?: XOR<compliance_documentsCreateWithoutEmployeesInput, compliance_documentsUncheckedCreateWithoutEmployeesInput> | compliance_documentsCreateWithoutEmployeesInput[] | compliance_documentsUncheckedCreateWithoutEmployeesInput[]
    connectOrCreate?: compliance_documentsCreateOrConnectWithoutEmployeesInput | compliance_documentsCreateOrConnectWithoutEmployeesInput[]
    upsert?: compliance_documentsUpsertWithWhereUniqueWithoutEmployeesInput | compliance_documentsUpsertWithWhereUniqueWithoutEmployeesInput[]
    createMany?: compliance_documentsCreateManyEmployeesInputEnvelope
    set?: compliance_documentsWhereUniqueInput | compliance_documentsWhereUniqueInput[]
    disconnect?: compliance_documentsWhereUniqueInput | compliance_documentsWhereUniqueInput[]
    delete?: compliance_documentsWhereUniqueInput | compliance_documentsWhereUniqueInput[]
    connect?: compliance_documentsWhereUniqueInput | compliance_documentsWhereUniqueInput[]
    update?: compliance_documentsUpdateWithWhereUniqueWithoutEmployeesInput | compliance_documentsUpdateWithWhereUniqueWithoutEmployeesInput[]
    updateMany?: compliance_documentsUpdateManyWithWhereWithoutEmployeesInput | compliance_documentsUpdateManyWithWhereWithoutEmployeesInput[]
    deleteMany?: compliance_documentsScalarWhereInput | compliance_documentsScalarWhereInput[]
  }

  export type compliance_statusUncheckedUpdateOneWithoutEmployeesNestedInput = {
    create?: XOR<compliance_statusCreateWithoutEmployeesInput, compliance_statusUncheckedCreateWithoutEmployeesInput>
    connectOrCreate?: compliance_statusCreateOrConnectWithoutEmployeesInput
    upsert?: compliance_statusUpsertWithoutEmployeesInput
    disconnect?: compliance_statusWhereInput | boolean
    delete?: compliance_statusWhereInput | boolean
    connect?: compliance_statusWhereUniqueInput
    update?: XOR<XOR<compliance_statusUpdateToOneWithWhereWithoutEmployeesInput, compliance_statusUpdateWithoutEmployeesInput>, compliance_statusUncheckedUpdateWithoutEmployeesInput>
  }

  export type leave_balancesCreateNestedManyWithoutLeave_typesInput = {
    create?: XOR<leave_balancesCreateWithoutLeave_typesInput, leave_balancesUncheckedCreateWithoutLeave_typesInput> | leave_balancesCreateWithoutLeave_typesInput[] | leave_balancesUncheckedCreateWithoutLeave_typesInput[]
    connectOrCreate?: leave_balancesCreateOrConnectWithoutLeave_typesInput | leave_balancesCreateOrConnectWithoutLeave_typesInput[]
    createMany?: leave_balancesCreateManyLeave_typesInputEnvelope
    connect?: leave_balancesWhereUniqueInput | leave_balancesWhereUniqueInput[]
  }

  export type leave_balancesUncheckedCreateNestedManyWithoutLeave_typesInput = {
    create?: XOR<leave_balancesCreateWithoutLeave_typesInput, leave_balancesUncheckedCreateWithoutLeave_typesInput> | leave_balancesCreateWithoutLeave_typesInput[] | leave_balancesUncheckedCreateWithoutLeave_typesInput[]
    connectOrCreate?: leave_balancesCreateOrConnectWithoutLeave_typesInput | leave_balancesCreateOrConnectWithoutLeave_typesInput[]
    createMany?: leave_balancesCreateManyLeave_typesInputEnvelope
    connect?: leave_balancesWhereUniqueInput | leave_balancesWhereUniqueInput[]
  }

  export type Enumleave_types_type_nameFieldUpdateOperationsInput = {
    set?: $Enums.leave_types_type_name
  }

  export type leave_balancesUpdateManyWithoutLeave_typesNestedInput = {
    create?: XOR<leave_balancesCreateWithoutLeave_typesInput, leave_balancesUncheckedCreateWithoutLeave_typesInput> | leave_balancesCreateWithoutLeave_typesInput[] | leave_balancesUncheckedCreateWithoutLeave_typesInput[]
    connectOrCreate?: leave_balancesCreateOrConnectWithoutLeave_typesInput | leave_balancesCreateOrConnectWithoutLeave_typesInput[]
    upsert?: leave_balancesUpsertWithWhereUniqueWithoutLeave_typesInput | leave_balancesUpsertWithWhereUniqueWithoutLeave_typesInput[]
    createMany?: leave_balancesCreateManyLeave_typesInputEnvelope
    set?: leave_balancesWhereUniqueInput | leave_balancesWhereUniqueInput[]
    disconnect?: leave_balancesWhereUniqueInput | leave_balancesWhereUniqueInput[]
    delete?: leave_balancesWhereUniqueInput | leave_balancesWhereUniqueInput[]
    connect?: leave_balancesWhereUniqueInput | leave_balancesWhereUniqueInput[]
    update?: leave_balancesUpdateWithWhereUniqueWithoutLeave_typesInput | leave_balancesUpdateWithWhereUniqueWithoutLeave_typesInput[]
    updateMany?: leave_balancesUpdateManyWithWhereWithoutLeave_typesInput | leave_balancesUpdateManyWithWhereWithoutLeave_typesInput[]
    deleteMany?: leave_balancesScalarWhereInput | leave_balancesScalarWhereInput[]
  }

  export type leave_balancesUncheckedUpdateManyWithoutLeave_typesNestedInput = {
    create?: XOR<leave_balancesCreateWithoutLeave_typesInput, leave_balancesUncheckedCreateWithoutLeave_typesInput> | leave_balancesCreateWithoutLeave_typesInput[] | leave_balancesUncheckedCreateWithoutLeave_typesInput[]
    connectOrCreate?: leave_balancesCreateOrConnectWithoutLeave_typesInput | leave_balancesCreateOrConnectWithoutLeave_typesInput[]
    upsert?: leave_balancesUpsertWithWhereUniqueWithoutLeave_typesInput | leave_balancesUpsertWithWhereUniqueWithoutLeave_typesInput[]
    createMany?: leave_balancesCreateManyLeave_typesInputEnvelope
    set?: leave_balancesWhereUniqueInput | leave_balancesWhereUniqueInput[]
    disconnect?: leave_balancesWhereUniqueInput | leave_balancesWhereUniqueInput[]
    delete?: leave_balancesWhereUniqueInput | leave_balancesWhereUniqueInput[]
    connect?: leave_balancesWhereUniqueInput | leave_balancesWhereUniqueInput[]
    update?: leave_balancesUpdateWithWhereUniqueWithoutLeave_typesInput | leave_balancesUpdateWithWhereUniqueWithoutLeave_typesInput[]
    updateMany?: leave_balancesUpdateManyWithWhereWithoutLeave_typesInput | leave_balancesUpdateManyWithWhereWithoutLeave_typesInput[]
    deleteMany?: leave_balancesScalarWhereInput | leave_balancesScalarWhereInput[]
  }

  export type usersCreateNestedOneWithoutLeave_balancesInput = {
    create?: XOR<usersCreateWithoutLeave_balancesInput, usersUncheckedCreateWithoutLeave_balancesInput>
    connectOrCreate?: usersCreateOrConnectWithoutLeave_balancesInput
    connect?: usersWhereUniqueInput
  }

  export type leave_typesCreateNestedOneWithoutLeave_balancesInput = {
    create?: XOR<leave_typesCreateWithoutLeave_balancesInput, leave_typesUncheckedCreateWithoutLeave_balancesInput>
    connectOrCreate?: leave_typesCreateOrConnectWithoutLeave_balancesInput
    connect?: leave_typesWhereUniqueInput
  }

  export type usersUpdateOneRequiredWithoutLeave_balancesNestedInput = {
    create?: XOR<usersCreateWithoutLeave_balancesInput, usersUncheckedCreateWithoutLeave_balancesInput>
    connectOrCreate?: usersCreateOrConnectWithoutLeave_balancesInput
    upsert?: usersUpsertWithoutLeave_balancesInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutLeave_balancesInput, usersUpdateWithoutLeave_balancesInput>, usersUncheckedUpdateWithoutLeave_balancesInput>
  }

  export type leave_typesUpdateOneRequiredWithoutLeave_balancesNestedInput = {
    create?: XOR<leave_typesCreateWithoutLeave_balancesInput, leave_typesUncheckedCreateWithoutLeave_balancesInput>
    connectOrCreate?: leave_typesCreateOrConnectWithoutLeave_balancesInput
    upsert?: leave_typesUpsertWithoutLeave_balancesInput
    connect?: leave_typesWhereUniqueInput
    update?: XOR<XOR<leave_typesUpdateToOneWithWhereWithoutLeave_balancesInput, leave_typesUpdateWithoutLeave_balancesInput>, leave_typesUncheckedUpdateWithoutLeave_balancesInput>
  }

  export type usersCreateNestedOneWithoutLeave_requestsInput = {
    create?: XOR<usersCreateWithoutLeave_requestsInput, usersUncheckedCreateWithoutLeave_requestsInput>
    connectOrCreate?: usersCreateOrConnectWithoutLeave_requestsInput
    connect?: usersWhereUniqueInput
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableEnumleave_requests_statusFieldUpdateOperationsInput = {
    set?: $Enums.leave_requests_status | null
  }

  export type usersUpdateOneRequiredWithoutLeave_requestsNestedInput = {
    create?: XOR<usersCreateWithoutLeave_requestsInput, usersUncheckedCreateWithoutLeave_requestsInput>
    connectOrCreate?: usersCreateOrConnectWithoutLeave_requestsInput
    upsert?: usersUpsertWithoutLeave_requestsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutLeave_requestsInput, usersUpdateWithoutLeave_requestsInput>, usersUncheckedUpdateWithoutLeave_requestsInput>
  }

  export type employeesCreateNestedManyWithoutUsersInput = {
    create?: XOR<employeesCreateWithoutUsersInput, employeesUncheckedCreateWithoutUsersInput> | employeesCreateWithoutUsersInput[] | employeesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: employeesCreateOrConnectWithoutUsersInput | employeesCreateOrConnectWithoutUsersInput[]
    createMany?: employeesCreateManyUsersInputEnvelope
    connect?: employeesWhereUniqueInput | employeesWhereUniqueInput[]
  }

  export type leave_balancesCreateNestedManyWithoutUsersInput = {
    create?: XOR<leave_balancesCreateWithoutUsersInput, leave_balancesUncheckedCreateWithoutUsersInput> | leave_balancesCreateWithoutUsersInput[] | leave_balancesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: leave_balancesCreateOrConnectWithoutUsersInput | leave_balancesCreateOrConnectWithoutUsersInput[]
    createMany?: leave_balancesCreateManyUsersInputEnvelope
    connect?: leave_balancesWhereUniqueInput | leave_balancesWhereUniqueInput[]
  }

  export type leave_requestsCreateNestedManyWithoutUsersInput = {
    create?: XOR<leave_requestsCreateWithoutUsersInput, leave_requestsUncheckedCreateWithoutUsersInput> | leave_requestsCreateWithoutUsersInput[] | leave_requestsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: leave_requestsCreateOrConnectWithoutUsersInput | leave_requestsCreateOrConnectWithoutUsersInput[]
    createMany?: leave_requestsCreateManyUsersInputEnvelope
    connect?: leave_requestsWhereUniqueInput | leave_requestsWhereUniqueInput[]
  }

  export type payrollCreateNestedManyWithoutUsersInput = {
    create?: XOR<payrollCreateWithoutUsersInput, payrollUncheckedCreateWithoutUsersInput> | payrollCreateWithoutUsersInput[] | payrollUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: payrollCreateOrConnectWithoutUsersInput | payrollCreateOrConnectWithoutUsersInput[]
    createMany?: payrollCreateManyUsersInputEnvelope
    connect?: payrollWhereUniqueInput | payrollWhereUniqueInput[]
  }

  export type employeesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<employeesCreateWithoutUsersInput, employeesUncheckedCreateWithoutUsersInput> | employeesCreateWithoutUsersInput[] | employeesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: employeesCreateOrConnectWithoutUsersInput | employeesCreateOrConnectWithoutUsersInput[]
    createMany?: employeesCreateManyUsersInputEnvelope
    connect?: employeesWhereUniqueInput | employeesWhereUniqueInput[]
  }

  export type leave_balancesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<leave_balancesCreateWithoutUsersInput, leave_balancesUncheckedCreateWithoutUsersInput> | leave_balancesCreateWithoutUsersInput[] | leave_balancesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: leave_balancesCreateOrConnectWithoutUsersInput | leave_balancesCreateOrConnectWithoutUsersInput[]
    createMany?: leave_balancesCreateManyUsersInputEnvelope
    connect?: leave_balancesWhereUniqueInput | leave_balancesWhereUniqueInput[]
  }

  export type leave_requestsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<leave_requestsCreateWithoutUsersInput, leave_requestsUncheckedCreateWithoutUsersInput> | leave_requestsCreateWithoutUsersInput[] | leave_requestsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: leave_requestsCreateOrConnectWithoutUsersInput | leave_requestsCreateOrConnectWithoutUsersInput[]
    createMany?: leave_requestsCreateManyUsersInputEnvelope
    connect?: leave_requestsWhereUniqueInput | leave_requestsWhereUniqueInput[]
  }

  export type payrollUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<payrollCreateWithoutUsersInput, payrollUncheckedCreateWithoutUsersInput> | payrollCreateWithoutUsersInput[] | payrollUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: payrollCreateOrConnectWithoutUsersInput | payrollCreateOrConnectWithoutUsersInput[]
    createMany?: payrollCreateManyUsersInputEnvelope
    connect?: payrollWhereUniqueInput | payrollWhereUniqueInput[]
  }

  export type Enumusers_roleFieldUpdateOperationsInput = {
    set?: $Enums.users_role
  }

  export type NullableEnumusers_verifiedFieldUpdateOperationsInput = {
    set?: $Enums.users_verified | null
  }

  export type employeesUpdateManyWithoutUsersNestedInput = {
    create?: XOR<employeesCreateWithoutUsersInput, employeesUncheckedCreateWithoutUsersInput> | employeesCreateWithoutUsersInput[] | employeesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: employeesCreateOrConnectWithoutUsersInput | employeesCreateOrConnectWithoutUsersInput[]
    upsert?: employeesUpsertWithWhereUniqueWithoutUsersInput | employeesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: employeesCreateManyUsersInputEnvelope
    set?: employeesWhereUniqueInput | employeesWhereUniqueInput[]
    disconnect?: employeesWhereUniqueInput | employeesWhereUniqueInput[]
    delete?: employeesWhereUniqueInput | employeesWhereUniqueInput[]
    connect?: employeesWhereUniqueInput | employeesWhereUniqueInput[]
    update?: employeesUpdateWithWhereUniqueWithoutUsersInput | employeesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: employeesUpdateManyWithWhereWithoutUsersInput | employeesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: employeesScalarWhereInput | employeesScalarWhereInput[]
  }

  export type leave_balancesUpdateManyWithoutUsersNestedInput = {
    create?: XOR<leave_balancesCreateWithoutUsersInput, leave_balancesUncheckedCreateWithoutUsersInput> | leave_balancesCreateWithoutUsersInput[] | leave_balancesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: leave_balancesCreateOrConnectWithoutUsersInput | leave_balancesCreateOrConnectWithoutUsersInput[]
    upsert?: leave_balancesUpsertWithWhereUniqueWithoutUsersInput | leave_balancesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: leave_balancesCreateManyUsersInputEnvelope
    set?: leave_balancesWhereUniqueInput | leave_balancesWhereUniqueInput[]
    disconnect?: leave_balancesWhereUniqueInput | leave_balancesWhereUniqueInput[]
    delete?: leave_balancesWhereUniqueInput | leave_balancesWhereUniqueInput[]
    connect?: leave_balancesWhereUniqueInput | leave_balancesWhereUniqueInput[]
    update?: leave_balancesUpdateWithWhereUniqueWithoutUsersInput | leave_balancesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: leave_balancesUpdateManyWithWhereWithoutUsersInput | leave_balancesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: leave_balancesScalarWhereInput | leave_balancesScalarWhereInput[]
  }

  export type leave_requestsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<leave_requestsCreateWithoutUsersInput, leave_requestsUncheckedCreateWithoutUsersInput> | leave_requestsCreateWithoutUsersInput[] | leave_requestsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: leave_requestsCreateOrConnectWithoutUsersInput | leave_requestsCreateOrConnectWithoutUsersInput[]
    upsert?: leave_requestsUpsertWithWhereUniqueWithoutUsersInput | leave_requestsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: leave_requestsCreateManyUsersInputEnvelope
    set?: leave_requestsWhereUniqueInput | leave_requestsWhereUniqueInput[]
    disconnect?: leave_requestsWhereUniqueInput | leave_requestsWhereUniqueInput[]
    delete?: leave_requestsWhereUniqueInput | leave_requestsWhereUniqueInput[]
    connect?: leave_requestsWhereUniqueInput | leave_requestsWhereUniqueInput[]
    update?: leave_requestsUpdateWithWhereUniqueWithoutUsersInput | leave_requestsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: leave_requestsUpdateManyWithWhereWithoutUsersInput | leave_requestsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: leave_requestsScalarWhereInput | leave_requestsScalarWhereInput[]
  }

  export type payrollUpdateManyWithoutUsersNestedInput = {
    create?: XOR<payrollCreateWithoutUsersInput, payrollUncheckedCreateWithoutUsersInput> | payrollCreateWithoutUsersInput[] | payrollUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: payrollCreateOrConnectWithoutUsersInput | payrollCreateOrConnectWithoutUsersInput[]
    upsert?: payrollUpsertWithWhereUniqueWithoutUsersInput | payrollUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: payrollCreateManyUsersInputEnvelope
    set?: payrollWhereUniqueInput | payrollWhereUniqueInput[]
    disconnect?: payrollWhereUniqueInput | payrollWhereUniqueInput[]
    delete?: payrollWhereUniqueInput | payrollWhereUniqueInput[]
    connect?: payrollWhereUniqueInput | payrollWhereUniqueInput[]
    update?: payrollUpdateWithWhereUniqueWithoutUsersInput | payrollUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: payrollUpdateManyWithWhereWithoutUsersInput | payrollUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: payrollScalarWhereInput | payrollScalarWhereInput[]
  }

  export type employeesUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<employeesCreateWithoutUsersInput, employeesUncheckedCreateWithoutUsersInput> | employeesCreateWithoutUsersInput[] | employeesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: employeesCreateOrConnectWithoutUsersInput | employeesCreateOrConnectWithoutUsersInput[]
    upsert?: employeesUpsertWithWhereUniqueWithoutUsersInput | employeesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: employeesCreateManyUsersInputEnvelope
    set?: employeesWhereUniqueInput | employeesWhereUniqueInput[]
    disconnect?: employeesWhereUniqueInput | employeesWhereUniqueInput[]
    delete?: employeesWhereUniqueInput | employeesWhereUniqueInput[]
    connect?: employeesWhereUniqueInput | employeesWhereUniqueInput[]
    update?: employeesUpdateWithWhereUniqueWithoutUsersInput | employeesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: employeesUpdateManyWithWhereWithoutUsersInput | employeesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: employeesScalarWhereInput | employeesScalarWhereInput[]
  }

  export type leave_balancesUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<leave_balancesCreateWithoutUsersInput, leave_balancesUncheckedCreateWithoutUsersInput> | leave_balancesCreateWithoutUsersInput[] | leave_balancesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: leave_balancesCreateOrConnectWithoutUsersInput | leave_balancesCreateOrConnectWithoutUsersInput[]
    upsert?: leave_balancesUpsertWithWhereUniqueWithoutUsersInput | leave_balancesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: leave_balancesCreateManyUsersInputEnvelope
    set?: leave_balancesWhereUniqueInput | leave_balancesWhereUniqueInput[]
    disconnect?: leave_balancesWhereUniqueInput | leave_balancesWhereUniqueInput[]
    delete?: leave_balancesWhereUniqueInput | leave_balancesWhereUniqueInput[]
    connect?: leave_balancesWhereUniqueInput | leave_balancesWhereUniqueInput[]
    update?: leave_balancesUpdateWithWhereUniqueWithoutUsersInput | leave_balancesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: leave_balancesUpdateManyWithWhereWithoutUsersInput | leave_balancesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: leave_balancesScalarWhereInput | leave_balancesScalarWhereInput[]
  }

  export type leave_requestsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<leave_requestsCreateWithoutUsersInput, leave_requestsUncheckedCreateWithoutUsersInput> | leave_requestsCreateWithoutUsersInput[] | leave_requestsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: leave_requestsCreateOrConnectWithoutUsersInput | leave_requestsCreateOrConnectWithoutUsersInput[]
    upsert?: leave_requestsUpsertWithWhereUniqueWithoutUsersInput | leave_requestsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: leave_requestsCreateManyUsersInputEnvelope
    set?: leave_requestsWhereUniqueInput | leave_requestsWhereUniqueInput[]
    disconnect?: leave_requestsWhereUniqueInput | leave_requestsWhereUniqueInput[]
    delete?: leave_requestsWhereUniqueInput | leave_requestsWhereUniqueInput[]
    connect?: leave_requestsWhereUniqueInput | leave_requestsWhereUniqueInput[]
    update?: leave_requestsUpdateWithWhereUniqueWithoutUsersInput | leave_requestsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: leave_requestsUpdateManyWithWhereWithoutUsersInput | leave_requestsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: leave_requestsScalarWhereInput | leave_requestsScalarWhereInput[]
  }

  export type payrollUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<payrollCreateWithoutUsersInput, payrollUncheckedCreateWithoutUsersInput> | payrollCreateWithoutUsersInput[] | payrollUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: payrollCreateOrConnectWithoutUsersInput | payrollCreateOrConnectWithoutUsersInput[]
    upsert?: payrollUpsertWithWhereUniqueWithoutUsersInput | payrollUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: payrollCreateManyUsersInputEnvelope
    set?: payrollWhereUniqueInput | payrollWhereUniqueInput[]
    disconnect?: payrollWhereUniqueInput | payrollWhereUniqueInput[]
    delete?: payrollWhereUniqueInput | payrollWhereUniqueInput[]
    connect?: payrollWhereUniqueInput | payrollWhereUniqueInput[]
    update?: payrollUpdateWithWhereUniqueWithoutUsersInput | payrollUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: payrollUpdateManyWithWhereWithoutUsersInput | payrollUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: payrollScalarWhereInput | payrollScalarWhereInput[]
  }

  export type usersCreateNestedOneWithoutPayrollInput = {
    create?: XOR<usersCreateWithoutPayrollInput, usersUncheckedCreateWithoutPayrollInput>
    connectOrCreate?: usersCreateOrConnectWithoutPayrollInput
    connect?: usersWhereUniqueInput
  }

  export type usersUpdateOneWithoutPayrollNestedInput = {
    create?: XOR<usersCreateWithoutPayrollInput, usersUncheckedCreateWithoutPayrollInput>
    connectOrCreate?: usersCreateOrConnectWithoutPayrollInput
    upsert?: usersUpsertWithoutPayrollInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutPayrollInput, usersUpdateWithoutPayrollInput>, usersUncheckedUpdateWithoutPayrollInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedEnumattendance_attendance_statusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.attendance_attendance_status | Enumattendance_attendance_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.attendance_attendance_status[] | ListEnumattendance_attendance_statusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.attendance_attendance_status[] | ListEnumattendance_attendance_statusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumattendance_attendance_statusNullableFilter<$PrismaModel> | $Enums.attendance_attendance_status | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedEnumattendance_attendance_statusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.attendance_attendance_status | Enumattendance_attendance_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.attendance_attendance_status[] | ListEnumattendance_attendance_statusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.attendance_attendance_status[] | ListEnumattendance_attendance_statusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumattendance_attendance_statusNullableWithAggregatesFilter<$PrismaModel> | $Enums.attendance_attendance_status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumattendance_attendance_statusNullableFilter<$PrismaModel>
    _max?: NestedEnumattendance_attendance_statusNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumcandidates_statusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.candidates_status | Enumcandidates_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.candidates_status[] | ListEnumcandidates_statusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.candidates_status[] | ListEnumcandidates_statusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumcandidates_statusNullableFilter<$PrismaModel> | $Enums.candidates_status | null
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedEnumcandidates_statusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.candidates_status | Enumcandidates_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.candidates_status[] | ListEnumcandidates_statusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.candidates_status[] | ListEnumcandidates_statusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumcandidates_statusNullableWithAggregatesFilter<$PrismaModel> | $Enums.candidates_status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumcandidates_statusNullableFilter<$PrismaModel>
    _max?: NestedEnumcandidates_statusNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedEnumcompliance_status_overall_statusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.compliance_status_overall_status | Enumcompliance_status_overall_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.compliance_status_overall_status[] | ListEnumcompliance_status_overall_statusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.compliance_status_overall_status[] | ListEnumcompliance_status_overall_statusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumcompliance_status_overall_statusNullableFilter<$PrismaModel> | $Enums.compliance_status_overall_status | null
  }

  export type NestedEnumcompliance_status_overall_statusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.compliance_status_overall_status | Enumcompliance_status_overall_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.compliance_status_overall_status[] | ListEnumcompliance_status_overall_statusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.compliance_status_overall_status[] | ListEnumcompliance_status_overall_statusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumcompliance_status_overall_statusNullableWithAggregatesFilter<$PrismaModel> | $Enums.compliance_status_overall_status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumcompliance_status_overall_statusNullableFilter<$PrismaModel>
    _max?: NestedEnumcompliance_status_overall_statusNullableFilter<$PrismaModel>
  }

  export type NestedEnumemployees_employee_typeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.employees_employee_type | Enumemployees_employee_typeFieldRefInput<$PrismaModel> | null
    in?: $Enums.employees_employee_type[] | ListEnumemployees_employee_typeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.employees_employee_type[] | ListEnumemployees_employee_typeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumemployees_employee_typeNullableFilter<$PrismaModel> | $Enums.employees_employee_type | null
  }

  export type NestedEnumemployees_employee_typeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.employees_employee_type | Enumemployees_employee_typeFieldRefInput<$PrismaModel> | null
    in?: $Enums.employees_employee_type[] | ListEnumemployees_employee_typeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.employees_employee_type[] | ListEnumemployees_employee_typeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumemployees_employee_typeNullableWithAggregatesFilter<$PrismaModel> | $Enums.employees_employee_type | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumemployees_employee_typeNullableFilter<$PrismaModel>
    _max?: NestedEnumemployees_employee_typeNullableFilter<$PrismaModel>
  }

  export type NestedEnumleave_types_type_nameFilter<$PrismaModel = never> = {
    equals?: $Enums.leave_types_type_name | Enumleave_types_type_nameFieldRefInput<$PrismaModel>
    in?: $Enums.leave_types_type_name[] | ListEnumleave_types_type_nameFieldRefInput<$PrismaModel>
    notIn?: $Enums.leave_types_type_name[] | ListEnumleave_types_type_nameFieldRefInput<$PrismaModel>
    not?: NestedEnumleave_types_type_nameFilter<$PrismaModel> | $Enums.leave_types_type_name
  }

  export type NestedEnumleave_types_type_nameWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.leave_types_type_name | Enumleave_types_type_nameFieldRefInput<$PrismaModel>
    in?: $Enums.leave_types_type_name[] | ListEnumleave_types_type_nameFieldRefInput<$PrismaModel>
    notIn?: $Enums.leave_types_type_name[] | ListEnumleave_types_type_nameFieldRefInput<$PrismaModel>
    not?: NestedEnumleave_types_type_nameWithAggregatesFilter<$PrismaModel> | $Enums.leave_types_type_name
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumleave_types_type_nameFilter<$PrismaModel>
    _max?: NestedEnumleave_types_type_nameFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedEnumleave_requests_statusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.leave_requests_status | Enumleave_requests_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.leave_requests_status[] | ListEnumleave_requests_statusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.leave_requests_status[] | ListEnumleave_requests_statusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumleave_requests_statusNullableFilter<$PrismaModel> | $Enums.leave_requests_status | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumleave_requests_statusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.leave_requests_status | Enumleave_requests_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.leave_requests_status[] | ListEnumleave_requests_statusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.leave_requests_status[] | ListEnumleave_requests_statusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumleave_requests_statusNullableWithAggregatesFilter<$PrismaModel> | $Enums.leave_requests_status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumleave_requests_statusNullableFilter<$PrismaModel>
    _max?: NestedEnumleave_requests_statusNullableFilter<$PrismaModel>
  }

  export type NestedEnumusers_roleFilter<$PrismaModel = never> = {
    equals?: $Enums.users_role | Enumusers_roleFieldRefInput<$PrismaModel>
    in?: $Enums.users_role[] | ListEnumusers_roleFieldRefInput<$PrismaModel>
    notIn?: $Enums.users_role[] | ListEnumusers_roleFieldRefInput<$PrismaModel>
    not?: NestedEnumusers_roleFilter<$PrismaModel> | $Enums.users_role
  }

  export type NestedEnumusers_verifiedNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.users_verified | Enumusers_verifiedFieldRefInput<$PrismaModel> | null
    in?: $Enums.users_verified[] | ListEnumusers_verifiedFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.users_verified[] | ListEnumusers_verifiedFieldRefInput<$PrismaModel> | null
    not?: NestedEnumusers_verifiedNullableFilter<$PrismaModel> | $Enums.users_verified | null
  }

  export type NestedEnumusers_roleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.users_role | Enumusers_roleFieldRefInput<$PrismaModel>
    in?: $Enums.users_role[] | ListEnumusers_roleFieldRefInput<$PrismaModel>
    notIn?: $Enums.users_role[] | ListEnumusers_roleFieldRefInput<$PrismaModel>
    not?: NestedEnumusers_roleWithAggregatesFilter<$PrismaModel> | $Enums.users_role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumusers_roleFilter<$PrismaModel>
    _max?: NestedEnumusers_roleFilter<$PrismaModel>
  }

  export type NestedEnumusers_verifiedNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.users_verified | Enumusers_verifiedFieldRefInput<$PrismaModel> | null
    in?: $Enums.users_verified[] | ListEnumusers_verifiedFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.users_verified[] | ListEnumusers_verifiedFieldRefInput<$PrismaModel> | null
    not?: NestedEnumusers_verifiedNullableWithAggregatesFilter<$PrismaModel> | $Enums.users_verified | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumusers_verifiedNullableFilter<$PrismaModel>
    _max?: NestedEnumusers_verifiedNullableFilter<$PrismaModel>
  }

  export type employeesCreateWithoutAddressesInput = {
    candidate_id?: string | null
    name?: string | null
    contact_no?: string | null
    password?: string | null
    gender?: string | null
    dob?: Date | string | null
    aadhar_card?: string | null
    pan_card?: string | null
    education_certificates?: string | null
    resume?: string | null
    experience_certificate?: string | null
    profile_photo?: string | null
    created_at?: Date | string | null
    experience_years?: number | null
    experience_months?: number | null
    employee_type?: $Enums.employees_employee_type | null
    aadhar_number?: string | null
    pan_number?: string | null
    audit_logs_audit_logs_empidToemployees?: audit_logsCreateNestedManyWithoutEmployees_audit_logs_empidToemployeesInput
    audit_logs_audit_logs_performed_byToemployees?: audit_logsCreateNestedManyWithoutEmployees_audit_logs_performed_byToemployeesInput
    bank_details?: bank_detailsCreateNestedManyWithoutEmployeesInput
    compliance_documents?: compliance_documentsCreateNestedManyWithoutEmployeesInput
    compliance_status?: compliance_statusCreateNestedOneWithoutEmployeesInput
    users?: usersCreateNestedOneWithoutEmployeesInput
  }

  export type employeesUncheckedCreateWithoutAddressesInput = {
    empid?: number
    candidate_id?: string | null
    name?: string | null
    email?: string | null
    contact_no?: string | null
    password?: string | null
    gender?: string | null
    dob?: Date | string | null
    aadhar_card?: string | null
    pan_card?: string | null
    education_certificates?: string | null
    resume?: string | null
    experience_certificate?: string | null
    profile_photo?: string | null
    created_at?: Date | string | null
    experience_years?: number | null
    experience_months?: number | null
    employee_type?: $Enums.employees_employee_type | null
    aadhar_number?: string | null
    pan_number?: string | null
    audit_logs_audit_logs_empidToemployees?: audit_logsUncheckedCreateNestedManyWithoutEmployees_audit_logs_empidToemployeesInput
    audit_logs_audit_logs_performed_byToemployees?: audit_logsUncheckedCreateNestedManyWithoutEmployees_audit_logs_performed_byToemployeesInput
    bank_details?: bank_detailsUncheckedCreateNestedManyWithoutEmployeesInput
    compliance_documents?: compliance_documentsUncheckedCreateNestedManyWithoutEmployeesInput
    compliance_status?: compliance_statusUncheckedCreateNestedOneWithoutEmployeesInput
  }

  export type employeesCreateOrConnectWithoutAddressesInput = {
    where: employeesWhereUniqueInput
    create: XOR<employeesCreateWithoutAddressesInput, employeesUncheckedCreateWithoutAddressesInput>
  }

  export type employeesUpsertWithoutAddressesInput = {
    update: XOR<employeesUpdateWithoutAddressesInput, employeesUncheckedUpdateWithoutAddressesInput>
    create: XOR<employeesCreateWithoutAddressesInput, employeesUncheckedCreateWithoutAddressesInput>
    where?: employeesWhereInput
  }

  export type employeesUpdateToOneWithWhereWithoutAddressesInput = {
    where?: employeesWhereInput
    data: XOR<employeesUpdateWithoutAddressesInput, employeesUncheckedUpdateWithoutAddressesInput>
  }

  export type employeesUpdateWithoutAddressesInput = {
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_no?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    dob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aadhar_card?: NullableStringFieldUpdateOperationsInput | string | null
    pan_card?: NullableStringFieldUpdateOperationsInput | string | null
    education_certificates?: NullableStringFieldUpdateOperationsInput | string | null
    resume?: NullableStringFieldUpdateOperationsInput | string | null
    experience_certificate?: NullableStringFieldUpdateOperationsInput | string | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    experience_years?: NullableIntFieldUpdateOperationsInput | number | null
    experience_months?: NullableIntFieldUpdateOperationsInput | number | null
    employee_type?: NullableEnumemployees_employee_typeFieldUpdateOperationsInput | $Enums.employees_employee_type | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    pan_number?: NullableStringFieldUpdateOperationsInput | string | null
    audit_logs_audit_logs_empidToemployees?: audit_logsUpdateManyWithoutEmployees_audit_logs_empidToemployeesNestedInput
    audit_logs_audit_logs_performed_byToemployees?: audit_logsUpdateManyWithoutEmployees_audit_logs_performed_byToemployeesNestedInput
    bank_details?: bank_detailsUpdateManyWithoutEmployeesNestedInput
    compliance_documents?: compliance_documentsUpdateManyWithoutEmployeesNestedInput
    compliance_status?: compliance_statusUpdateOneWithoutEmployeesNestedInput
    users?: usersUpdateOneWithoutEmployeesNestedInput
  }

  export type employeesUncheckedUpdateWithoutAddressesInput = {
    empid?: IntFieldUpdateOperationsInput | number
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contact_no?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    dob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aadhar_card?: NullableStringFieldUpdateOperationsInput | string | null
    pan_card?: NullableStringFieldUpdateOperationsInput | string | null
    education_certificates?: NullableStringFieldUpdateOperationsInput | string | null
    resume?: NullableStringFieldUpdateOperationsInput | string | null
    experience_certificate?: NullableStringFieldUpdateOperationsInput | string | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    experience_years?: NullableIntFieldUpdateOperationsInput | number | null
    experience_months?: NullableIntFieldUpdateOperationsInput | number | null
    employee_type?: NullableEnumemployees_employee_typeFieldUpdateOperationsInput | $Enums.employees_employee_type | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    pan_number?: NullableStringFieldUpdateOperationsInput | string | null
    audit_logs_audit_logs_empidToemployees?: audit_logsUncheckedUpdateManyWithoutEmployees_audit_logs_empidToemployeesNestedInput
    audit_logs_audit_logs_performed_byToemployees?: audit_logsUncheckedUpdateManyWithoutEmployees_audit_logs_performed_byToemployeesNestedInput
    bank_details?: bank_detailsUncheckedUpdateManyWithoutEmployeesNestedInput
    compliance_documents?: compliance_documentsUncheckedUpdateManyWithoutEmployeesNestedInput
    compliance_status?: compliance_statusUncheckedUpdateOneWithoutEmployeesNestedInput
  }

  export type employeesCreateWithoutAudit_logs_audit_logs_empidToemployeesInput = {
    candidate_id?: string | null
    name?: string | null
    contact_no?: string | null
    password?: string | null
    gender?: string | null
    dob?: Date | string | null
    aadhar_card?: string | null
    pan_card?: string | null
    education_certificates?: string | null
    resume?: string | null
    experience_certificate?: string | null
    profile_photo?: string | null
    created_at?: Date | string | null
    experience_years?: number | null
    experience_months?: number | null
    employee_type?: $Enums.employees_employee_type | null
    aadhar_number?: string | null
    pan_number?: string | null
    addresses?: addressesCreateNestedManyWithoutEmployeesInput
    audit_logs_audit_logs_performed_byToemployees?: audit_logsCreateNestedManyWithoutEmployees_audit_logs_performed_byToemployeesInput
    bank_details?: bank_detailsCreateNestedManyWithoutEmployeesInput
    compliance_documents?: compliance_documentsCreateNestedManyWithoutEmployeesInput
    compliance_status?: compliance_statusCreateNestedOneWithoutEmployeesInput
    users?: usersCreateNestedOneWithoutEmployeesInput
  }

  export type employeesUncheckedCreateWithoutAudit_logs_audit_logs_empidToemployeesInput = {
    empid?: number
    candidate_id?: string | null
    name?: string | null
    email?: string | null
    contact_no?: string | null
    password?: string | null
    gender?: string | null
    dob?: Date | string | null
    aadhar_card?: string | null
    pan_card?: string | null
    education_certificates?: string | null
    resume?: string | null
    experience_certificate?: string | null
    profile_photo?: string | null
    created_at?: Date | string | null
    experience_years?: number | null
    experience_months?: number | null
    employee_type?: $Enums.employees_employee_type | null
    aadhar_number?: string | null
    pan_number?: string | null
    addresses?: addressesUncheckedCreateNestedManyWithoutEmployeesInput
    audit_logs_audit_logs_performed_byToemployees?: audit_logsUncheckedCreateNestedManyWithoutEmployees_audit_logs_performed_byToemployeesInput
    bank_details?: bank_detailsUncheckedCreateNestedManyWithoutEmployeesInput
    compliance_documents?: compliance_documentsUncheckedCreateNestedManyWithoutEmployeesInput
    compliance_status?: compliance_statusUncheckedCreateNestedOneWithoutEmployeesInput
  }

  export type employeesCreateOrConnectWithoutAudit_logs_audit_logs_empidToemployeesInput = {
    where: employeesWhereUniqueInput
    create: XOR<employeesCreateWithoutAudit_logs_audit_logs_empidToemployeesInput, employeesUncheckedCreateWithoutAudit_logs_audit_logs_empidToemployeesInput>
  }

  export type employeesCreateWithoutAudit_logs_audit_logs_performed_byToemployeesInput = {
    candidate_id?: string | null
    name?: string | null
    contact_no?: string | null
    password?: string | null
    gender?: string | null
    dob?: Date | string | null
    aadhar_card?: string | null
    pan_card?: string | null
    education_certificates?: string | null
    resume?: string | null
    experience_certificate?: string | null
    profile_photo?: string | null
    created_at?: Date | string | null
    experience_years?: number | null
    experience_months?: number | null
    employee_type?: $Enums.employees_employee_type | null
    aadhar_number?: string | null
    pan_number?: string | null
    addresses?: addressesCreateNestedManyWithoutEmployeesInput
    audit_logs_audit_logs_empidToemployees?: audit_logsCreateNestedManyWithoutEmployees_audit_logs_empidToemployeesInput
    bank_details?: bank_detailsCreateNestedManyWithoutEmployeesInput
    compliance_documents?: compliance_documentsCreateNestedManyWithoutEmployeesInput
    compliance_status?: compliance_statusCreateNestedOneWithoutEmployeesInput
    users?: usersCreateNestedOneWithoutEmployeesInput
  }

  export type employeesUncheckedCreateWithoutAudit_logs_audit_logs_performed_byToemployeesInput = {
    empid?: number
    candidate_id?: string | null
    name?: string | null
    email?: string | null
    contact_no?: string | null
    password?: string | null
    gender?: string | null
    dob?: Date | string | null
    aadhar_card?: string | null
    pan_card?: string | null
    education_certificates?: string | null
    resume?: string | null
    experience_certificate?: string | null
    profile_photo?: string | null
    created_at?: Date | string | null
    experience_years?: number | null
    experience_months?: number | null
    employee_type?: $Enums.employees_employee_type | null
    aadhar_number?: string | null
    pan_number?: string | null
    addresses?: addressesUncheckedCreateNestedManyWithoutEmployeesInput
    audit_logs_audit_logs_empidToemployees?: audit_logsUncheckedCreateNestedManyWithoutEmployees_audit_logs_empidToemployeesInput
    bank_details?: bank_detailsUncheckedCreateNestedManyWithoutEmployeesInput
    compliance_documents?: compliance_documentsUncheckedCreateNestedManyWithoutEmployeesInput
    compliance_status?: compliance_statusUncheckedCreateNestedOneWithoutEmployeesInput
  }

  export type employeesCreateOrConnectWithoutAudit_logs_audit_logs_performed_byToemployeesInput = {
    where: employeesWhereUniqueInput
    create: XOR<employeesCreateWithoutAudit_logs_audit_logs_performed_byToemployeesInput, employeesUncheckedCreateWithoutAudit_logs_audit_logs_performed_byToemployeesInput>
  }

  export type employeesUpsertWithoutAudit_logs_audit_logs_empidToemployeesInput = {
    update: XOR<employeesUpdateWithoutAudit_logs_audit_logs_empidToemployeesInput, employeesUncheckedUpdateWithoutAudit_logs_audit_logs_empidToemployeesInput>
    create: XOR<employeesCreateWithoutAudit_logs_audit_logs_empidToemployeesInput, employeesUncheckedCreateWithoutAudit_logs_audit_logs_empidToemployeesInput>
    where?: employeesWhereInput
  }

  export type employeesUpdateToOneWithWhereWithoutAudit_logs_audit_logs_empidToemployeesInput = {
    where?: employeesWhereInput
    data: XOR<employeesUpdateWithoutAudit_logs_audit_logs_empidToemployeesInput, employeesUncheckedUpdateWithoutAudit_logs_audit_logs_empidToemployeesInput>
  }

  export type employeesUpdateWithoutAudit_logs_audit_logs_empidToemployeesInput = {
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_no?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    dob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aadhar_card?: NullableStringFieldUpdateOperationsInput | string | null
    pan_card?: NullableStringFieldUpdateOperationsInput | string | null
    education_certificates?: NullableStringFieldUpdateOperationsInput | string | null
    resume?: NullableStringFieldUpdateOperationsInput | string | null
    experience_certificate?: NullableStringFieldUpdateOperationsInput | string | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    experience_years?: NullableIntFieldUpdateOperationsInput | number | null
    experience_months?: NullableIntFieldUpdateOperationsInput | number | null
    employee_type?: NullableEnumemployees_employee_typeFieldUpdateOperationsInput | $Enums.employees_employee_type | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    pan_number?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: addressesUpdateManyWithoutEmployeesNestedInput
    audit_logs_audit_logs_performed_byToemployees?: audit_logsUpdateManyWithoutEmployees_audit_logs_performed_byToemployeesNestedInput
    bank_details?: bank_detailsUpdateManyWithoutEmployeesNestedInput
    compliance_documents?: compliance_documentsUpdateManyWithoutEmployeesNestedInput
    compliance_status?: compliance_statusUpdateOneWithoutEmployeesNestedInput
    users?: usersUpdateOneWithoutEmployeesNestedInput
  }

  export type employeesUncheckedUpdateWithoutAudit_logs_audit_logs_empidToemployeesInput = {
    empid?: IntFieldUpdateOperationsInput | number
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contact_no?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    dob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aadhar_card?: NullableStringFieldUpdateOperationsInput | string | null
    pan_card?: NullableStringFieldUpdateOperationsInput | string | null
    education_certificates?: NullableStringFieldUpdateOperationsInput | string | null
    resume?: NullableStringFieldUpdateOperationsInput | string | null
    experience_certificate?: NullableStringFieldUpdateOperationsInput | string | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    experience_years?: NullableIntFieldUpdateOperationsInput | number | null
    experience_months?: NullableIntFieldUpdateOperationsInput | number | null
    employee_type?: NullableEnumemployees_employee_typeFieldUpdateOperationsInput | $Enums.employees_employee_type | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    pan_number?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: addressesUncheckedUpdateManyWithoutEmployeesNestedInput
    audit_logs_audit_logs_performed_byToemployees?: audit_logsUncheckedUpdateManyWithoutEmployees_audit_logs_performed_byToemployeesNestedInput
    bank_details?: bank_detailsUncheckedUpdateManyWithoutEmployeesNestedInput
    compliance_documents?: compliance_documentsUncheckedUpdateManyWithoutEmployeesNestedInput
    compliance_status?: compliance_statusUncheckedUpdateOneWithoutEmployeesNestedInput
  }

  export type employeesUpsertWithoutAudit_logs_audit_logs_performed_byToemployeesInput = {
    update: XOR<employeesUpdateWithoutAudit_logs_audit_logs_performed_byToemployeesInput, employeesUncheckedUpdateWithoutAudit_logs_audit_logs_performed_byToemployeesInput>
    create: XOR<employeesCreateWithoutAudit_logs_audit_logs_performed_byToemployeesInput, employeesUncheckedCreateWithoutAudit_logs_audit_logs_performed_byToemployeesInput>
    where?: employeesWhereInput
  }

  export type employeesUpdateToOneWithWhereWithoutAudit_logs_audit_logs_performed_byToemployeesInput = {
    where?: employeesWhereInput
    data: XOR<employeesUpdateWithoutAudit_logs_audit_logs_performed_byToemployeesInput, employeesUncheckedUpdateWithoutAudit_logs_audit_logs_performed_byToemployeesInput>
  }

  export type employeesUpdateWithoutAudit_logs_audit_logs_performed_byToemployeesInput = {
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_no?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    dob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aadhar_card?: NullableStringFieldUpdateOperationsInput | string | null
    pan_card?: NullableStringFieldUpdateOperationsInput | string | null
    education_certificates?: NullableStringFieldUpdateOperationsInput | string | null
    resume?: NullableStringFieldUpdateOperationsInput | string | null
    experience_certificate?: NullableStringFieldUpdateOperationsInput | string | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    experience_years?: NullableIntFieldUpdateOperationsInput | number | null
    experience_months?: NullableIntFieldUpdateOperationsInput | number | null
    employee_type?: NullableEnumemployees_employee_typeFieldUpdateOperationsInput | $Enums.employees_employee_type | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    pan_number?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: addressesUpdateManyWithoutEmployeesNestedInput
    audit_logs_audit_logs_empidToemployees?: audit_logsUpdateManyWithoutEmployees_audit_logs_empidToemployeesNestedInput
    bank_details?: bank_detailsUpdateManyWithoutEmployeesNestedInput
    compliance_documents?: compliance_documentsUpdateManyWithoutEmployeesNestedInput
    compliance_status?: compliance_statusUpdateOneWithoutEmployeesNestedInput
    users?: usersUpdateOneWithoutEmployeesNestedInput
  }

  export type employeesUncheckedUpdateWithoutAudit_logs_audit_logs_performed_byToemployeesInput = {
    empid?: IntFieldUpdateOperationsInput | number
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contact_no?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    dob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aadhar_card?: NullableStringFieldUpdateOperationsInput | string | null
    pan_card?: NullableStringFieldUpdateOperationsInput | string | null
    education_certificates?: NullableStringFieldUpdateOperationsInput | string | null
    resume?: NullableStringFieldUpdateOperationsInput | string | null
    experience_certificate?: NullableStringFieldUpdateOperationsInput | string | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    experience_years?: NullableIntFieldUpdateOperationsInput | number | null
    experience_months?: NullableIntFieldUpdateOperationsInput | number | null
    employee_type?: NullableEnumemployees_employee_typeFieldUpdateOperationsInput | $Enums.employees_employee_type | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    pan_number?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: addressesUncheckedUpdateManyWithoutEmployeesNestedInput
    audit_logs_audit_logs_empidToemployees?: audit_logsUncheckedUpdateManyWithoutEmployees_audit_logs_empidToemployeesNestedInput
    bank_details?: bank_detailsUncheckedUpdateManyWithoutEmployeesNestedInput
    compliance_documents?: compliance_documentsUncheckedUpdateManyWithoutEmployeesNestedInput
    compliance_status?: compliance_statusUncheckedUpdateOneWithoutEmployeesNestedInput
  }

  export type employeesCreateWithoutBank_detailsInput = {
    candidate_id?: string | null
    name?: string | null
    contact_no?: string | null
    password?: string | null
    gender?: string | null
    dob?: Date | string | null
    aadhar_card?: string | null
    pan_card?: string | null
    education_certificates?: string | null
    resume?: string | null
    experience_certificate?: string | null
    profile_photo?: string | null
    created_at?: Date | string | null
    experience_years?: number | null
    experience_months?: number | null
    employee_type?: $Enums.employees_employee_type | null
    aadhar_number?: string | null
    pan_number?: string | null
    addresses?: addressesCreateNestedManyWithoutEmployeesInput
    audit_logs_audit_logs_empidToemployees?: audit_logsCreateNestedManyWithoutEmployees_audit_logs_empidToemployeesInput
    audit_logs_audit_logs_performed_byToemployees?: audit_logsCreateNestedManyWithoutEmployees_audit_logs_performed_byToemployeesInput
    compliance_documents?: compliance_documentsCreateNestedManyWithoutEmployeesInput
    compliance_status?: compliance_statusCreateNestedOneWithoutEmployeesInput
    users?: usersCreateNestedOneWithoutEmployeesInput
  }

  export type employeesUncheckedCreateWithoutBank_detailsInput = {
    empid?: number
    candidate_id?: string | null
    name?: string | null
    email?: string | null
    contact_no?: string | null
    password?: string | null
    gender?: string | null
    dob?: Date | string | null
    aadhar_card?: string | null
    pan_card?: string | null
    education_certificates?: string | null
    resume?: string | null
    experience_certificate?: string | null
    profile_photo?: string | null
    created_at?: Date | string | null
    experience_years?: number | null
    experience_months?: number | null
    employee_type?: $Enums.employees_employee_type | null
    aadhar_number?: string | null
    pan_number?: string | null
    addresses?: addressesUncheckedCreateNestedManyWithoutEmployeesInput
    audit_logs_audit_logs_empidToemployees?: audit_logsUncheckedCreateNestedManyWithoutEmployees_audit_logs_empidToemployeesInput
    audit_logs_audit_logs_performed_byToemployees?: audit_logsUncheckedCreateNestedManyWithoutEmployees_audit_logs_performed_byToemployeesInput
    compliance_documents?: compliance_documentsUncheckedCreateNestedManyWithoutEmployeesInput
    compliance_status?: compliance_statusUncheckedCreateNestedOneWithoutEmployeesInput
  }

  export type employeesCreateOrConnectWithoutBank_detailsInput = {
    where: employeesWhereUniqueInput
    create: XOR<employeesCreateWithoutBank_detailsInput, employeesUncheckedCreateWithoutBank_detailsInput>
  }

  export type employeesUpsertWithoutBank_detailsInput = {
    update: XOR<employeesUpdateWithoutBank_detailsInput, employeesUncheckedUpdateWithoutBank_detailsInput>
    create: XOR<employeesCreateWithoutBank_detailsInput, employeesUncheckedCreateWithoutBank_detailsInput>
    where?: employeesWhereInput
  }

  export type employeesUpdateToOneWithWhereWithoutBank_detailsInput = {
    where?: employeesWhereInput
    data: XOR<employeesUpdateWithoutBank_detailsInput, employeesUncheckedUpdateWithoutBank_detailsInput>
  }

  export type employeesUpdateWithoutBank_detailsInput = {
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_no?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    dob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aadhar_card?: NullableStringFieldUpdateOperationsInput | string | null
    pan_card?: NullableStringFieldUpdateOperationsInput | string | null
    education_certificates?: NullableStringFieldUpdateOperationsInput | string | null
    resume?: NullableStringFieldUpdateOperationsInput | string | null
    experience_certificate?: NullableStringFieldUpdateOperationsInput | string | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    experience_years?: NullableIntFieldUpdateOperationsInput | number | null
    experience_months?: NullableIntFieldUpdateOperationsInput | number | null
    employee_type?: NullableEnumemployees_employee_typeFieldUpdateOperationsInput | $Enums.employees_employee_type | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    pan_number?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: addressesUpdateManyWithoutEmployeesNestedInput
    audit_logs_audit_logs_empidToemployees?: audit_logsUpdateManyWithoutEmployees_audit_logs_empidToemployeesNestedInput
    audit_logs_audit_logs_performed_byToemployees?: audit_logsUpdateManyWithoutEmployees_audit_logs_performed_byToemployeesNestedInput
    compliance_documents?: compliance_documentsUpdateManyWithoutEmployeesNestedInput
    compliance_status?: compliance_statusUpdateOneWithoutEmployeesNestedInput
    users?: usersUpdateOneWithoutEmployeesNestedInput
  }

  export type employeesUncheckedUpdateWithoutBank_detailsInput = {
    empid?: IntFieldUpdateOperationsInput | number
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contact_no?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    dob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aadhar_card?: NullableStringFieldUpdateOperationsInput | string | null
    pan_card?: NullableStringFieldUpdateOperationsInput | string | null
    education_certificates?: NullableStringFieldUpdateOperationsInput | string | null
    resume?: NullableStringFieldUpdateOperationsInput | string | null
    experience_certificate?: NullableStringFieldUpdateOperationsInput | string | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    experience_years?: NullableIntFieldUpdateOperationsInput | number | null
    experience_months?: NullableIntFieldUpdateOperationsInput | number | null
    employee_type?: NullableEnumemployees_employee_typeFieldUpdateOperationsInput | $Enums.employees_employee_type | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    pan_number?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: addressesUncheckedUpdateManyWithoutEmployeesNestedInput
    audit_logs_audit_logs_empidToemployees?: audit_logsUncheckedUpdateManyWithoutEmployees_audit_logs_empidToemployeesNestedInput
    audit_logs_audit_logs_performed_byToemployees?: audit_logsUncheckedUpdateManyWithoutEmployees_audit_logs_performed_byToemployeesNestedInput
    compliance_documents?: compliance_documentsUncheckedUpdateManyWithoutEmployeesNestedInput
    compliance_status?: compliance_statusUncheckedUpdateOneWithoutEmployeesNestedInput
  }

  export type employeesCreateWithoutCompliance_documentsInput = {
    candidate_id?: string | null
    name?: string | null
    contact_no?: string | null
    password?: string | null
    gender?: string | null
    dob?: Date | string | null
    aadhar_card?: string | null
    pan_card?: string | null
    education_certificates?: string | null
    resume?: string | null
    experience_certificate?: string | null
    profile_photo?: string | null
    created_at?: Date | string | null
    experience_years?: number | null
    experience_months?: number | null
    employee_type?: $Enums.employees_employee_type | null
    aadhar_number?: string | null
    pan_number?: string | null
    addresses?: addressesCreateNestedManyWithoutEmployeesInput
    audit_logs_audit_logs_empidToemployees?: audit_logsCreateNestedManyWithoutEmployees_audit_logs_empidToemployeesInput
    audit_logs_audit_logs_performed_byToemployees?: audit_logsCreateNestedManyWithoutEmployees_audit_logs_performed_byToemployeesInput
    bank_details?: bank_detailsCreateNestedManyWithoutEmployeesInput
    compliance_status?: compliance_statusCreateNestedOneWithoutEmployeesInput
    users?: usersCreateNestedOneWithoutEmployeesInput
  }

  export type employeesUncheckedCreateWithoutCompliance_documentsInput = {
    empid?: number
    candidate_id?: string | null
    name?: string | null
    email?: string | null
    contact_no?: string | null
    password?: string | null
    gender?: string | null
    dob?: Date | string | null
    aadhar_card?: string | null
    pan_card?: string | null
    education_certificates?: string | null
    resume?: string | null
    experience_certificate?: string | null
    profile_photo?: string | null
    created_at?: Date | string | null
    experience_years?: number | null
    experience_months?: number | null
    employee_type?: $Enums.employees_employee_type | null
    aadhar_number?: string | null
    pan_number?: string | null
    addresses?: addressesUncheckedCreateNestedManyWithoutEmployeesInput
    audit_logs_audit_logs_empidToemployees?: audit_logsUncheckedCreateNestedManyWithoutEmployees_audit_logs_empidToemployeesInput
    audit_logs_audit_logs_performed_byToemployees?: audit_logsUncheckedCreateNestedManyWithoutEmployees_audit_logs_performed_byToemployeesInput
    bank_details?: bank_detailsUncheckedCreateNestedManyWithoutEmployeesInput
    compliance_status?: compliance_statusUncheckedCreateNestedOneWithoutEmployeesInput
  }

  export type employeesCreateOrConnectWithoutCompliance_documentsInput = {
    where: employeesWhereUniqueInput
    create: XOR<employeesCreateWithoutCompliance_documentsInput, employeesUncheckedCreateWithoutCompliance_documentsInput>
  }

  export type employeesUpsertWithoutCompliance_documentsInput = {
    update: XOR<employeesUpdateWithoutCompliance_documentsInput, employeesUncheckedUpdateWithoutCompliance_documentsInput>
    create: XOR<employeesCreateWithoutCompliance_documentsInput, employeesUncheckedCreateWithoutCompliance_documentsInput>
    where?: employeesWhereInput
  }

  export type employeesUpdateToOneWithWhereWithoutCompliance_documentsInput = {
    where?: employeesWhereInput
    data: XOR<employeesUpdateWithoutCompliance_documentsInput, employeesUncheckedUpdateWithoutCompliance_documentsInput>
  }

  export type employeesUpdateWithoutCompliance_documentsInput = {
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_no?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    dob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aadhar_card?: NullableStringFieldUpdateOperationsInput | string | null
    pan_card?: NullableStringFieldUpdateOperationsInput | string | null
    education_certificates?: NullableStringFieldUpdateOperationsInput | string | null
    resume?: NullableStringFieldUpdateOperationsInput | string | null
    experience_certificate?: NullableStringFieldUpdateOperationsInput | string | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    experience_years?: NullableIntFieldUpdateOperationsInput | number | null
    experience_months?: NullableIntFieldUpdateOperationsInput | number | null
    employee_type?: NullableEnumemployees_employee_typeFieldUpdateOperationsInput | $Enums.employees_employee_type | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    pan_number?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: addressesUpdateManyWithoutEmployeesNestedInput
    audit_logs_audit_logs_empidToemployees?: audit_logsUpdateManyWithoutEmployees_audit_logs_empidToemployeesNestedInput
    audit_logs_audit_logs_performed_byToemployees?: audit_logsUpdateManyWithoutEmployees_audit_logs_performed_byToemployeesNestedInput
    bank_details?: bank_detailsUpdateManyWithoutEmployeesNestedInput
    compliance_status?: compliance_statusUpdateOneWithoutEmployeesNestedInput
    users?: usersUpdateOneWithoutEmployeesNestedInput
  }

  export type employeesUncheckedUpdateWithoutCompliance_documentsInput = {
    empid?: IntFieldUpdateOperationsInput | number
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contact_no?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    dob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aadhar_card?: NullableStringFieldUpdateOperationsInput | string | null
    pan_card?: NullableStringFieldUpdateOperationsInput | string | null
    education_certificates?: NullableStringFieldUpdateOperationsInput | string | null
    resume?: NullableStringFieldUpdateOperationsInput | string | null
    experience_certificate?: NullableStringFieldUpdateOperationsInput | string | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    experience_years?: NullableIntFieldUpdateOperationsInput | number | null
    experience_months?: NullableIntFieldUpdateOperationsInput | number | null
    employee_type?: NullableEnumemployees_employee_typeFieldUpdateOperationsInput | $Enums.employees_employee_type | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    pan_number?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: addressesUncheckedUpdateManyWithoutEmployeesNestedInput
    audit_logs_audit_logs_empidToemployees?: audit_logsUncheckedUpdateManyWithoutEmployees_audit_logs_empidToemployeesNestedInput
    audit_logs_audit_logs_performed_byToemployees?: audit_logsUncheckedUpdateManyWithoutEmployees_audit_logs_performed_byToemployeesNestedInput
    bank_details?: bank_detailsUncheckedUpdateManyWithoutEmployeesNestedInput
    compliance_status?: compliance_statusUncheckedUpdateOneWithoutEmployeesNestedInput
  }

  export type employeesCreateWithoutCompliance_statusInput = {
    candidate_id?: string | null
    name?: string | null
    contact_no?: string | null
    password?: string | null
    gender?: string | null
    dob?: Date | string | null
    aadhar_card?: string | null
    pan_card?: string | null
    education_certificates?: string | null
    resume?: string | null
    experience_certificate?: string | null
    profile_photo?: string | null
    created_at?: Date | string | null
    experience_years?: number | null
    experience_months?: number | null
    employee_type?: $Enums.employees_employee_type | null
    aadhar_number?: string | null
    pan_number?: string | null
    addresses?: addressesCreateNestedManyWithoutEmployeesInput
    audit_logs_audit_logs_empidToemployees?: audit_logsCreateNestedManyWithoutEmployees_audit_logs_empidToemployeesInput
    audit_logs_audit_logs_performed_byToemployees?: audit_logsCreateNestedManyWithoutEmployees_audit_logs_performed_byToemployeesInput
    bank_details?: bank_detailsCreateNestedManyWithoutEmployeesInput
    compliance_documents?: compliance_documentsCreateNestedManyWithoutEmployeesInput
    users?: usersCreateNestedOneWithoutEmployeesInput
  }

  export type employeesUncheckedCreateWithoutCompliance_statusInput = {
    empid?: number
    candidate_id?: string | null
    name?: string | null
    email?: string | null
    contact_no?: string | null
    password?: string | null
    gender?: string | null
    dob?: Date | string | null
    aadhar_card?: string | null
    pan_card?: string | null
    education_certificates?: string | null
    resume?: string | null
    experience_certificate?: string | null
    profile_photo?: string | null
    created_at?: Date | string | null
    experience_years?: number | null
    experience_months?: number | null
    employee_type?: $Enums.employees_employee_type | null
    aadhar_number?: string | null
    pan_number?: string | null
    addresses?: addressesUncheckedCreateNestedManyWithoutEmployeesInput
    audit_logs_audit_logs_empidToemployees?: audit_logsUncheckedCreateNestedManyWithoutEmployees_audit_logs_empidToemployeesInput
    audit_logs_audit_logs_performed_byToemployees?: audit_logsUncheckedCreateNestedManyWithoutEmployees_audit_logs_performed_byToemployeesInput
    bank_details?: bank_detailsUncheckedCreateNestedManyWithoutEmployeesInput
    compliance_documents?: compliance_documentsUncheckedCreateNestedManyWithoutEmployeesInput
  }

  export type employeesCreateOrConnectWithoutCompliance_statusInput = {
    where: employeesWhereUniqueInput
    create: XOR<employeesCreateWithoutCompliance_statusInput, employeesUncheckedCreateWithoutCompliance_statusInput>
  }

  export type employeesUpsertWithoutCompliance_statusInput = {
    update: XOR<employeesUpdateWithoutCompliance_statusInput, employeesUncheckedUpdateWithoutCompliance_statusInput>
    create: XOR<employeesCreateWithoutCompliance_statusInput, employeesUncheckedCreateWithoutCompliance_statusInput>
    where?: employeesWhereInput
  }

  export type employeesUpdateToOneWithWhereWithoutCompliance_statusInput = {
    where?: employeesWhereInput
    data: XOR<employeesUpdateWithoutCompliance_statusInput, employeesUncheckedUpdateWithoutCompliance_statusInput>
  }

  export type employeesUpdateWithoutCompliance_statusInput = {
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_no?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    dob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aadhar_card?: NullableStringFieldUpdateOperationsInput | string | null
    pan_card?: NullableStringFieldUpdateOperationsInput | string | null
    education_certificates?: NullableStringFieldUpdateOperationsInput | string | null
    resume?: NullableStringFieldUpdateOperationsInput | string | null
    experience_certificate?: NullableStringFieldUpdateOperationsInput | string | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    experience_years?: NullableIntFieldUpdateOperationsInput | number | null
    experience_months?: NullableIntFieldUpdateOperationsInput | number | null
    employee_type?: NullableEnumemployees_employee_typeFieldUpdateOperationsInput | $Enums.employees_employee_type | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    pan_number?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: addressesUpdateManyWithoutEmployeesNestedInput
    audit_logs_audit_logs_empidToemployees?: audit_logsUpdateManyWithoutEmployees_audit_logs_empidToemployeesNestedInput
    audit_logs_audit_logs_performed_byToemployees?: audit_logsUpdateManyWithoutEmployees_audit_logs_performed_byToemployeesNestedInput
    bank_details?: bank_detailsUpdateManyWithoutEmployeesNestedInput
    compliance_documents?: compliance_documentsUpdateManyWithoutEmployeesNestedInput
    users?: usersUpdateOneWithoutEmployeesNestedInput
  }

  export type employeesUncheckedUpdateWithoutCompliance_statusInput = {
    empid?: IntFieldUpdateOperationsInput | number
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contact_no?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    dob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aadhar_card?: NullableStringFieldUpdateOperationsInput | string | null
    pan_card?: NullableStringFieldUpdateOperationsInput | string | null
    education_certificates?: NullableStringFieldUpdateOperationsInput | string | null
    resume?: NullableStringFieldUpdateOperationsInput | string | null
    experience_certificate?: NullableStringFieldUpdateOperationsInput | string | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    experience_years?: NullableIntFieldUpdateOperationsInput | number | null
    experience_months?: NullableIntFieldUpdateOperationsInput | number | null
    employee_type?: NullableEnumemployees_employee_typeFieldUpdateOperationsInput | $Enums.employees_employee_type | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    pan_number?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: addressesUncheckedUpdateManyWithoutEmployeesNestedInput
    audit_logs_audit_logs_empidToemployees?: audit_logsUncheckedUpdateManyWithoutEmployees_audit_logs_empidToemployeesNestedInput
    audit_logs_audit_logs_performed_byToemployees?: audit_logsUncheckedUpdateManyWithoutEmployees_audit_logs_performed_byToemployeesNestedInput
    bank_details?: bank_detailsUncheckedUpdateManyWithoutEmployeesNestedInput
    compliance_documents?: compliance_documentsUncheckedUpdateManyWithoutEmployeesNestedInput
  }

  export type addressesCreateWithoutEmployeesInput = {
    address_line1: string
    address_line2?: string | null
    city: string
    state: string
    country: string
    pincode: string
  }

  export type addressesUncheckedCreateWithoutEmployeesInput = {
    id?: number
    address_line1: string
    address_line2?: string | null
    city: string
    state: string
    country: string
    pincode: string
  }

  export type addressesCreateOrConnectWithoutEmployeesInput = {
    where: addressesWhereUniqueInput
    create: XOR<addressesCreateWithoutEmployeesInput, addressesUncheckedCreateWithoutEmployeesInput>
  }

  export type addressesCreateManyEmployeesInputEnvelope = {
    data: addressesCreateManyEmployeesInput | addressesCreateManyEmployeesInput[]
    skipDuplicates?: boolean
  }

  export type audit_logsCreateWithoutEmployees_audit_logs_empidToemployeesInput = {
    action?: string | null
    timestamp?: Date | string | null
    employees_audit_logs_performed_byToemployees?: employeesCreateNestedOneWithoutAudit_logs_audit_logs_performed_byToemployeesInput
  }

  export type audit_logsUncheckedCreateWithoutEmployees_audit_logs_empidToemployeesInput = {
    id?: number
    performed_by?: number | null
    action?: string | null
    timestamp?: Date | string | null
  }

  export type audit_logsCreateOrConnectWithoutEmployees_audit_logs_empidToemployeesInput = {
    where: audit_logsWhereUniqueInput
    create: XOR<audit_logsCreateWithoutEmployees_audit_logs_empidToemployeesInput, audit_logsUncheckedCreateWithoutEmployees_audit_logs_empidToemployeesInput>
  }

  export type audit_logsCreateManyEmployees_audit_logs_empidToemployeesInputEnvelope = {
    data: audit_logsCreateManyEmployees_audit_logs_empidToemployeesInput | audit_logsCreateManyEmployees_audit_logs_empidToemployeesInput[]
    skipDuplicates?: boolean
  }

  export type audit_logsCreateWithoutEmployees_audit_logs_performed_byToemployeesInput = {
    action?: string | null
    timestamp?: Date | string | null
    employees_audit_logs_empidToemployees?: employeesCreateNestedOneWithoutAudit_logs_audit_logs_empidToemployeesInput
  }

  export type audit_logsUncheckedCreateWithoutEmployees_audit_logs_performed_byToemployeesInput = {
    id?: number
    empid?: number | null
    action?: string | null
    timestamp?: Date | string | null
  }

  export type audit_logsCreateOrConnectWithoutEmployees_audit_logs_performed_byToemployeesInput = {
    where: audit_logsWhereUniqueInput
    create: XOR<audit_logsCreateWithoutEmployees_audit_logs_performed_byToemployeesInput, audit_logsUncheckedCreateWithoutEmployees_audit_logs_performed_byToemployeesInput>
  }

  export type audit_logsCreateManyEmployees_audit_logs_performed_byToemployeesInputEnvelope = {
    data: audit_logsCreateManyEmployees_audit_logs_performed_byToemployeesInput | audit_logsCreateManyEmployees_audit_logs_performed_byToemployeesInput[]
    skipDuplicates?: boolean
  }

  export type bank_detailsCreateWithoutEmployeesInput = {
    account_holder_name: string
    bank_name: string
    branch_name?: string | null
    account_number: string
    ifsc_code: string
    checkbook_document?: string | null
  }

  export type bank_detailsUncheckedCreateWithoutEmployeesInput = {
    id?: number
    account_holder_name: string
    bank_name: string
    branch_name?: string | null
    account_number: string
    ifsc_code: string
    checkbook_document?: string | null
  }

  export type bank_detailsCreateOrConnectWithoutEmployeesInput = {
    where: bank_detailsWhereUniqueInput
    create: XOR<bank_detailsCreateWithoutEmployeesInput, bank_detailsUncheckedCreateWithoutEmployeesInput>
  }

  export type bank_detailsCreateManyEmployeesInputEnvelope = {
    data: bank_detailsCreateManyEmployeesInput | bank_detailsCreateManyEmployeesInput[]
    skipDuplicates?: boolean
  }

  export type compliance_documentsCreateWithoutEmployeesInput = {
    doc_type?: string | null
    file_path?: string | null
    uploaded_at?: Date | string | null
    expires_on?: Date | string | null
  }

  export type compliance_documentsUncheckedCreateWithoutEmployeesInput = {
    id?: number
    doc_type?: string | null
    file_path?: string | null
    uploaded_at?: Date | string | null
    expires_on?: Date | string | null
  }

  export type compliance_documentsCreateOrConnectWithoutEmployeesInput = {
    where: compliance_documentsWhereUniqueInput
    create: XOR<compliance_documentsCreateWithoutEmployeesInput, compliance_documentsUncheckedCreateWithoutEmployeesInput>
  }

  export type compliance_documentsCreateManyEmployeesInputEnvelope = {
    data: compliance_documentsCreateManyEmployeesInput | compliance_documentsCreateManyEmployeesInput[]
    skipDuplicates?: boolean
  }

  export type compliance_statusCreateWithoutEmployeesInput = {
    overall_status?: $Enums.compliance_status_overall_status | null
    last_updated?: Date | string | null
  }

  export type compliance_statusUncheckedCreateWithoutEmployeesInput = {
    overall_status?: $Enums.compliance_status_overall_status | null
    last_updated?: Date | string | null
  }

  export type compliance_statusCreateOrConnectWithoutEmployeesInput = {
    where: compliance_statusWhereUniqueInput
    create: XOR<compliance_statusCreateWithoutEmployeesInput, compliance_statusUncheckedCreateWithoutEmployeesInput>
  }

  export type usersCreateWithoutEmployeesInput = {
    empid: string
    name: string
    email: string
    contact_number?: string | null
    password: string
    position?: string | null
    date_of_joining?: Date | string | null
    status?: string | null
    experience?: number | null
    profile_photo?: string | null
    role?: $Enums.users_role
    created_at?: Date | string | null
    verified?: $Enums.users_verified | null
    leave_balances?: leave_balancesCreateNestedManyWithoutUsersInput
    leave_requests?: leave_requestsCreateNestedManyWithoutUsersInput
    payroll?: payrollCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutEmployeesInput = {
    id?: number
    empid: string
    name: string
    email: string
    contact_number?: string | null
    password: string
    position?: string | null
    date_of_joining?: Date | string | null
    status?: string | null
    experience?: number | null
    profile_photo?: string | null
    role?: $Enums.users_role
    created_at?: Date | string | null
    verified?: $Enums.users_verified | null
    leave_balances?: leave_balancesUncheckedCreateNestedManyWithoutUsersInput
    leave_requests?: leave_requestsUncheckedCreateNestedManyWithoutUsersInput
    payroll?: payrollUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutEmployeesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutEmployeesInput, usersUncheckedCreateWithoutEmployeesInput>
  }

  export type addressesUpsertWithWhereUniqueWithoutEmployeesInput = {
    where: addressesWhereUniqueInput
    update: XOR<addressesUpdateWithoutEmployeesInput, addressesUncheckedUpdateWithoutEmployeesInput>
    create: XOR<addressesCreateWithoutEmployeesInput, addressesUncheckedCreateWithoutEmployeesInput>
  }

  export type addressesUpdateWithWhereUniqueWithoutEmployeesInput = {
    where: addressesWhereUniqueInput
    data: XOR<addressesUpdateWithoutEmployeesInput, addressesUncheckedUpdateWithoutEmployeesInput>
  }

  export type addressesUpdateManyWithWhereWithoutEmployeesInput = {
    where: addressesScalarWhereInput
    data: XOR<addressesUpdateManyMutationInput, addressesUncheckedUpdateManyWithoutEmployeesInput>
  }

  export type addressesScalarWhereInput = {
    AND?: addressesScalarWhereInput | addressesScalarWhereInput[]
    OR?: addressesScalarWhereInput[]
    NOT?: addressesScalarWhereInput | addressesScalarWhereInput[]
    id?: IntFilter<"addresses"> | number
    employee_id?: IntFilter<"addresses"> | number
    address_line1?: StringFilter<"addresses"> | string
    address_line2?: StringNullableFilter<"addresses"> | string | null
    city?: StringFilter<"addresses"> | string
    state?: StringFilter<"addresses"> | string
    country?: StringFilter<"addresses"> | string
    pincode?: StringFilter<"addresses"> | string
  }

  export type audit_logsUpsertWithWhereUniqueWithoutEmployees_audit_logs_empidToemployeesInput = {
    where: audit_logsWhereUniqueInput
    update: XOR<audit_logsUpdateWithoutEmployees_audit_logs_empidToemployeesInput, audit_logsUncheckedUpdateWithoutEmployees_audit_logs_empidToemployeesInput>
    create: XOR<audit_logsCreateWithoutEmployees_audit_logs_empidToemployeesInput, audit_logsUncheckedCreateWithoutEmployees_audit_logs_empidToemployeesInput>
  }

  export type audit_logsUpdateWithWhereUniqueWithoutEmployees_audit_logs_empidToemployeesInput = {
    where: audit_logsWhereUniqueInput
    data: XOR<audit_logsUpdateWithoutEmployees_audit_logs_empidToemployeesInput, audit_logsUncheckedUpdateWithoutEmployees_audit_logs_empidToemployeesInput>
  }

  export type audit_logsUpdateManyWithWhereWithoutEmployees_audit_logs_empidToemployeesInput = {
    where: audit_logsScalarWhereInput
    data: XOR<audit_logsUpdateManyMutationInput, audit_logsUncheckedUpdateManyWithoutEmployees_audit_logs_empidToemployeesInput>
  }

  export type audit_logsScalarWhereInput = {
    AND?: audit_logsScalarWhereInput | audit_logsScalarWhereInput[]
    OR?: audit_logsScalarWhereInput[]
    NOT?: audit_logsScalarWhereInput | audit_logsScalarWhereInput[]
    id?: IntFilter<"audit_logs"> | number
    empid?: IntNullableFilter<"audit_logs"> | number | null
    performed_by?: IntNullableFilter<"audit_logs"> | number | null
    action?: StringNullableFilter<"audit_logs"> | string | null
    timestamp?: DateTimeNullableFilter<"audit_logs"> | Date | string | null
  }

  export type audit_logsUpsertWithWhereUniqueWithoutEmployees_audit_logs_performed_byToemployeesInput = {
    where: audit_logsWhereUniqueInput
    update: XOR<audit_logsUpdateWithoutEmployees_audit_logs_performed_byToemployeesInput, audit_logsUncheckedUpdateWithoutEmployees_audit_logs_performed_byToemployeesInput>
    create: XOR<audit_logsCreateWithoutEmployees_audit_logs_performed_byToemployeesInput, audit_logsUncheckedCreateWithoutEmployees_audit_logs_performed_byToemployeesInput>
  }

  export type audit_logsUpdateWithWhereUniqueWithoutEmployees_audit_logs_performed_byToemployeesInput = {
    where: audit_logsWhereUniqueInput
    data: XOR<audit_logsUpdateWithoutEmployees_audit_logs_performed_byToemployeesInput, audit_logsUncheckedUpdateWithoutEmployees_audit_logs_performed_byToemployeesInput>
  }

  export type audit_logsUpdateManyWithWhereWithoutEmployees_audit_logs_performed_byToemployeesInput = {
    where: audit_logsScalarWhereInput
    data: XOR<audit_logsUpdateManyMutationInput, audit_logsUncheckedUpdateManyWithoutEmployees_audit_logs_performed_byToemployeesInput>
  }

  export type bank_detailsUpsertWithWhereUniqueWithoutEmployeesInput = {
    where: bank_detailsWhereUniqueInput
    update: XOR<bank_detailsUpdateWithoutEmployeesInput, bank_detailsUncheckedUpdateWithoutEmployeesInput>
    create: XOR<bank_detailsCreateWithoutEmployeesInput, bank_detailsUncheckedCreateWithoutEmployeesInput>
  }

  export type bank_detailsUpdateWithWhereUniqueWithoutEmployeesInput = {
    where: bank_detailsWhereUniqueInput
    data: XOR<bank_detailsUpdateWithoutEmployeesInput, bank_detailsUncheckedUpdateWithoutEmployeesInput>
  }

  export type bank_detailsUpdateManyWithWhereWithoutEmployeesInput = {
    where: bank_detailsScalarWhereInput
    data: XOR<bank_detailsUpdateManyMutationInput, bank_detailsUncheckedUpdateManyWithoutEmployeesInput>
  }

  export type bank_detailsScalarWhereInput = {
    AND?: bank_detailsScalarWhereInput | bank_detailsScalarWhereInput[]
    OR?: bank_detailsScalarWhereInput[]
    NOT?: bank_detailsScalarWhereInput | bank_detailsScalarWhereInput[]
    id?: IntFilter<"bank_details"> | number
    employee_id?: IntFilter<"bank_details"> | number
    account_holder_name?: StringFilter<"bank_details"> | string
    bank_name?: StringFilter<"bank_details"> | string
    branch_name?: StringNullableFilter<"bank_details"> | string | null
    account_number?: StringFilter<"bank_details"> | string
    ifsc_code?: StringFilter<"bank_details"> | string
    checkbook_document?: StringNullableFilter<"bank_details"> | string | null
  }

  export type compliance_documentsUpsertWithWhereUniqueWithoutEmployeesInput = {
    where: compliance_documentsWhereUniqueInput
    update: XOR<compliance_documentsUpdateWithoutEmployeesInput, compliance_documentsUncheckedUpdateWithoutEmployeesInput>
    create: XOR<compliance_documentsCreateWithoutEmployeesInput, compliance_documentsUncheckedCreateWithoutEmployeesInput>
  }

  export type compliance_documentsUpdateWithWhereUniqueWithoutEmployeesInput = {
    where: compliance_documentsWhereUniqueInput
    data: XOR<compliance_documentsUpdateWithoutEmployeesInput, compliance_documentsUncheckedUpdateWithoutEmployeesInput>
  }

  export type compliance_documentsUpdateManyWithWhereWithoutEmployeesInput = {
    where: compliance_documentsScalarWhereInput
    data: XOR<compliance_documentsUpdateManyMutationInput, compliance_documentsUncheckedUpdateManyWithoutEmployeesInput>
  }

  export type compliance_documentsScalarWhereInput = {
    AND?: compliance_documentsScalarWhereInput | compliance_documentsScalarWhereInput[]
    OR?: compliance_documentsScalarWhereInput[]
    NOT?: compliance_documentsScalarWhereInput | compliance_documentsScalarWhereInput[]
    id?: IntFilter<"compliance_documents"> | number
    empid?: IntNullableFilter<"compliance_documents"> | number | null
    doc_type?: StringNullableFilter<"compliance_documents"> | string | null
    file_path?: StringNullableFilter<"compliance_documents"> | string | null
    uploaded_at?: DateTimeNullableFilter<"compliance_documents"> | Date | string | null
    expires_on?: DateTimeNullableFilter<"compliance_documents"> | Date | string | null
  }

  export type compliance_statusUpsertWithoutEmployeesInput = {
    update: XOR<compliance_statusUpdateWithoutEmployeesInput, compliance_statusUncheckedUpdateWithoutEmployeesInput>
    create: XOR<compliance_statusCreateWithoutEmployeesInput, compliance_statusUncheckedCreateWithoutEmployeesInput>
    where?: compliance_statusWhereInput
  }

  export type compliance_statusUpdateToOneWithWhereWithoutEmployeesInput = {
    where?: compliance_statusWhereInput
    data: XOR<compliance_statusUpdateWithoutEmployeesInput, compliance_statusUncheckedUpdateWithoutEmployeesInput>
  }

  export type compliance_statusUpdateWithoutEmployeesInput = {
    overall_status?: NullableEnumcompliance_status_overall_statusFieldUpdateOperationsInput | $Enums.compliance_status_overall_status | null
    last_updated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type compliance_statusUncheckedUpdateWithoutEmployeesInput = {
    overall_status?: NullableEnumcompliance_status_overall_statusFieldUpdateOperationsInput | $Enums.compliance_status_overall_status | null
    last_updated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersUpsertWithoutEmployeesInput = {
    update: XOR<usersUpdateWithoutEmployeesInput, usersUncheckedUpdateWithoutEmployeesInput>
    create: XOR<usersCreateWithoutEmployeesInput, usersUncheckedCreateWithoutEmployeesInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutEmployeesInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutEmployeesInput, usersUncheckedUpdateWithoutEmployeesInput>
  }

  export type usersUpdateWithoutEmployeesInput = {
    empid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    contact_number?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    position?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_joining?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableIntFieldUpdateOperationsInput | number | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verified?: NullableEnumusers_verifiedFieldUpdateOperationsInput | $Enums.users_verified | null
    leave_balances?: leave_balancesUpdateManyWithoutUsersNestedInput
    leave_requests?: leave_requestsUpdateManyWithoutUsersNestedInput
    payroll?: payrollUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutEmployeesInput = {
    id?: IntFieldUpdateOperationsInput | number
    empid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    contact_number?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    position?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_joining?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableIntFieldUpdateOperationsInput | number | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verified?: NullableEnumusers_verifiedFieldUpdateOperationsInput | $Enums.users_verified | null
    leave_balances?: leave_balancesUncheckedUpdateManyWithoutUsersNestedInput
    leave_requests?: leave_requestsUncheckedUpdateManyWithoutUsersNestedInput
    payroll?: payrollUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type leave_balancesCreateWithoutLeave_typesInput = {
    total: number
    used?: number | null
    remaining?: number | null
    users: usersCreateNestedOneWithoutLeave_balancesInput
  }

  export type leave_balancesUncheckedCreateWithoutLeave_typesInput = {
    id?: number
    empid: string
    total: number
    used?: number | null
    remaining?: number | null
  }

  export type leave_balancesCreateOrConnectWithoutLeave_typesInput = {
    where: leave_balancesWhereUniqueInput
    create: XOR<leave_balancesCreateWithoutLeave_typesInput, leave_balancesUncheckedCreateWithoutLeave_typesInput>
  }

  export type leave_balancesCreateManyLeave_typesInputEnvelope = {
    data: leave_balancesCreateManyLeave_typesInput | leave_balancesCreateManyLeave_typesInput[]
    skipDuplicates?: boolean
  }

  export type leave_balancesUpsertWithWhereUniqueWithoutLeave_typesInput = {
    where: leave_balancesWhereUniqueInput
    update: XOR<leave_balancesUpdateWithoutLeave_typesInput, leave_balancesUncheckedUpdateWithoutLeave_typesInput>
    create: XOR<leave_balancesCreateWithoutLeave_typesInput, leave_balancesUncheckedCreateWithoutLeave_typesInput>
  }

  export type leave_balancesUpdateWithWhereUniqueWithoutLeave_typesInput = {
    where: leave_balancesWhereUniqueInput
    data: XOR<leave_balancesUpdateWithoutLeave_typesInput, leave_balancesUncheckedUpdateWithoutLeave_typesInput>
  }

  export type leave_balancesUpdateManyWithWhereWithoutLeave_typesInput = {
    where: leave_balancesScalarWhereInput
    data: XOR<leave_balancesUpdateManyMutationInput, leave_balancesUncheckedUpdateManyWithoutLeave_typesInput>
  }

  export type leave_balancesScalarWhereInput = {
    AND?: leave_balancesScalarWhereInput | leave_balancesScalarWhereInput[]
    OR?: leave_balancesScalarWhereInput[]
    NOT?: leave_balancesScalarWhereInput | leave_balancesScalarWhereInput[]
    id?: IntFilter<"leave_balances"> | number
    empid?: StringFilter<"leave_balances"> | string
    type_id?: IntFilter<"leave_balances"> | number
    total?: IntFilter<"leave_balances"> | number
    used?: IntNullableFilter<"leave_balances"> | number | null
    remaining?: IntNullableFilter<"leave_balances"> | number | null
  }

  export type usersCreateWithoutLeave_balancesInput = {
    empid: string
    name: string
    email: string
    contact_number?: string | null
    password: string
    position?: string | null
    date_of_joining?: Date | string | null
    status?: string | null
    experience?: number | null
    profile_photo?: string | null
    role?: $Enums.users_role
    created_at?: Date | string | null
    verified?: $Enums.users_verified | null
    employees?: employeesCreateNestedManyWithoutUsersInput
    leave_requests?: leave_requestsCreateNestedManyWithoutUsersInput
    payroll?: payrollCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutLeave_balancesInput = {
    id?: number
    empid: string
    name: string
    email: string
    contact_number?: string | null
    password: string
    position?: string | null
    date_of_joining?: Date | string | null
    status?: string | null
    experience?: number | null
    profile_photo?: string | null
    role?: $Enums.users_role
    created_at?: Date | string | null
    verified?: $Enums.users_verified | null
    employees?: employeesUncheckedCreateNestedManyWithoutUsersInput
    leave_requests?: leave_requestsUncheckedCreateNestedManyWithoutUsersInput
    payroll?: payrollUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutLeave_balancesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutLeave_balancesInput, usersUncheckedCreateWithoutLeave_balancesInput>
  }

  export type leave_typesCreateWithoutLeave_balancesInput = {
    type_name: $Enums.leave_types_type_name
    max_days: number
    paid?: boolean | null
  }

  export type leave_typesUncheckedCreateWithoutLeave_balancesInput = {
    id?: number
    type_name: $Enums.leave_types_type_name
    max_days: number
    paid?: boolean | null
  }

  export type leave_typesCreateOrConnectWithoutLeave_balancesInput = {
    where: leave_typesWhereUniqueInput
    create: XOR<leave_typesCreateWithoutLeave_balancesInput, leave_typesUncheckedCreateWithoutLeave_balancesInput>
  }

  export type usersUpsertWithoutLeave_balancesInput = {
    update: XOR<usersUpdateWithoutLeave_balancesInput, usersUncheckedUpdateWithoutLeave_balancesInput>
    create: XOR<usersCreateWithoutLeave_balancesInput, usersUncheckedCreateWithoutLeave_balancesInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutLeave_balancesInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutLeave_balancesInput, usersUncheckedUpdateWithoutLeave_balancesInput>
  }

  export type usersUpdateWithoutLeave_balancesInput = {
    empid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    contact_number?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    position?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_joining?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableIntFieldUpdateOperationsInput | number | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verified?: NullableEnumusers_verifiedFieldUpdateOperationsInput | $Enums.users_verified | null
    employees?: employeesUpdateManyWithoutUsersNestedInput
    leave_requests?: leave_requestsUpdateManyWithoutUsersNestedInput
    payroll?: payrollUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutLeave_balancesInput = {
    id?: IntFieldUpdateOperationsInput | number
    empid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    contact_number?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    position?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_joining?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableIntFieldUpdateOperationsInput | number | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verified?: NullableEnumusers_verifiedFieldUpdateOperationsInput | $Enums.users_verified | null
    employees?: employeesUncheckedUpdateManyWithoutUsersNestedInput
    leave_requests?: leave_requestsUncheckedUpdateManyWithoutUsersNestedInput
    payroll?: payrollUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type leave_typesUpsertWithoutLeave_balancesInput = {
    update: XOR<leave_typesUpdateWithoutLeave_balancesInput, leave_typesUncheckedUpdateWithoutLeave_balancesInput>
    create: XOR<leave_typesCreateWithoutLeave_balancesInput, leave_typesUncheckedCreateWithoutLeave_balancesInput>
    where?: leave_typesWhereInput
  }

  export type leave_typesUpdateToOneWithWhereWithoutLeave_balancesInput = {
    where?: leave_typesWhereInput
    data: XOR<leave_typesUpdateWithoutLeave_balancesInput, leave_typesUncheckedUpdateWithoutLeave_balancesInput>
  }

  export type leave_typesUpdateWithoutLeave_balancesInput = {
    type_name?: Enumleave_types_type_nameFieldUpdateOperationsInput | $Enums.leave_types_type_name
    max_days?: IntFieldUpdateOperationsInput | number
    paid?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type leave_typesUncheckedUpdateWithoutLeave_balancesInput = {
    id?: IntFieldUpdateOperationsInput | number
    type_name?: Enumleave_types_type_nameFieldUpdateOperationsInput | $Enums.leave_types_type_name
    max_days?: IntFieldUpdateOperationsInput | number
    paid?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type usersCreateWithoutLeave_requestsInput = {
    empid: string
    name: string
    email: string
    contact_number?: string | null
    password: string
    position?: string | null
    date_of_joining?: Date | string | null
    status?: string | null
    experience?: number | null
    profile_photo?: string | null
    role?: $Enums.users_role
    created_at?: Date | string | null
    verified?: $Enums.users_verified | null
    employees?: employeesCreateNestedManyWithoutUsersInput
    leave_balances?: leave_balancesCreateNestedManyWithoutUsersInput
    payroll?: payrollCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutLeave_requestsInput = {
    id?: number
    empid: string
    name: string
    email: string
    contact_number?: string | null
    password: string
    position?: string | null
    date_of_joining?: Date | string | null
    status?: string | null
    experience?: number | null
    profile_photo?: string | null
    role?: $Enums.users_role
    created_at?: Date | string | null
    verified?: $Enums.users_verified | null
    employees?: employeesUncheckedCreateNestedManyWithoutUsersInput
    leave_balances?: leave_balancesUncheckedCreateNestedManyWithoutUsersInput
    payroll?: payrollUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutLeave_requestsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutLeave_requestsInput, usersUncheckedCreateWithoutLeave_requestsInput>
  }

  export type usersUpsertWithoutLeave_requestsInput = {
    update: XOR<usersUpdateWithoutLeave_requestsInput, usersUncheckedUpdateWithoutLeave_requestsInput>
    create: XOR<usersCreateWithoutLeave_requestsInput, usersUncheckedCreateWithoutLeave_requestsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutLeave_requestsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutLeave_requestsInput, usersUncheckedUpdateWithoutLeave_requestsInput>
  }

  export type usersUpdateWithoutLeave_requestsInput = {
    empid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    contact_number?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    position?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_joining?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableIntFieldUpdateOperationsInput | number | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verified?: NullableEnumusers_verifiedFieldUpdateOperationsInput | $Enums.users_verified | null
    employees?: employeesUpdateManyWithoutUsersNestedInput
    leave_balances?: leave_balancesUpdateManyWithoutUsersNestedInput
    payroll?: payrollUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutLeave_requestsInput = {
    id?: IntFieldUpdateOperationsInput | number
    empid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    contact_number?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    position?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_joining?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableIntFieldUpdateOperationsInput | number | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verified?: NullableEnumusers_verifiedFieldUpdateOperationsInput | $Enums.users_verified | null
    employees?: employeesUncheckedUpdateManyWithoutUsersNestedInput
    leave_balances?: leave_balancesUncheckedUpdateManyWithoutUsersNestedInput
    payroll?: payrollUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type employeesCreateWithoutUsersInput = {
    candidate_id?: string | null
    name?: string | null
    contact_no?: string | null
    password?: string | null
    gender?: string | null
    dob?: Date | string | null
    aadhar_card?: string | null
    pan_card?: string | null
    education_certificates?: string | null
    resume?: string | null
    experience_certificate?: string | null
    profile_photo?: string | null
    created_at?: Date | string | null
    experience_years?: number | null
    experience_months?: number | null
    employee_type?: $Enums.employees_employee_type | null
    aadhar_number?: string | null
    pan_number?: string | null
    addresses?: addressesCreateNestedManyWithoutEmployeesInput
    audit_logs_audit_logs_empidToemployees?: audit_logsCreateNestedManyWithoutEmployees_audit_logs_empidToemployeesInput
    audit_logs_audit_logs_performed_byToemployees?: audit_logsCreateNestedManyWithoutEmployees_audit_logs_performed_byToemployeesInput
    bank_details?: bank_detailsCreateNestedManyWithoutEmployeesInput
    compliance_documents?: compliance_documentsCreateNestedManyWithoutEmployeesInput
    compliance_status?: compliance_statusCreateNestedOneWithoutEmployeesInput
  }

  export type employeesUncheckedCreateWithoutUsersInput = {
    empid?: number
    candidate_id?: string | null
    name?: string | null
    contact_no?: string | null
    password?: string | null
    gender?: string | null
    dob?: Date | string | null
    aadhar_card?: string | null
    pan_card?: string | null
    education_certificates?: string | null
    resume?: string | null
    experience_certificate?: string | null
    profile_photo?: string | null
    created_at?: Date | string | null
    experience_years?: number | null
    experience_months?: number | null
    employee_type?: $Enums.employees_employee_type | null
    aadhar_number?: string | null
    pan_number?: string | null
    addresses?: addressesUncheckedCreateNestedManyWithoutEmployeesInput
    audit_logs_audit_logs_empidToemployees?: audit_logsUncheckedCreateNestedManyWithoutEmployees_audit_logs_empidToemployeesInput
    audit_logs_audit_logs_performed_byToemployees?: audit_logsUncheckedCreateNestedManyWithoutEmployees_audit_logs_performed_byToemployeesInput
    bank_details?: bank_detailsUncheckedCreateNestedManyWithoutEmployeesInput
    compliance_documents?: compliance_documentsUncheckedCreateNestedManyWithoutEmployeesInput
    compliance_status?: compliance_statusUncheckedCreateNestedOneWithoutEmployeesInput
  }

  export type employeesCreateOrConnectWithoutUsersInput = {
    where: employeesWhereUniqueInput
    create: XOR<employeesCreateWithoutUsersInput, employeesUncheckedCreateWithoutUsersInput>
  }

  export type employeesCreateManyUsersInputEnvelope = {
    data: employeesCreateManyUsersInput | employeesCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type leave_balancesCreateWithoutUsersInput = {
    total: number
    used?: number | null
    remaining?: number | null
    leave_types: leave_typesCreateNestedOneWithoutLeave_balancesInput
  }

  export type leave_balancesUncheckedCreateWithoutUsersInput = {
    id?: number
    type_id: number
    total: number
    used?: number | null
    remaining?: number | null
  }

  export type leave_balancesCreateOrConnectWithoutUsersInput = {
    where: leave_balancesWhereUniqueInput
    create: XOR<leave_balancesCreateWithoutUsersInput, leave_balancesUncheckedCreateWithoutUsersInput>
  }

  export type leave_balancesCreateManyUsersInputEnvelope = {
    data: leave_balancesCreateManyUsersInput | leave_balancesCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type leave_requestsCreateWithoutUsersInput = {
    from_date: Date | string
    to_date: Date | string
    reason?: string | null
    status?: $Enums.leave_requests_status | null
    applied_at?: Date | string | null
    attachment?: string | null
    leave_type: string
    name: string
  }

  export type leave_requestsUncheckedCreateWithoutUsersInput = {
    id?: number
    from_date: Date | string
    to_date: Date | string
    reason?: string | null
    status?: $Enums.leave_requests_status | null
    applied_at?: Date | string | null
    attachment?: string | null
    leave_type: string
    name: string
  }

  export type leave_requestsCreateOrConnectWithoutUsersInput = {
    where: leave_requestsWhereUniqueInput
    create: XOR<leave_requestsCreateWithoutUsersInput, leave_requestsUncheckedCreateWithoutUsersInput>
  }

  export type leave_requestsCreateManyUsersInputEnvelope = {
    data: leave_requestsCreateManyUsersInput | leave_requestsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type payrollCreateWithoutUsersInput = {
    month?: string | null
    year?: number | null
    basic_salary?: Decimal | DecimalJsLike | number | string | null
    hra?: Decimal | DecimalJsLike | number | string | null
    bonus?: Decimal | DecimalJsLike | number | string | null
    da?: Decimal | DecimalJsLike | number | string | null
    allowances?: Decimal | DecimalJsLike | number | string | null
    deductions?: Decimal | DecimalJsLike | number | string | null
    net_pay?: Decimal | DecimalJsLike | number | string | null
    generated_on?: Date | string | null
    payslip_pdf?: string | null
    pf?: Decimal | DecimalJsLike | number | string | null
    ptax?: Decimal | DecimalJsLike | number | string | null
    esic?: Decimal | DecimalJsLike | number | string | null
  }

  export type payrollUncheckedCreateWithoutUsersInput = {
    id?: number
    month?: string | null
    year?: number | null
    basic_salary?: Decimal | DecimalJsLike | number | string | null
    hra?: Decimal | DecimalJsLike | number | string | null
    bonus?: Decimal | DecimalJsLike | number | string | null
    da?: Decimal | DecimalJsLike | number | string | null
    allowances?: Decimal | DecimalJsLike | number | string | null
    deductions?: Decimal | DecimalJsLike | number | string | null
    net_pay?: Decimal | DecimalJsLike | number | string | null
    generated_on?: Date | string | null
    payslip_pdf?: string | null
    pf?: Decimal | DecimalJsLike | number | string | null
    ptax?: Decimal | DecimalJsLike | number | string | null
    esic?: Decimal | DecimalJsLike | number | string | null
  }

  export type payrollCreateOrConnectWithoutUsersInput = {
    where: payrollWhereUniqueInput
    create: XOR<payrollCreateWithoutUsersInput, payrollUncheckedCreateWithoutUsersInput>
  }

  export type payrollCreateManyUsersInputEnvelope = {
    data: payrollCreateManyUsersInput | payrollCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type employeesUpsertWithWhereUniqueWithoutUsersInput = {
    where: employeesWhereUniqueInput
    update: XOR<employeesUpdateWithoutUsersInput, employeesUncheckedUpdateWithoutUsersInput>
    create: XOR<employeesCreateWithoutUsersInput, employeesUncheckedCreateWithoutUsersInput>
  }

  export type employeesUpdateWithWhereUniqueWithoutUsersInput = {
    where: employeesWhereUniqueInput
    data: XOR<employeesUpdateWithoutUsersInput, employeesUncheckedUpdateWithoutUsersInput>
  }

  export type employeesUpdateManyWithWhereWithoutUsersInput = {
    where: employeesScalarWhereInput
    data: XOR<employeesUpdateManyMutationInput, employeesUncheckedUpdateManyWithoutUsersInput>
  }

  export type employeesScalarWhereInput = {
    AND?: employeesScalarWhereInput | employeesScalarWhereInput[]
    OR?: employeesScalarWhereInput[]
    NOT?: employeesScalarWhereInput | employeesScalarWhereInput[]
    empid?: IntFilter<"employees"> | number
    candidate_id?: StringNullableFilter<"employees"> | string | null
    name?: StringNullableFilter<"employees"> | string | null
    email?: StringNullableFilter<"employees"> | string | null
    contact_no?: StringNullableFilter<"employees"> | string | null
    password?: StringNullableFilter<"employees"> | string | null
    gender?: StringNullableFilter<"employees"> | string | null
    dob?: DateTimeNullableFilter<"employees"> | Date | string | null
    aadhar_card?: StringNullableFilter<"employees"> | string | null
    pan_card?: StringNullableFilter<"employees"> | string | null
    education_certificates?: StringNullableFilter<"employees"> | string | null
    resume?: StringNullableFilter<"employees"> | string | null
    experience_certificate?: StringNullableFilter<"employees"> | string | null
    profile_photo?: StringNullableFilter<"employees"> | string | null
    created_at?: DateTimeNullableFilter<"employees"> | Date | string | null
    experience_years?: IntNullableFilter<"employees"> | number | null
    experience_months?: IntNullableFilter<"employees"> | number | null
    employee_type?: Enumemployees_employee_typeNullableFilter<"employees"> | $Enums.employees_employee_type | null
    aadhar_number?: StringNullableFilter<"employees"> | string | null
    pan_number?: StringNullableFilter<"employees"> | string | null
  }

  export type leave_balancesUpsertWithWhereUniqueWithoutUsersInput = {
    where: leave_balancesWhereUniqueInput
    update: XOR<leave_balancesUpdateWithoutUsersInput, leave_balancesUncheckedUpdateWithoutUsersInput>
    create: XOR<leave_balancesCreateWithoutUsersInput, leave_balancesUncheckedCreateWithoutUsersInput>
  }

  export type leave_balancesUpdateWithWhereUniqueWithoutUsersInput = {
    where: leave_balancesWhereUniqueInput
    data: XOR<leave_balancesUpdateWithoutUsersInput, leave_balancesUncheckedUpdateWithoutUsersInput>
  }

  export type leave_balancesUpdateManyWithWhereWithoutUsersInput = {
    where: leave_balancesScalarWhereInput
    data: XOR<leave_balancesUpdateManyMutationInput, leave_balancesUncheckedUpdateManyWithoutUsersInput>
  }

  export type leave_requestsUpsertWithWhereUniqueWithoutUsersInput = {
    where: leave_requestsWhereUniqueInput
    update: XOR<leave_requestsUpdateWithoutUsersInput, leave_requestsUncheckedUpdateWithoutUsersInput>
    create: XOR<leave_requestsCreateWithoutUsersInput, leave_requestsUncheckedCreateWithoutUsersInput>
  }

  export type leave_requestsUpdateWithWhereUniqueWithoutUsersInput = {
    where: leave_requestsWhereUniqueInput
    data: XOR<leave_requestsUpdateWithoutUsersInput, leave_requestsUncheckedUpdateWithoutUsersInput>
  }

  export type leave_requestsUpdateManyWithWhereWithoutUsersInput = {
    where: leave_requestsScalarWhereInput
    data: XOR<leave_requestsUpdateManyMutationInput, leave_requestsUncheckedUpdateManyWithoutUsersInput>
  }

  export type leave_requestsScalarWhereInput = {
    AND?: leave_requestsScalarWhereInput | leave_requestsScalarWhereInput[]
    OR?: leave_requestsScalarWhereInput[]
    NOT?: leave_requestsScalarWhereInput | leave_requestsScalarWhereInput[]
    id?: IntFilter<"leave_requests"> | number
    empid?: StringFilter<"leave_requests"> | string
    from_date?: DateTimeFilter<"leave_requests"> | Date | string
    to_date?: DateTimeFilter<"leave_requests"> | Date | string
    reason?: StringNullableFilter<"leave_requests"> | string | null
    status?: Enumleave_requests_statusNullableFilter<"leave_requests"> | $Enums.leave_requests_status | null
    applied_at?: DateTimeNullableFilter<"leave_requests"> | Date | string | null
    attachment?: StringNullableFilter<"leave_requests"> | string | null
    leave_type?: StringFilter<"leave_requests"> | string
    name?: StringFilter<"leave_requests"> | string
  }

  export type payrollUpsertWithWhereUniqueWithoutUsersInput = {
    where: payrollWhereUniqueInput
    update: XOR<payrollUpdateWithoutUsersInput, payrollUncheckedUpdateWithoutUsersInput>
    create: XOR<payrollCreateWithoutUsersInput, payrollUncheckedCreateWithoutUsersInput>
  }

  export type payrollUpdateWithWhereUniqueWithoutUsersInput = {
    where: payrollWhereUniqueInput
    data: XOR<payrollUpdateWithoutUsersInput, payrollUncheckedUpdateWithoutUsersInput>
  }

  export type payrollUpdateManyWithWhereWithoutUsersInput = {
    where: payrollScalarWhereInput
    data: XOR<payrollUpdateManyMutationInput, payrollUncheckedUpdateManyWithoutUsersInput>
  }

  export type payrollScalarWhereInput = {
    AND?: payrollScalarWhereInput | payrollScalarWhereInput[]
    OR?: payrollScalarWhereInput[]
    NOT?: payrollScalarWhereInput | payrollScalarWhereInput[]
    id?: IntFilter<"payroll"> | number
    empid?: StringNullableFilter<"payroll"> | string | null
    month?: StringNullableFilter<"payroll"> | string | null
    year?: IntNullableFilter<"payroll"> | number | null
    basic_salary?: DecimalNullableFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    hra?: DecimalNullableFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    bonus?: DecimalNullableFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    da?: DecimalNullableFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    allowances?: DecimalNullableFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    deductions?: DecimalNullableFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    net_pay?: DecimalNullableFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    generated_on?: DateTimeNullableFilter<"payroll"> | Date | string | null
    payslip_pdf?: StringNullableFilter<"payroll"> | string | null
    pf?: DecimalNullableFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    ptax?: DecimalNullableFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
    esic?: DecimalNullableFilter<"payroll"> | Decimal | DecimalJsLike | number | string | null
  }

  export type usersCreateWithoutPayrollInput = {
    empid: string
    name: string
    email: string
    contact_number?: string | null
    password: string
    position?: string | null
    date_of_joining?: Date | string | null
    status?: string | null
    experience?: number | null
    profile_photo?: string | null
    role?: $Enums.users_role
    created_at?: Date | string | null
    verified?: $Enums.users_verified | null
    employees?: employeesCreateNestedManyWithoutUsersInput
    leave_balances?: leave_balancesCreateNestedManyWithoutUsersInput
    leave_requests?: leave_requestsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutPayrollInput = {
    id?: number
    empid: string
    name: string
    email: string
    contact_number?: string | null
    password: string
    position?: string | null
    date_of_joining?: Date | string | null
    status?: string | null
    experience?: number | null
    profile_photo?: string | null
    role?: $Enums.users_role
    created_at?: Date | string | null
    verified?: $Enums.users_verified | null
    employees?: employeesUncheckedCreateNestedManyWithoutUsersInput
    leave_balances?: leave_balancesUncheckedCreateNestedManyWithoutUsersInput
    leave_requests?: leave_requestsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutPayrollInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutPayrollInput, usersUncheckedCreateWithoutPayrollInput>
  }

  export type usersUpsertWithoutPayrollInput = {
    update: XOR<usersUpdateWithoutPayrollInput, usersUncheckedUpdateWithoutPayrollInput>
    create: XOR<usersCreateWithoutPayrollInput, usersUncheckedCreateWithoutPayrollInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutPayrollInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutPayrollInput, usersUncheckedUpdateWithoutPayrollInput>
  }

  export type usersUpdateWithoutPayrollInput = {
    empid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    contact_number?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    position?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_joining?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableIntFieldUpdateOperationsInput | number | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verified?: NullableEnumusers_verifiedFieldUpdateOperationsInput | $Enums.users_verified | null
    employees?: employeesUpdateManyWithoutUsersNestedInput
    leave_balances?: leave_balancesUpdateManyWithoutUsersNestedInput
    leave_requests?: leave_requestsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutPayrollInput = {
    id?: IntFieldUpdateOperationsInput | number
    empid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    contact_number?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    position?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_joining?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableIntFieldUpdateOperationsInput | number | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verified?: NullableEnumusers_verifiedFieldUpdateOperationsInput | $Enums.users_verified | null
    employees?: employeesUncheckedUpdateManyWithoutUsersNestedInput
    leave_balances?: leave_balancesUncheckedUpdateManyWithoutUsersNestedInput
    leave_requests?: leave_requestsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type addressesCreateManyEmployeesInput = {
    id?: number
    address_line1: string
    address_line2?: string | null
    city: string
    state: string
    country: string
    pincode: string
  }

  export type audit_logsCreateManyEmployees_audit_logs_empidToemployeesInput = {
    id?: number
    performed_by?: number | null
    action?: string | null
    timestamp?: Date | string | null
  }

  export type audit_logsCreateManyEmployees_audit_logs_performed_byToemployeesInput = {
    id?: number
    empid?: number | null
    action?: string | null
    timestamp?: Date | string | null
  }

  export type bank_detailsCreateManyEmployeesInput = {
    id?: number
    account_holder_name: string
    bank_name: string
    branch_name?: string | null
    account_number: string
    ifsc_code: string
    checkbook_document?: string | null
  }

  export type compliance_documentsCreateManyEmployeesInput = {
    id?: number
    doc_type?: string | null
    file_path?: string | null
    uploaded_at?: Date | string | null
    expires_on?: Date | string | null
  }

  export type addressesUpdateWithoutEmployeesInput = {
    address_line1?: StringFieldUpdateOperationsInput | string
    address_line2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    pincode?: StringFieldUpdateOperationsInput | string
  }

  export type addressesUncheckedUpdateWithoutEmployeesInput = {
    id?: IntFieldUpdateOperationsInput | number
    address_line1?: StringFieldUpdateOperationsInput | string
    address_line2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    pincode?: StringFieldUpdateOperationsInput | string
  }

  export type addressesUncheckedUpdateManyWithoutEmployeesInput = {
    id?: IntFieldUpdateOperationsInput | number
    address_line1?: StringFieldUpdateOperationsInput | string
    address_line2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    pincode?: StringFieldUpdateOperationsInput | string
  }

  export type audit_logsUpdateWithoutEmployees_audit_logs_empidToemployeesInput = {
    action?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    employees_audit_logs_performed_byToemployees?: employeesUpdateOneWithoutAudit_logs_audit_logs_performed_byToemployeesNestedInput
  }

  export type audit_logsUncheckedUpdateWithoutEmployees_audit_logs_empidToemployeesInput = {
    id?: IntFieldUpdateOperationsInput | number
    performed_by?: NullableIntFieldUpdateOperationsInput | number | null
    action?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type audit_logsUncheckedUpdateManyWithoutEmployees_audit_logs_empidToemployeesInput = {
    id?: IntFieldUpdateOperationsInput | number
    performed_by?: NullableIntFieldUpdateOperationsInput | number | null
    action?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type audit_logsUpdateWithoutEmployees_audit_logs_performed_byToemployeesInput = {
    action?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    employees_audit_logs_empidToemployees?: employeesUpdateOneWithoutAudit_logs_audit_logs_empidToemployeesNestedInput
  }

  export type audit_logsUncheckedUpdateWithoutEmployees_audit_logs_performed_byToemployeesInput = {
    id?: IntFieldUpdateOperationsInput | number
    empid?: NullableIntFieldUpdateOperationsInput | number | null
    action?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type audit_logsUncheckedUpdateManyWithoutEmployees_audit_logs_performed_byToemployeesInput = {
    id?: IntFieldUpdateOperationsInput | number
    empid?: NullableIntFieldUpdateOperationsInput | number | null
    action?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type bank_detailsUpdateWithoutEmployeesInput = {
    account_holder_name?: StringFieldUpdateOperationsInput | string
    bank_name?: StringFieldUpdateOperationsInput | string
    branch_name?: NullableStringFieldUpdateOperationsInput | string | null
    account_number?: StringFieldUpdateOperationsInput | string
    ifsc_code?: StringFieldUpdateOperationsInput | string
    checkbook_document?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type bank_detailsUncheckedUpdateWithoutEmployeesInput = {
    id?: IntFieldUpdateOperationsInput | number
    account_holder_name?: StringFieldUpdateOperationsInput | string
    bank_name?: StringFieldUpdateOperationsInput | string
    branch_name?: NullableStringFieldUpdateOperationsInput | string | null
    account_number?: StringFieldUpdateOperationsInput | string
    ifsc_code?: StringFieldUpdateOperationsInput | string
    checkbook_document?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type bank_detailsUncheckedUpdateManyWithoutEmployeesInput = {
    id?: IntFieldUpdateOperationsInput | number
    account_holder_name?: StringFieldUpdateOperationsInput | string
    bank_name?: StringFieldUpdateOperationsInput | string
    branch_name?: NullableStringFieldUpdateOperationsInput | string | null
    account_number?: StringFieldUpdateOperationsInput | string
    ifsc_code?: StringFieldUpdateOperationsInput | string
    checkbook_document?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type compliance_documentsUpdateWithoutEmployeesInput = {
    doc_type?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    uploaded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expires_on?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type compliance_documentsUncheckedUpdateWithoutEmployeesInput = {
    id?: IntFieldUpdateOperationsInput | number
    doc_type?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    uploaded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expires_on?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type compliance_documentsUncheckedUpdateManyWithoutEmployeesInput = {
    id?: IntFieldUpdateOperationsInput | number
    doc_type?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    uploaded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expires_on?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type leave_balancesCreateManyLeave_typesInput = {
    id?: number
    empid: string
    total: number
    used?: number | null
    remaining?: number | null
  }

  export type leave_balancesUpdateWithoutLeave_typesInput = {
    total?: IntFieldUpdateOperationsInput | number
    used?: NullableIntFieldUpdateOperationsInput | number | null
    remaining?: NullableIntFieldUpdateOperationsInput | number | null
    users?: usersUpdateOneRequiredWithoutLeave_balancesNestedInput
  }

  export type leave_balancesUncheckedUpdateWithoutLeave_typesInput = {
    id?: IntFieldUpdateOperationsInput | number
    empid?: StringFieldUpdateOperationsInput | string
    total?: IntFieldUpdateOperationsInput | number
    used?: NullableIntFieldUpdateOperationsInput | number | null
    remaining?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type leave_balancesUncheckedUpdateManyWithoutLeave_typesInput = {
    id?: IntFieldUpdateOperationsInput | number
    empid?: StringFieldUpdateOperationsInput | string
    total?: IntFieldUpdateOperationsInput | number
    used?: NullableIntFieldUpdateOperationsInput | number | null
    remaining?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type employeesCreateManyUsersInput = {
    empid?: number
    candidate_id?: string | null
    name?: string | null
    contact_no?: string | null
    password?: string | null
    gender?: string | null
    dob?: Date | string | null
    aadhar_card?: string | null
    pan_card?: string | null
    education_certificates?: string | null
    resume?: string | null
    experience_certificate?: string | null
    profile_photo?: string | null
    created_at?: Date | string | null
    experience_years?: number | null
    experience_months?: number | null
    employee_type?: $Enums.employees_employee_type | null
    aadhar_number?: string | null
    pan_number?: string | null
  }

  export type leave_balancesCreateManyUsersInput = {
    id?: number
    type_id: number
    total: number
    used?: number | null
    remaining?: number | null
  }

  export type leave_requestsCreateManyUsersInput = {
    id?: number
    from_date: Date | string
    to_date: Date | string
    reason?: string | null
    status?: $Enums.leave_requests_status | null
    applied_at?: Date | string | null
    attachment?: string | null
    leave_type: string
    name: string
  }

  export type payrollCreateManyUsersInput = {
    id?: number
    month?: string | null
    year?: number | null
    basic_salary?: Decimal | DecimalJsLike | number | string | null
    hra?: Decimal | DecimalJsLike | number | string | null
    bonus?: Decimal | DecimalJsLike | number | string | null
    da?: Decimal | DecimalJsLike | number | string | null
    allowances?: Decimal | DecimalJsLike | number | string | null
    deductions?: Decimal | DecimalJsLike | number | string | null
    net_pay?: Decimal | DecimalJsLike | number | string | null
    generated_on?: Date | string | null
    payslip_pdf?: string | null
    pf?: Decimal | DecimalJsLike | number | string | null
    ptax?: Decimal | DecimalJsLike | number | string | null
    esic?: Decimal | DecimalJsLike | number | string | null
  }

  export type employeesUpdateWithoutUsersInput = {
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_no?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    dob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aadhar_card?: NullableStringFieldUpdateOperationsInput | string | null
    pan_card?: NullableStringFieldUpdateOperationsInput | string | null
    education_certificates?: NullableStringFieldUpdateOperationsInput | string | null
    resume?: NullableStringFieldUpdateOperationsInput | string | null
    experience_certificate?: NullableStringFieldUpdateOperationsInput | string | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    experience_years?: NullableIntFieldUpdateOperationsInput | number | null
    experience_months?: NullableIntFieldUpdateOperationsInput | number | null
    employee_type?: NullableEnumemployees_employee_typeFieldUpdateOperationsInput | $Enums.employees_employee_type | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    pan_number?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: addressesUpdateManyWithoutEmployeesNestedInput
    audit_logs_audit_logs_empidToemployees?: audit_logsUpdateManyWithoutEmployees_audit_logs_empidToemployeesNestedInput
    audit_logs_audit_logs_performed_byToemployees?: audit_logsUpdateManyWithoutEmployees_audit_logs_performed_byToemployeesNestedInput
    bank_details?: bank_detailsUpdateManyWithoutEmployeesNestedInput
    compliance_documents?: compliance_documentsUpdateManyWithoutEmployeesNestedInput
    compliance_status?: compliance_statusUpdateOneWithoutEmployeesNestedInput
  }

  export type employeesUncheckedUpdateWithoutUsersInput = {
    empid?: IntFieldUpdateOperationsInput | number
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_no?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    dob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aadhar_card?: NullableStringFieldUpdateOperationsInput | string | null
    pan_card?: NullableStringFieldUpdateOperationsInput | string | null
    education_certificates?: NullableStringFieldUpdateOperationsInput | string | null
    resume?: NullableStringFieldUpdateOperationsInput | string | null
    experience_certificate?: NullableStringFieldUpdateOperationsInput | string | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    experience_years?: NullableIntFieldUpdateOperationsInput | number | null
    experience_months?: NullableIntFieldUpdateOperationsInput | number | null
    employee_type?: NullableEnumemployees_employee_typeFieldUpdateOperationsInput | $Enums.employees_employee_type | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    pan_number?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: addressesUncheckedUpdateManyWithoutEmployeesNestedInput
    audit_logs_audit_logs_empidToemployees?: audit_logsUncheckedUpdateManyWithoutEmployees_audit_logs_empidToemployeesNestedInput
    audit_logs_audit_logs_performed_byToemployees?: audit_logsUncheckedUpdateManyWithoutEmployees_audit_logs_performed_byToemployeesNestedInput
    bank_details?: bank_detailsUncheckedUpdateManyWithoutEmployeesNestedInput
    compliance_documents?: compliance_documentsUncheckedUpdateManyWithoutEmployeesNestedInput
    compliance_status?: compliance_statusUncheckedUpdateOneWithoutEmployeesNestedInput
  }

  export type employeesUncheckedUpdateManyWithoutUsersInput = {
    empid?: IntFieldUpdateOperationsInput | number
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_no?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    dob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aadhar_card?: NullableStringFieldUpdateOperationsInput | string | null
    pan_card?: NullableStringFieldUpdateOperationsInput | string | null
    education_certificates?: NullableStringFieldUpdateOperationsInput | string | null
    resume?: NullableStringFieldUpdateOperationsInput | string | null
    experience_certificate?: NullableStringFieldUpdateOperationsInput | string | null
    profile_photo?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    experience_years?: NullableIntFieldUpdateOperationsInput | number | null
    experience_months?: NullableIntFieldUpdateOperationsInput | number | null
    employee_type?: NullableEnumemployees_employee_typeFieldUpdateOperationsInput | $Enums.employees_employee_type | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    pan_number?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type leave_balancesUpdateWithoutUsersInput = {
    total?: IntFieldUpdateOperationsInput | number
    used?: NullableIntFieldUpdateOperationsInput | number | null
    remaining?: NullableIntFieldUpdateOperationsInput | number | null
    leave_types?: leave_typesUpdateOneRequiredWithoutLeave_balancesNestedInput
  }

  export type leave_balancesUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    type_id?: IntFieldUpdateOperationsInput | number
    total?: IntFieldUpdateOperationsInput | number
    used?: NullableIntFieldUpdateOperationsInput | number | null
    remaining?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type leave_balancesUncheckedUpdateManyWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    type_id?: IntFieldUpdateOperationsInput | number
    total?: IntFieldUpdateOperationsInput | number
    used?: NullableIntFieldUpdateOperationsInput | number | null
    remaining?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type leave_requestsUpdateWithoutUsersInput = {
    from_date?: DateTimeFieldUpdateOperationsInput | Date | string
    to_date?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumleave_requests_statusFieldUpdateOperationsInput | $Enums.leave_requests_status | null
    applied_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attachment?: NullableStringFieldUpdateOperationsInput | string | null
    leave_type?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type leave_requestsUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    from_date?: DateTimeFieldUpdateOperationsInput | Date | string
    to_date?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumleave_requests_statusFieldUpdateOperationsInput | $Enums.leave_requests_status | null
    applied_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attachment?: NullableStringFieldUpdateOperationsInput | string | null
    leave_type?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type leave_requestsUncheckedUpdateManyWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    from_date?: DateTimeFieldUpdateOperationsInput | Date | string
    to_date?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumleave_requests_statusFieldUpdateOperationsInput | $Enums.leave_requests_status | null
    applied_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attachment?: NullableStringFieldUpdateOperationsInput | string | null
    leave_type?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type payrollUpdateWithoutUsersInput = {
    month?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    basic_salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    hra?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    da?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    allowances?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deductions?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    net_pay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    generated_on?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payslip_pdf?: NullableStringFieldUpdateOperationsInput | string | null
    pf?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ptax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    esic?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type payrollUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    month?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    basic_salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    hra?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    da?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    allowances?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deductions?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    net_pay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    generated_on?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payslip_pdf?: NullableStringFieldUpdateOperationsInput | string | null
    pf?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ptax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    esic?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type payrollUncheckedUpdateManyWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    month?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    basic_salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    hra?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    da?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    allowances?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deductions?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    net_pay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    generated_on?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payslip_pdf?: NullableStringFieldUpdateOperationsInput | string | null
    pf?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ptax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    esic?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}