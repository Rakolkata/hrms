"use strict";(()=>{var e={};e.id=6602,e.ids=[6602],e.modules={2983:(e,r,t)=>{t.d(r,{A:()=>o});let n=require("mysql2/promise"),o=t.n(n)().createPool({host:process.env.DB_HOST,user:process.env.DB_USER,password:process.env.DB_PASSWORD,database:process.env.DB_NAME})},3480:(e,r,t)=>{e.exports=t(5600)},5600:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6435:(e,r)=>{Object.defineProperty(r,"M",{enumerable:!0,get:function(){return function e(r,t){return t in r?r[t]:"then"in r&&"function"==typeof r.then?r.then(r=>e(r,t)):"function"==typeof r&&"default"===t?r:void 0}}})},6496:(e,r,t)=>{t.r(r),t.d(r,{config:()=>d,default:()=>l,routeModule:()=>p});var n={};t.r(n),t.d(n,{default:()=>u});var o=t(3480),s=t(8667),a=t(6435),i=t(2983);async function u(e,r){if("GET"!==e.method)return r.status(405).json({message:"Method not allowed"});let{empid:t}=e.query;if(!t)return r.status(400).json({message:"Employee ID is required"});try{let[e]=await i.A.execute("SELECT * FROM payroll WHERE empid = ? ORDER BY year DESC, month DESC",[t]);r.status(200).json(e)}catch(e){console.error("Error fetching employee payroll:",e),r.status(500).json({message:"Database error"})}}let l=(0,a.M)(n,"default"),d=(0,a.M)(n,"config"),p=new o.PagesAPIRouteModule({definition:{kind:s.A.PAGES_API,page:"/api/hr/payroll/get",pathname:"/api/hr/payroll/get",bundlePath:"",filename:""},userland:n})},8667:(e,r)=>{Object.defineProperty(r,"A",{enumerable:!0,get:function(){return t}});var t=function(e){return e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE",e.IMAGE="IMAGE",e}({})}};var r=require("../../../../webpack-api-runtime.js");r.C(e);var t=r(r.s=6496);module.exports=t})();